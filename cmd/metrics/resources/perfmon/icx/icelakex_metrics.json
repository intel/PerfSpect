{
  "Header": {
    "Copyright": "Copyright (c) 2001 - 2025 Intel Corporation. All rights reserved.",
    "Info": "Performance Monitoring Metrics for 3rd Generation Intel(R) Xeon(R) Processor Scalable Family based on Ice Lake microarchitecture0",
    "DatePublished": "06/17/2025",
    "Version": "1.1",
    "Legend": "",
    "TmaVersion": "5.1",
    "TmaFlavor": "Full"
  },
  "Metrics": [
    {
      "MetricName": "cpu_operating_frequency",
      "LegacyName": "metric_CPU operating frequency (in GHz)",
      "Level": 1,
      "BriefDescription": "CPU operating frequency (in GHz)",
      "UnitOfMeasure": "GHz",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "b"
        }
      ],
      "Constants": [
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "c"
        }
      ],
      "Formula": "(a / b * c) / 1000000000",
      "Category": "Freq",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "cpu_utilization",
      "LegacyName": "metric_CPU utilization %",
      "Level": 1,
      "BriefDescription": "Percentage of time spent in the active CPU power state C0",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "a"
        },
        {
          "Name": "TSC",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * a / b",
      "Category": "Util",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "cpi",
      "LegacyName": "metric_CPI",
      "Level": 1,
      "BriefDescription": "Cycles per instruction retired; indicating how much time each executed instruction took; in units of cycles.",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "CPI",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "loads_per_instr",
      "LegacyName": "metric_loads per instr",
      "Level": 1,
      "BriefDescription": "The ratio of number of completed memory load instructions to the total number completed instructions",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "MEM_INST_RETIRED.ALL_LOADS",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "stores_per_instr",
      "LegacyName": "metric_stores per instr",
      "Level": 1,
      "BriefDescription": "The ratio of number of completed memory store instructions to the total number completed instructions",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "MEM_INST_RETIRED.ALL_STORES",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "l1d_mpi",
      "LegacyName": "metric_L1D MPI (includes data+rfo w/ prefetches)",
      "Level": 1,
      "BriefDescription": "Ratio of number of requests missing L1 data cache (includes data+rfo w/ prefetches) to the total number of completed instructions",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "L1D.REPLACEMENT",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "MPI, D-side",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "l1d_demand_data_read_hits_per_instr",
      "LegacyName": "metric_L1D demand data read hits per instr",
      "Level": 1,
      "BriefDescription": "Ratio of number of demand load requests hitting in L1 data cache to the total number of completed instructions ",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "MEM_LOAD_RETIRED.L1_HIT",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "D-side",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "l1_i_code_read_misses_with_prefetches_per_instr",
      "LegacyName": "metric_L1-I code read misses (w/ prefetches) per instr",
      "Level": 1,
      "BriefDescription": "Ratio of number of code read requests missing in L1 instruction cache (includes prefetches) to the total number of completed instructions",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "L2_RQSTS.ALL_CODE_RD",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "MPI, I-side",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "l2_demand_data_read_hits_per_instr",
      "LegacyName": "metric_L2 demand data read hits per instr",
      "Level": 1,
      "BriefDescription": "Ratio of number of completed demand load requests hitting in L2 cache to the total number of completed instructions ",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "MEM_LOAD_RETIRED.L2_HIT",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "D-side",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "l2_mpi",
      "LegacyName": "metric_L2 MPI (includes code+data+rfo w/ prefetches)",
      "Level": 1,
      "BriefDescription": "Ratio of number of requests missing L2 cache (includes code+data+rfo w/ prefetches) to the total number of completed instructions",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "L2_LINES_IN.ALL",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "MPI",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "l2_demand_data_read_mpi",
      "LegacyName": "metric_L2 demand data read MPI",
      "Level": 1,
      "BriefDescription": "Ratio of number of completed data read request missing L2 cache to the total number of completed instructions",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "MEM_LOAD_RETIRED.L2_MISS",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "MPI, D-side",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "l2_demand_code_mpi",
      "LegacyName": "metric_L2 demand code MPI",
      "Level": 1,
      "BriefDescription": "Ratio of number of code read request missing L2 cache to the total number of completed instructions",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "L2_RQSTS.CODE_RD_MISS",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "MPI, I-side",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "llc_data_read_mpi_demand_plus_prefetch",
      "LegacyName": "metric_LLC data read MPI (demand+prefetch)",
      "Level": 1,
      "BriefDescription": "Ratio of number of data read requests missing last level core cache (includes demand w/ prefetches) to the total number of completed instructions",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_LLCPREFDATA",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD",
          "Alias": "b"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD_PREF",
          "Alias": "c"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "(a + b + c) / d",
      "Category": "MPI, D-side",
      "ResolutionLevels": "SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "llc_code_read_mpi_demand_plus_prefetch",
      "LegacyName": "metric_LLC code read MPI (demand+prefetch)",
      "Level": 1,
      "BriefDescription": "Ratio of number of code read requests missing last level core cache (includes demand w/ prefetches) to the total number of completed instructions",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_CRD",
          "Alias": "b"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_CRD_PREF",
          "Alias": "c"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "(b + c) / d",
      "Category": "MPI, I-side",
      "ResolutionLevels": "SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "llc_demand_data_read_miss_latency",
      "LegacyName": "metric_Average LLC demand data read miss latency (in ns)",
      "Level": 1,
      "BriefDescription": "Average latency of a last level cache (LLC) demand data read miss (read memory access) in nano seconds",
      "UnitOfMeasure": "ns",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_OCCUPANCY.IA_MISS_DRD",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD",
          "Alias": "b"
        },
        {
          "Name": "UNC_CHA_CLOCKTICKS",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "CHAS_PER_SOCKET",
          "Alias": "d"
        },
        {
          "Name": "SOCKET_COUNT",
          "Alias": "socket_count"
        }
      ],
      "Formula": "( 1000000000 * (a / b) / (c / (d * socket_count) ) ) * DURATIONTIMEINSECONDS",
      "Category": "Latency",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "llc_demand_data_read_miss_latency_for_local_requests",
      "LegacyName": "metric_Average LLC demand data read miss latency for LOCAL requests (in ns)",
      "Level": 1,
      "BriefDescription": "Average latency of a last level cache (LLC) demand data read miss (read memory access) addressed to local memory in nano seconds",
      "UnitOfMeasure": "ns",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_OCCUPANCY.IA_MISS_DRD_LOCAL",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD_LOCAL",
          "Alias": "b"
        },
        {
          "Name": "UNC_CHA_CLOCKTICKS",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "CHAS_PER_SOCKET",
          "Alias": "d"
        },
        {
          "Name": "SOCKET_COUNT",
          "Alias": "socket_count"
        }
      ],
      "Formula": "( 1000000000 * (a / b) / (c / (d * socket_count) ) ) * DURATIONTIMEINSECONDS",
      "Category": "Latency",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "llc_demand_data_read_miss_latency_for_remote_requests",
      "LegacyName": "metric_Average LLC demand data read miss latency for REMOTE requests (in ns)",
      "Level": 1,
      "BriefDescription": "Average latency of a last level cache (LLC) demand data read miss (read memory access) addressed to remote memory in nano seconds",
      "UnitOfMeasure": "ns",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_OCCUPANCY.IA_MISS_DRD_REMOTE",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD_REMOTE",
          "Alias": "b"
        },
        {
          "Name": "UNC_CHA_CLOCKTICKS",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "CHAS_PER_SOCKET",
          "Alias": "d"
        },
        {
          "Name": "SOCKET_COUNT",
          "Alias": "socket_count"
        }
      ],
      "Formula": "( 1000000000 * (a / b) / (c / (d * socket_count) ) ) * DURATIONTIMEINSECONDS",
      "Category": "Latency",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "llc_demand_data_read_miss_to_pmem_latency",
      "LegacyName": "metric_Average LLC demand data read miss to DCPMEM latency (in ns)",
      "Level": 1,
      "BriefDescription": "Average latency of a last level cache (LLC) demand data read miss (read memory access) addressed to Intel(R) Optane(TM) Persistent Memory(PMEM) in nano seconds",
      "UnitOfMeasure": "ns",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_OCCUPANCY.IA_MISS_DRD_PMM",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD_PMM",
          "Alias": "b"
        },
        {
          "Name": "UNC_CHA_CLOCKTICKS",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "CHAS_PER_SOCKET",
          "Alias": "d"
        },
        {
          "Name": "SOCKET_COUNT",
          "Alias": "socket_count"
        }
      ],
      "Formula": "( 1000000000 * (a / b) / (c / (d * socket_count) ) ) * DURATIONTIMEINSECONDS",
      "Category": "Latency",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "llc_demand_data_read_miss_to_dram_latency",
      "LegacyName": "metric_Average LLC demand data read miss to DRAM latency (in ns)",
      "Level": 1,
      "BriefDescription": "Average latency of a last level cache (LLC) demand data read miss (read memory access) addressed to DRAM in nano seconds",
      "UnitOfMeasure": "ns",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_OCCUPANCY.IA_MISS_DRD_DDR",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD_DDR",
          "Alias": "b"
        },
        {
          "Name": "UNC_CHA_CLOCKTICKS",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "CHAS_PER_SOCKET",
          "Alias": "d"
        },
        {
          "Name": "SOCKET_COUNT",
          "Alias": "socket_count"
        }
      ],
      "Formula": "( 1000000000 * (a / b) / (c / (d * socket_count) ) ) * DURATIONTIMEINSECONDS",
      "Category": "Latency",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "itlb_2nd_level_mpi",
      "LegacyName": "metric_ITLB (2nd level) MPI",
      "Level": 1,
      "BriefDescription": "Ratio of number of completed page walks (for all page sizes) caused by a code fetch to the total number of completed instructions. This implies it missed in the ITLB (Instruction TLB) and further levels of TLB.",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "ITLB_MISSES.WALK_COMPLETED",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "MPI, I-side",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "itlb_2nd_level_large_page_mpi",
      "LegacyName": "metric_ITLB (2nd level) large page MPI",
      "Level": 1,
      "BriefDescription": "Ratio of number of completed page walks (for 2 megabyte and 4 megabyte page sizes) caused by a code fetch to the total number of completed instructions. This implies it missed in the Instruction Translation Lookaside Buffer (ITLB) and further levels of TLB.",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "ITLB_MISSES.WALK_COMPLETED_2M_4M",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "MPI",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "dtlb_2nd_level_load_mpi",
      "LegacyName": "metric_DTLB (2nd level) load MPI",
      "Level": 1,
      "BriefDescription": "Ratio of number of completed page walks (for all page sizes) caused by demand data loads to the total number of completed instructions. This implies it missed in the DTLB and further levels of TLB.",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "DTLB_LOAD_MISSES.WALK_COMPLETED",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "MPI, D-side",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "dtlb_2nd_level_2mb_large_page_load_mpi",
      "LegacyName": "metric_DTLB (2nd level) 2MB large page load MPI",
      "Level": 1,
      "BriefDescription": "Ratio of number of completed page walks (for 2 megabyte page sizes) caused by demand data loads to the total number of completed instructions. This implies it missed in the Data Translation Lookaside Buffer (DTLB) and further levels of TLB.",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "DTLB_LOAD_MISSES.WALK_COMPLETED_2M_4M",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "MPI, D-side",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "dtlb_2nd_level_store_mpi",
      "LegacyName": "metric_DTLB (2nd level) store MPI",
      "Level": 1,
      "BriefDescription": "Ratio of number of completed page walks (for all page sizes) caused by demand data stores to the total number of completed instructions. This implies it missed in the DTLB and further levels of TLB.",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "DTLB_STORE_MISSES.WALK_COMPLETED",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "Category": "MPI, D-side",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "numa_reads_addressed_to_local_dram",
      "LegacyName": "metric_NUMA %_Reads addressed to local DRAM",
      "Level": 1,
      "BriefDescription": "Memory read that miss the last level cache (LLC) addressed to local DRAM as a percentage of total memory read accesses, does not include LLC prefetches.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD_LOCAL",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD_PREF_LOCAL",
          "Alias": "b"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD_REMOTE",
          "Alias": "c"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD_PREF_REMOTE",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "100 * (a + b) / (a + b + c + d)",
      "Category": "NUMA",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "numa_reads_addressed_to_remote_dram",
      "LegacyName": "metric_NUMA %_Reads addressed to remote DRAM",
      "Level": 1,
      "BriefDescription": "Memory reads that miss the last level cache (LLC) addressed to remote DRAM as a percentage of total memory read accesses, does not include LLC prefetches.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD_LOCAL",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD_PREF_LOCAL",
          "Alias": "b"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD_REMOTE",
          "Alias": "c"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD_PREF_REMOTE",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "100 * (c + d) / (a + b + c + d)",
      "Category": "NUMA",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "uncore_frequency",
      "LegacyName": "metric_uncore frequency GHz",
      "Level": 1,
      "BriefDescription": "Uncore operating frequency in GHz",
      "UnitOfMeasure": "GHz",
      "Events": [
        {
          "Name": "UNC_CHA_CLOCKTICKS",
          "Alias": "a"
        }
      ],
      "Constants": [
        {
          "Name": "CHAS_PER_SOCKET",
          "Alias": "b"
        },
        {
          "Name": "SOCKET_COUNT",
          "Alias": "socket_count"
        }
      ],
      "Formula": "(a / (b * socket_count) / 1000000000) / DURATIONTIMEINSECONDS",
      "Category": "Freq",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "upi_data_transmit_bw",
      "LegacyName": "metric_UPI Data transmit BW (MB/sec) (only data)",
      "Level": 1,
      "BriefDescription": "Intel(R) Ultra Path Interconnect (UPI) data transmit bandwidth (MB/sec)",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_UPI_TxL_FLITS.ALL_DATA",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "(a * (64 / 9.0) / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW",
      "ResolutionLevels": "UPI, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "memory_bandwidth_read",
      "LegacyName": "metric_memory bandwidth read (MB/sec)",
      "Level": 1,
      "BriefDescription": "DDR memory read bandwidth (MB/sec)",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_M_CAS_COUNT.RD",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "(a * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW, MC",
      "ResolutionLevels": "CHANNEL, IMC, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "memory_bandwidth_write",
      "LegacyName": "metric_memory bandwidth write (MB/sec)",
      "Level": 1,
      "BriefDescription": "DDR memory write bandwidth (MB/sec)",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_M_CAS_COUNT.WR",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "(a * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW, MC",
      "ResolutionLevels": "CHANNEL, IMC, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "memory_bandwidth_total",
      "LegacyName": "metric_memory bandwidth total (MB/sec)",
      "Level": 1,
      "BriefDescription": "DDR memory bandwidth (MB/sec)",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_M_CAS_COUNT.RD",
          "Alias": "a"
        },
        {
          "Name": "UNC_M_CAS_COUNT.WR",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "((a + b) * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW, MC",
      "ResolutionLevels": "CHANNEL, IMC, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "memory_extra_write_bw_due_to_directory_updates",
      "LegacyName": "metric_memory extra write b/w due to directory updates (MB/sec)",
      "Level": 1,
      "BriefDescription": "Memory write bandwidth (MB/sec) caused by directory updates; includes DDR and Intel(R) Optane(TM) Persistent Memory(PMEM).",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_CHA_DIR_UPDATE.HA",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_DIR_UPDATE.TOR",
          "Alias": "b"
        },
        {
          "Name": "UNC_M2M_DIRECTORY_UPDATE.ANY",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "((a + b + c) * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW, MC",
      "ResolutionLevels": "SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "pmem_memory_bandwidth_read",
      "LegacyName": "metric_3DXP_memory bandwidth read (MB/sec)",
      "Level": 1,
      "BriefDescription": "Intel(R) Optane(TM) Persistent Memory(PMEM) memory read bandwidth (MB/sec)",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_M_PMM_RPQ_INSERTS",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "(a * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "",
      "ResolutionLevels": "CHANNEL, IMC, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "pmem_memory_bandwidth_write",
      "LegacyName": "metric_3DXP_memory bandwidth write (MB/sec)",
      "Level": 1,
      "BriefDescription": "Intel(R) Optane(TM) Persistent Memory(PMEM) memory write bandwidth (MB/sec)",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_M_PMM_WPQ_INSERTS",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "(a * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "",
      "ResolutionLevels": "CHANNEL, IMC, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "pmem_memory_bandwidth_total",
      "LegacyName": "metric_3DXP_memory bandwidth total (MB/sec)",
      "Level": 1,
      "BriefDescription": "Intel(R) Optane(TM) Persistent Memory(PMEM) memory bandwidth (MB/sec)",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_M_PMM_RPQ_INSERTS",
          "Alias": "a"
        },
        {
          "Name": "UNC_M_PMM_WPQ_INSERTS",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "((a + b) * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "",
      "ResolutionLevels": "CHANNEL, IMC, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "io_bandwidth_read",
      "LegacyName": "metric_IO_bandwidth_disk_or_network_writes (MB/sec)",
      "Level": 1,
      "BriefDescription": "Bandwidth of IO reads that are initiated by end device controllers that are requesting memory from the CPU.",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_HIT_PCIRDCUR",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_MISS_PCIRDCUR",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "((a + b) * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW, IO",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "io_bandwidth_write",
      "LegacyName": "metric_IO_bandwidth_disk_or_network_reads (MB/sec)",
      "Level": 1,
      "BriefDescription": "Bandwidth of IO writes that are initiated by end device controllers that are writing memory to the CPU.",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_HIT_ITOM",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_MISS_ITOM",
          "Alias": "b"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_HIT_ITOMCACHENEAR",
          "Alias": "c"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_MISS_ITOMCACHENEAR",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "((a + b + c + d) * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW, IO",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "io_read_l3_miss",
      "LegacyName": "metric_IO % of inbound reads that miss L3",
      "Level": 1,
      "BriefDescription": "The percent of inbound reads initiated by IO that miss the L3 cache.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_MISS_PCIRDCUR",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_PCIRDCUR",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * a / b",
      "Category": "IO",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "io_partial_write_l3_miss",
      "LegacyName": "metric_IO % of inbound partial writes that miss L3",
      "Level": 1,
      "BriefDescription": "The percent of inbound partial writes initiated by IO that miss the L3 cache.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_ITOMCACHENEAR",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_MISS_ITOMCACHENEAR",
          "Alias": "b"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_RFO",
          "Alias": "c"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_MISS_RFO",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "100 * ((b + d) / (a + c) )",
      "Category": "IO",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "io_full_write_l3_miss",
      "LegacyName": "metric_IO % of inbound full writes that miss L3",
      "Level": 1,
      "BriefDescription": "The percent of inbound full cache line writes initiated by IO that miss the L3 cache.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_ITOM",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_MISS_ITOM",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * (b / a)",
      "Category": "IO",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "percent_uops_delivered_from_decoded_icache",
      "LegacyName": "metric_% Uops delivered from decoded Icache (DSB)",
      "Level": 1,
      "BriefDescription": "Uops delivered from decoded instruction cache (decoded stream buffer or DSB) as a percent of total uops delivered to Instruction Decode Queue",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "IDQ.DSB_UOPS",
          "Alias": "a"
        },
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "b"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "c"
        },
        {
          "Name": "LSD.UOPS",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "100 * (a / (a + b + c + d) )",
      "Category": "I-side",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "percent_uops_delivered_from_legacy_decode_pipeline",
      "LegacyName": "metric_% Uops delivered from legacy decode pipeline (MITE)",
      "Level": 1,
      "BriefDescription": "Uops delivered from legacy decode pipeline (Micro-instruction Translation Engine or MITE) as a percent of total uops delivered to Instruction Decode Queue",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "IDQ.DSB_UOPS",
          "Alias": "a"
        },
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "b"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "c"
        },
        {
          "Name": "LSD.UOPS",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "100 * (b / (a + b + c + d) )",
      "Category": "I-side",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "percent_uops_delivered_from_microcode_sequencer",
      "LegacyName": "metric_% Uops delivered from microcode sequencer (MS)",
      "Level": 1,
      "BriefDescription": "Uops delivered from microcode sequencer (MS) as a percent of total uops delivered to Instruction Decode Queue",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "IDQ.DSB_UOPS",
          "Alias": "a"
        },
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "b"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "c"
        },
        {
          "Name": "LSD.UOPS",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "100 * (c / (a + b + c + d) )",
      "Category": "I-side",
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "io_bandwidth_read_local",
      "LegacyName": "metric_IO bandwidth read local (MB/sec)",
      "Level": 1,
      "BriefDescription": "Bandwidth of IO reads that are initiated by end device controllers that are requesting memory from the local CPU socket.",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_PCIRDCUR_LOCAL",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "(a * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW,IO",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "io_bandwidth_read_remote",
      "LegacyName": "metric_IO bandwidth read remote (MB/sec)",
      "Level": 1,
      "BriefDescription": "Bandwidth of IO reads that are initiated by end device controllers that are requesting memory from a remote CPU socket.",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_PCIRDCUR_REMOTE",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "(a * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW,IO",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "io_bandwidth_write_local",
      "LegacyName": "metric_IO bandwidth write local (MB/sec)",
      "Level": 1,
      "BriefDescription": "Bandwidth of IO writes that are initiated by end device controllers that are writing memory to the local CPU socket.",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_ITOM_LOCAL",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_ITOMCACHENEAR_LOCAL",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "((a + b) * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW,IO",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "io_bandwidth_write_remote",
      "LegacyName": "metric_IO bandwidth write remote (MB/sec)",
      "Level": 1,
      "BriefDescription": "Bandwidth of IO writes that are initiated by end device controllers that are writing memory to a remote CPU socket.",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_ITOM_REMOTE",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_ITOMCACHENEAR_REMOTE",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "((a + b) * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW,IO",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "llc_miss_local_memory_bandwidth_read",
      "LegacyName": "metric_llc_miss_local_memory_bandwidth_read_MB/s",
      "Level": 1,
      "BriefDescription": "Bandwidth (MB/sec) of read requests that miss the last level cache (LLC) and go to local memory.",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_CHA_REQUESTS.READS_LOCAL",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "(a * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "llc_miss_local_memory_bandwidth_write",
      "LegacyName": "metric_llc_miss_local_memory_bandwidth_write_MB/s",
      "Level": 1,
      "BriefDescription": "Bandwidth (MB/sec) of write requests that miss the last level cache (LLC) and go to local memory.",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_CHA_REQUESTS.WRITES_LOCAL",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "(a * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "llc_miss_remote_memory_bandwidth_read",
      "LegacyName": "metric_llc_miss_remote_memory_bandwidth_read_MB/s",
      "Level": 1,
      "BriefDescription": "Bandwidth (MB/sec) of read requests that miss the last level cache (LLC) and go to remote memory.",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_CHA_REQUESTS.READS_REMOTE",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "(a * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "llc_miss_remote_memory_bandwidth_write",
      "LegacyName": "metric_llc_miss_remote_memory_bandwidth_write_MB/s",
      "Level": 1,
      "BriefDescription": "Bandwidth (MB/sec) of write requests that miss the last level cache (LLC) and go to remote memory.",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_CHA_REQUESTS.WRITES_REMOTE",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "(a * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "upi_data_receive_bw",
      "LegacyName": "metric_UPI Data receive BW (MB/sec) (only data)",
      "Level": 1,
      "BriefDescription": "Intel(R) Ultra Path Interconnect (UPI) data receive bandwidth (MB/sec)",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_UPI_RxL_FLITS.ALL_DATA",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "(a * (64 / 9.0) / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "BW",
      "ResolutionLevels": "UPI, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "io_bandwidth_read_l3_miss",
      "LegacyName": "metric_IO_bandwidth_read_L3_miss (MB/sec)",
      "Level": 1,
      "BriefDescription": "Bandwidth of inbound IO reads that are initiated by end device controllers that are requesting memory from the CPU and miss the L3 cache.",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_MISS_PCIRDCUR",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "(a * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "IO",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "io_bandwidth_write_l3_miss",
      "LegacyName": "metric_IO_bandwidth_write_L3_miss (MB/sec)",
      "Level": 1,
      "BriefDescription": "Bandwidth of inbound IO writes that are initiated by end device controllers that are writing memory to the CPU.",
      "UnitOfMeasure": "MB/sec",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_MISS_ITOM",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_MISS_ITOMCACHENEAR",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "((a + b) * 64 / 1000000) / DURATIONTIMEINSECONDS",
      "Category": "IO",
      "ResolutionLevels": "CHA, SOCKET, SYSTEM",
      "MetricGroup": ""
    },
    {
      "MetricName": "Bottleneck_Mispredictions",
      "LegacyName": "metric_TMA_Bottleneck_Mispredictions",
      "Level": 1,
      "BriefDescription": "Total pipeline cost of Branch Misprediction related bottlenecks",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "a"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "b"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "c"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "d"
        },
        {
          "Name": "BR_MISP_RETIRED.ALL_BRANCHES",
          "Alias": "e"
        },
        {
          "Name": "MACHINE_CLEARS.COUNT",
          "Alias": "f"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "g"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "h"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "i"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "j"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "k"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "l"
        },
        {
          "Name": "IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE",
          "Alias": "m"
        },
        {
          "Name": "INT_MISC.CLEAR_RESTEER_CYCLES",
          "Alias": "n"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "o"
        },
        {
          "Name": "ICACHE_DATA.STALLS",
          "Alias": "p"
        },
        {
          "Name": "ICACHE_TAG.STALLS",
          "Alias": "q"
        },
        {
          "Name": "BACLEARS.ANY",
          "Alias": "r"
        },
        {
          "Name": "IDQ.MS_SWITCHES",
          "Alias": "s"
        },
        {
          "Name": "DECODE.LCP",
          "Alias": "t"
        },
        {
          "Name": "DSB2MITE_SWITCHES.PENALTY_CYCLES",
          "Alias": "u"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( 1 - ( 10 * ( ( a / b ) * c / ( d ) ) * ( max( ( ( e / ( e + f ) ) * ( max( 1 - ( ( g / ( g + h + i + j ) - k / ( d ) ) + ( j / ( g + h + i + j ) + ( ( 5 ) * l ) / ( d ) ) + ( i / ( g + h + i + j ) ) ) , 0 ) ) ) * ( 1 - e / ( l - f ) ) , 0.0001 ) ) / ( ( e / ( e + f ) ) * ( max( 1 - ( ( g / ( g + h + i + j ) - k / ( d ) ) + ( j / ( g + h + i + j ) + ( ( 5 ) * l ) / ( d ) ) + ( i / ( g + h + i + j ) ) ) , 0 ) ) ) ) ) * ( ( ( e / ( e + f ) ) * ( max( 1 - ( ( g / ( g + h + i + j ) - k / ( d ) ) + ( j / ( g + h + i + j ) + ( ( 5 ) * l ) / ( d ) ) + ( i / ( g + h + i + j ) ) ) , 0 ) ) ) + ( ( ( 5 ) * m - k ) / ( d ) ) * ( ( e / ( e + f ) ) * n / ( o ) ) / ( ( p / ( o ) ) + ( q / ( o ) ) + ( n / ( o ) + ( 10 ) * r / ( o ) ) + ( ( 3 ) * s / ( o ) ) + ( t / ( o ) ) + ( u / ( o ) ) ) )",
      "BaseFormula": "100 * ( 1 - ( 10 * tma_microcode_sequencer * tma_other_mispredicts / tma_branch_mispredicts ) ) * ( tma_branch_mispredicts + tma_fetch_latency * tma_mispredicts_resteers / ( tma_icache_misses + tma_itlb_misses + tma_branch_resteers + tma_ms_switches + tma_lcp + tma_dsb_switches ) )",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Bottleneck_Mispredictions"
          }
        ],
        "Formula": "a > 20",
        "BaseFormula": "metric_TMA_Bottleneck_Mispredictions > 20",
        "ThresholdIssues": "$issueBM"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Bad;BadSpec;BrMispredicts;BvMP",
      "LocateWith": ""
    },
    {
      "MetricName": "Bottleneck_Big_Code",
      "LegacyName": "metric_TMA_Bottleneck_Big_Code",
      "Level": 1,
      "BriefDescription": "Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE",
          "Alias": "a"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "b"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "c"
        },
        {
          "Name": "ICACHE_TAG.STALLS",
          "Alias": "d"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "e"
        },
        {
          "Name": "ICACHE_DATA.STALLS",
          "Alias": "f"
        },
        {
          "Name": "BACLEARS.ANY",
          "Alias": "g"
        },
        {
          "Name": "INT_MISC.CLEAR_RESTEER_CYCLES",
          "Alias": "h"
        },
        {
          "Name": "IDQ.MS_SWITCHES",
          "Alias": "i"
        },
        {
          "Name": "DECODE.LCP",
          "Alias": "j"
        },
        {
          "Name": "DSB2MITE_SWITCHES.PENALTY_CYCLES",
          "Alias": "k"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( ( 5 ) * a - b ) / ( c ) ) * ( ( d / ( e ) ) + ( f / ( e ) ) + ( ( 10 ) * g / ( e ) ) ) / ( ( f / ( e ) ) + ( d / ( e ) ) + ( h / ( e ) + ( 10 ) * g / ( e ) ) + ( ( 3 ) * i / ( e ) ) + ( j / ( e ) ) + ( k / ( e ) ) )",
      "BaseFormula": "100 * tma_fetch_latency * ( tma_itlb_misses + tma_icache_misses + tma_unknown_branches ) / ( tma_icache_misses + tma_itlb_misses + tma_branch_resteers + tma_ms_switches + tma_lcp + tma_dsb_switches )",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Bottleneck_Big_Code"
          }
        ],
        "Formula": "a > 20",
        "BaseFormula": "metric_TMA_Bottleneck_Big_Code > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvBC;BigFootprint;Fed;Frontend;IcMiss;MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Bottleneck_Instruction_Fetch_BW",
      "LegacyName": "metric_TMA_Bottleneck_Instruction_Fetch_BW",
      "Level": 1,
      "BriefDescription": "Total pipeline cost of instruction fetch bandwidth related bottlenecks (when the front-end could not sustain operations delivery to the back-end)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "a_a"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "e"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "f"
        },
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "g"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "h"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "i"
        },
        {
          "Name": "BR_MISP_RETIRED.ALL_BRANCHES",
          "Alias": "j"
        },
        {
          "Name": "MACHINE_CLEARS.COUNT",
          "Alias": "k"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "l"
        },
        {
          "Name": "IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE",
          "Alias": "m"
        },
        {
          "Name": "INT_MISC.CLEAR_RESTEER_CYCLES",
          "Alias": "n"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "o"
        },
        {
          "Name": "ICACHE_DATA.STALLS",
          "Alias": "p"
        },
        {
          "Name": "ICACHE_TAG.STALLS",
          "Alias": "q"
        },
        {
          "Name": "BACLEARS.ANY",
          "Alias": "r"
        },
        {
          "Name": "IDQ.MS_SWITCHES",
          "Alias": "s"
        },
        {
          "Name": "DECODE.LCP",
          "Alias": "t"
        },
        {
          "Name": "DSB2MITE_SWITCHES.PENALTY_CYCLES",
          "Alias": "u"
        },
        {
          "Name": "UOPS_DECODED.DEC0",
          "Alias": "v"
        },
        {
          "Name": "UOPS_DECODED.DEC0:c1",
          "Alias": "w"
        },
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "x"
        },
        {
          "Name": "ASSISTS.ANY",
          "Alias": "y"
        },
        {
          "Name": "IDQ.MS_UOPS:c1",
          "Alias": "z"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( a / ( a + b + c + d ) - e / ( f ) ) - ( 1 - ( 10 * ( ( g / h ) * i / ( f ) ) * ( max( ( ( j / ( j + k ) ) * ( max( 1 - ( ( a / ( a + b + c + d ) - e / ( f ) ) + ( d / ( a + b + c + d ) + ( ( 5 ) * l ) / ( f ) ) + ( c / ( a + b + c + d ) ) ) , 0 ) ) ) * ( 1 - j / ( l - k ) ) , 0.0001 ) ) / ( ( j / ( j + k ) ) * ( max( 1 - ( ( a / ( a + b + c + d ) - e / ( f ) ) + ( d / ( a + b + c + d ) + ( ( 5 ) * l ) / ( f ) ) + ( c / ( a + b + c + d ) ) ) , 0 ) ) ) ) ) * ( ( ( 5 ) * m - e ) / ( f ) ) * ( ( j / ( j + k ) ) * n / ( o ) ) / ( ( p / ( o ) ) + ( q / ( o ) ) + ( n / ( o ) + ( 10 ) * r / ( o ) ) + ( ( 3 ) * s / ( o ) ) + ( t / ( o ) ) + ( u / ( o ) ) ) - ( ( ( ( ( g / h ) * i / ( f ) ) / ( ( ( ( ( g / h ) * i / ( f ) ) + ( c / ( a + b + c + d ) ) * ( v - w ) / x ) - ( ( g / h ) * i / ( f ) ) ) + ( ( g / h ) * i / ( f ) ) ) ) * ( ( ( 34 ) * y / ( f ) ) / ( ( g / h ) * i / ( f ) ) ) ) * ( ( ( ( 5 ) * m - e ) / ( f ) ) * ( ( ( 3 ) * s / ( o ) ) + ( n / ( o ) + ( 10 ) * r / ( o ) ) * ( ( ( 1 - ( j / ( j + k ) ) ) * n / ( o ) ) + ( 10 * ( ( g / h ) * i / ( f ) ) * ( max( ( ( j / ( j + k ) ) * ( max( 1 - ( ( a / ( a + b + c + d ) - e / ( f ) ) + ( d / ( a + b + c + d ) + ( ( 5 ) * l ) / ( f ) ) + ( c / ( a + b + c + d ) ) ) , 0 ) ) ) * ( 1 - j / ( l - k ) ) , 0.0001 ) ) / ( ( j / ( j + k ) ) * ( max( 1 - ( ( a / ( a + b + c + d ) - e / ( f ) ) + ( d / ( a + b + c + d ) + ( ( 5 ) * l ) / ( f ) ) + ( c / ( a + b + c + d ) ) ) , 0 ) ) ) ) * ( ( j / ( j + k ) ) * n / ( o ) ) ) / ( ( ( j / ( j + k ) ) * n / ( o ) ) + ( ( 1 - ( j / ( j + k ) ) ) * n / ( o ) ) + ( ( 10 ) * r / ( o ) ) ) ) / ( ( p / ( o ) ) + ( q / ( o ) ) + ( n / ( o ) + ( 10 ) * r / ( o ) ) + ( ( 3 ) * s / ( o ) ) + ( t / ( o ) ) + ( u / ( o ) ) ) + ( z / ( a_a if smt_on else ( o ) ) / 3.3 ) ) ) ) - ( 100 * ( ( ( 5 ) * m - e ) / ( f ) ) * ( ( q / ( o ) ) + ( p / ( o ) ) + ( ( 10 ) * r / ( o ) ) ) / ( ( p / ( o ) ) + ( q / ( o ) ) + ( n / ( o ) + ( 10 ) * r / ( o ) ) + ( ( 3 ) * s / ( o ) ) + ( t / ( o ) ) + ( u / ( o ) ) ) )",
      "BaseFormula": "100 * ( tma_frontend_bound - ( 1 - ( 10 * tma_microcode_sequencer * tma_other_mispredicts / tma_branch_mispredicts ) ) * tma_fetch_latency * tma_mispredicts_resteers / ( tma_icache_misses + tma_itlb_misses + tma_branch_resteers + tma_ms_switches + tma_lcp + tma_dsb_switches ) - ( ( ( tma_microcode_sequencer / ( tma_few_uops_instructions + tma_microcode_sequencer ) ) * ( tma_assists / tma_microcode_sequencer ) ) * ( tma_fetch_latency * ( tma_ms_switches + tma_branch_resteers * ( tma_clears_resteers + ( 10 * tma_microcode_sequencer * tma_other_mispredicts / tma_branch_mispredicts ) * tma_mispredicts_resteers ) / ( tma_mispredicts_resteers + tma_clears_resteers + tma_unknown_branches ) ) / ( tma_icache_misses + tma_itlb_misses + tma_branch_resteers + tma_ms_switches + tma_lcp + tma_dsb_switches ) + tma_ms ) ) ) - tma_bottleneck_big_code",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Bottleneck_Instruction_Fetch_BW"
          }
        ],
        "Formula": "a > 20",
        "BaseFormula": "metric_TMA_Bottleneck_Instruction_Fetch_BW > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvFB;Fed;FetchBW;Frontend",
      "LocateWith": ""
    },
    {
      "MetricName": "Bottleneck_Data_Cache_Memory_Bandwidth",
      "LegacyName": "metric_TMA_Bottleneck_Data_Cache_Memory_Bandwidth",
      "Level": 1,
      "BriefDescription": "Total pipeline cost of external Memory- or Cache-Bandwidth related bottlenecks",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CYCLE_ACTIVITY.STALLS_MEM_ANY",
          "Alias": "a"
        },
        {
          "Name": "OCR.DEMAND_DATA_RD.L3_HIT.SNOOP_HITM",
          "Alias": "a_a"
        },
        {
          "Name": "OCR.DEMAND_DATA_RD.L3_HIT.SNOOP_HIT_WITH_FWD",
          "Alias": "a_b"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS",
          "Alias": "a_c"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT",
          "Alias": "a_d"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L3_HIT",
          "Alias": "a_e"
        },
        {
          "Name": "L1D_PEND_MISS.FB_FULL",
          "Alias": "a_f"
        },
        {
          "Name": "DTLB_LOAD_MISSES.STLB_HIT:c1",
          "Alias": "a_g"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_ACTIVE",
          "Alias": "a_h"
        },
        {
          "Name": "CYCLE_ACTIVITY.CYCLES_MEM_ANY",
          "Alias": "a_i"
        },
        {
          "Name": "CYCLE_ACTIVITY.CYCLES_L1D_MISS",
          "Alias": "a_j"
        },
        {
          "Name": "LD_BLOCKS.STORE_FORWARD",
          "Alias": "a_k"
        },
        {
          "Name": "MEM_INST_RETIRED.ALL_LOADS",
          "Alias": "a_l"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "a_m"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "a_n"
        },
        {
          "Name": "MEM_INST_RETIRED.LOCK_LOADS",
          "Alias": "a_p"
        },
        {
          "Name": "L2_RQSTS.ALL_RFO",
          "Alias": "a_q"
        },
        {
          "Name": "MEM_INST_RETIRED.ALL_STORES",
          "Alias": "a_r"
        },
        {
          "Name": "L2_RQSTS.RFO_HIT",
          "Alias": "a_s"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO",
          "Alias": "a_t"
        },
        {
          "Name": "L1D_PEND_MISS.PENDING",
          "Alias": "a_u"
        },
        {
          "Name": "LD_BLOCKS.NO_SR",
          "Alias": "a_v"
        },
        {
          "Name": "LD_BLOCKS_PARTIAL.ADDRESS_ALIAS",
          "Alias": "a_w"
        },
        {
          "Name": "EXE_ACTIVITY.BOUND_ON_STORES",
          "Alias": "b"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_TOTAL",
          "Alias": "c"
        },
        {
          "Name": "EXE_ACTIVITY.1_PORTS_UTIL",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "e"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "f"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "g"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "h"
        },
        {
          "Name": "EXE_ACTIVITY.2_PORTS_UTIL",
          "Alias": "i"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "j"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "k"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L3_MISS",
          "Alias": "l"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "m"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L1D_MISS",
          "Alias": "n"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L2_MISS",
          "Alias": "o"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L2_HIT",
          "Alias": "p"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "q"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "r"
        },
        {
          "Name": "L1D_PEND_MISS.FB_FULL_PERIODS",
          "Alias": "s"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD:c4",
          "Alias": "t"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD",
          "Alias": "u"
        },
        {
          "Name": "L1D_PEND_MISS.L2_STALL",
          "Alias": "v"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "w"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM",
          "Alias": "z"
        }
      ],
      "Constants": [
        {
          "Name": "20",
          "Alias": "dependentloadsweight"
        },
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        },
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "x"
        }
      ],
      "Formula": "100 * ( ( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) * ( ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) / ( ( max( ( a - n ) / ( m ) , 0 ) ) + ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) + ( ( o - l ) / ( m ) ) + ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) * ( ( ( min( m , t ) ) / ( m ) ) / ( ( ( min( m , t ) ) / ( m ) ) + ( ( min( m , u ) ) / ( m ) - ( ( min( m , t ) ) / ( m ) ) ) ) ) ) + ( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) * ( ( ( o - l ) / ( m ) ) / ( ( max( ( a - n ) / ( m ) , 0 ) ) + ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) + ( ( o - l ) / ( m ) ) + ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) * ( ( v / ( m ) ) / ( ( ( ( ( 48 * ( ( ( m ) / w ) * x / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / w ) * x / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( z * ( a_a / ( a_a + a_b ) ) ) + ( ( 47.5 * ( ( ( m ) / w ) * x / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / w ) * x / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_c ) ) * ( 1 + ( q / r ) / 2 ) / ( m ) ) + ( ( ( 47.5 * ( ( ( m ) / w ) * x / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / w ) * x / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_d + z * ( 1 - ( a_a / ( a_a + a_b ) ) ) ) * ( 1 + ( q / r ) / 2 ) / ( m ) ) + ( ( ( 23 * ( ( ( m ) / w ) * x / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / w ) * x / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_e * ( 1 + ( q / r ) / 2 ) ) / ( m ) ) + ( v / ( m ) ) ) ) ) + ( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) * ( ( max( ( a - n ) / ( m ) , 0 ) ) / ( ( max( ( a - n ) / ( m ) , 0 ) ) + ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) + ( ( o - l ) / ( m ) ) + ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) * ( ( a_f / ( m ) ) / ( ( min( ( 7 ) * a_g + a_h , max( a_i - a_j , 0 ) ) / ( m ) ) + ( 13 * a_k / ( m ) ) + ( min( 2 * ( a_l - a_m - a_n ) * dependentloadsweight / 100 , max( a_i - a_j , 0 ) ) / ( m ) ) + ( ( 16 * max( 0 , a_p - a_q ) + ( a_p / a_r ) * ( ( 10 ) * a_s + ( min( m , a_t ) ) ) ) / ( m ) ) + ( ( a_u / ( a_n + a_m ) ) * a_v / ( m ) ) + ( a_w / ( m ) ) + ( a_f / ( m ) ) ) ) ) )",
      "BaseFormula": "100 * ( ( tma_memory_bound * ( tma_dram_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) * ( tma_mem_bandwidth / ( tma_mem_bandwidth + tma_mem_latency ) ) ) + ( tma_memory_bound * ( tma_l3_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) * ( tma_sq_full / ( tma_contested_accesses + tma_data_sharing + tma_l3_hit_latency + tma_sq_full ) ) ) + ( tma_memory_bound * ( tma_l1_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) * ( tma_fb_full / ( tma_dtlb_load + tma_store_fwd_blk + tma_l1_latency_dependency + tma_lock_latency + tma_split_loads + tma_4k_aliasing + tma_fb_full ) ) ) )",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Bottleneck_Data_Cache_Memory_Bandwidth"
          }
        ],
        "Formula": "a > 20",
        "BaseFormula": "metric_TMA_Bottleneck_Data_Cache_Memory_Bandwidth > 20",
        "ThresholdIssues": "$issueBW"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvMB;Mem;MemoryBW;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "Bottleneck_Data_Cache_Memory_Latency",
      "LegacyName": "metric_TMA_Bottleneck_Data_Cache_Memory_Latency",
      "Level": 1,
      "BriefDescription": "Total pipeline cost of external Memory- or Cache-Latency related bottlenecks",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CYCLE_ACTIVITY.STALLS_MEM_ANY",
          "Alias": "a"
        },
        {
          "Name": "OCR.DEMAND_DATA_RD.L3_HIT.SNOOP_HITM",
          "Alias": "a_a"
        },
        {
          "Name": "OCR.DEMAND_DATA_RD.L3_HIT.SNOOP_HIT_WITH_FWD",
          "Alias": "a_b"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS",
          "Alias": "a_c"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT",
          "Alias": "a_d"
        },
        {
          "Name": "L1D_PEND_MISS.L2_STALL",
          "Alias": "a_e"
        },
        {
          "Name": "MEM_INST_RETIRED.ALL_LOADS",
          "Alias": "a_f"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "a_g"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "a_h"
        },
        {
          "Name": "CYCLE_ACTIVITY.CYCLES_MEM_ANY",
          "Alias": "a_j"
        },
        {
          "Name": "CYCLE_ACTIVITY.CYCLES_L1D_MISS",
          "Alias": "a_k"
        },
        {
          "Name": "DTLB_LOAD_MISSES.STLB_HIT:c1",
          "Alias": "a_l"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_ACTIVE",
          "Alias": "a_m"
        },
        {
          "Name": "LD_BLOCKS.STORE_FORWARD",
          "Alias": "a_n"
        },
        {
          "Name": "MEM_INST_RETIRED.LOCK_LOADS",
          "Alias": "a_o"
        },
        {
          "Name": "L2_RQSTS.ALL_RFO",
          "Alias": "a_p"
        },
        {
          "Name": "MEM_INST_RETIRED.ALL_STORES",
          "Alias": "a_q"
        },
        {
          "Name": "L2_RQSTS.RFO_HIT",
          "Alias": "a_r"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO",
          "Alias": "a_s"
        },
        {
          "Name": "L1D_PEND_MISS.PENDING",
          "Alias": "a_t"
        },
        {
          "Name": "LD_BLOCKS.NO_SR",
          "Alias": "a_u"
        },
        {
          "Name": "LD_BLOCKS_PARTIAL.ADDRESS_ALIAS",
          "Alias": "a_v"
        },
        {
          "Name": "L1D_PEND_MISS.FB_FULL",
          "Alias": "a_w"
        },
        {
          "Name": "MEM_INST_RETIRED.SPLIT_STORES",
          "Alias": "a_x"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "a_y"
        },
        {
          "Name": "OCR.DEMAND_RFO.L3_MISS:ocr_msr_val=0x103b800002",
          "Alias": "a_z"
        },
        {
          "Name": "EXE_ACTIVITY.BOUND_ON_STORES",
          "Alias": "b"
        },
        {
          "Name": "OCR.DEMAND_RFO.L3_HIT.SNOOP_HITM",
          "Alias": "b_a"
        },
        {
          "Name": "OCR.STREAMING_WR.ANY_RESPONSE",
          "Alias": "b_b"
        },
        {
          "Name": "DTLB_STORE_MISSES.STLB_HIT:c1",
          "Alias": "b_c"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_ACTIVE",
          "Alias": "b_d"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_TOTAL",
          "Alias": "c"
        },
        {
          "Name": "EXE_ACTIVITY.1_PORTS_UTIL",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "e"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "f"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "g"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "h"
        },
        {
          "Name": "EXE_ACTIVITY.2_PORTS_UTIL",
          "Alias": "i"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "j"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "k"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L3_MISS",
          "Alias": "l"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "m"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L1D_MISS",
          "Alias": "n"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L2_MISS",
          "Alias": "o"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L2_HIT",
          "Alias": "p"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "q"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "r"
        },
        {
          "Name": "L1D_PEND_MISS.FB_FULL_PERIODS",
          "Alias": "s"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD",
          "Alias": "t"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD:c4",
          "Alias": "u"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "v"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L3_HIT",
          "Alias": "y"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM",
          "Alias": "z"
        }
      ],
      "Constants": [
        {
          "Name": "20",
          "Alias": "dependentloadsweight"
        },
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        },
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        },
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "w"
        }
      ],
      "Formula": "100 * ( ( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) * ( ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) / ( ( max( ( a - n ) / ( m ) , 0 ) ) + ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) + ( ( o - l ) / ( m ) ) + ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) * ( ( ( min( m , t ) ) / ( m ) - ( ( min( m , u ) ) / ( m ) ) ) / ( ( ( min( m , u ) ) / ( m ) ) + ( ( min( m , t ) ) / ( m ) - ( ( min( m , u ) ) / ( m ) ) ) ) ) ) + ( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) * ( ( ( o - l ) / ( m ) ) / ( ( max( ( a - n ) / ( m ) , 0 ) ) + ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) + ( ( o - l ) / ( m ) ) + ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) * ( ( ( ( 23 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( y * ( 1 + ( q / r ) / 2 ) ) / ( m ) ) / ( ( ( ( ( 48 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( z * ( a_a / ( a_a + a_b ) ) ) + ( ( 47.5 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_c ) ) * ( 1 + ( q / r ) / 2 ) / ( m ) ) + ( ( ( 47.5 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_d + z * ( 1 - ( a_a / ( a_a + a_b ) ) ) ) * ( 1 + ( q / r ) / 2 ) / ( m ) ) + ( ( ( 23 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( y * ( 1 + ( q / r ) / 2 ) ) / ( m ) ) + ( a_e / ( m ) ) ) ) ) + ( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) * ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) / ( ( max( ( a - n ) / ( m ) , 0 ) ) + ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) + ( ( o - l ) / ( m ) ) + ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) + ( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) * ( ( max( ( a - n ) / ( m ) , 0 ) ) / ( ( max( ( a - n ) / ( m ) , 0 ) ) + ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) + ( ( o - l ) / ( m ) ) + ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) * ( ( min( 2 * ( a_f - a_g - a_h ) * dependentloadsweight / 100 , max( a_j - a_k , 0 ) ) / ( m ) ) / ( ( min( ( 7 ) * a_l + a_m , max( a_j - a_k , 0 ) ) / ( m ) ) + ( 13 * a_n / ( m ) ) + ( min( 2 * ( a_f - a_g - a_h ) * dependentloadsweight / 100 , max( a_j - a_k , 0 ) ) / ( m ) ) + ( ( 16 * max( 0 , a_o - a_p ) + ( a_o / a_q ) * ( ( 10 ) * a_r + ( min( m , a_s ) ) ) ) / ( m ) ) + ( ( a_t / ( a_h + a_g ) ) * a_u / ( m ) ) + ( a_v / ( m ) ) + ( a_w / ( m ) ) ) ) ) + ( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) * ( ( max( ( a - n ) / ( m ) , 0 ) ) / ( ( max( ( a - n ) / ( m ) , 0 ) ) + ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) + ( ( o - l ) / ( m ) ) + ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) * ( ( ( 16 * max( 0 , a_o - a_p ) + ( a_o / a_q ) * ( ( 10 ) * a_r + ( min( m , a_s ) ) ) ) / ( m ) ) / ( ( min( ( 7 ) * a_l + a_m , max( a_j - a_k , 0 ) ) / ( m ) ) + ( 13 * a_n / ( m ) ) + ( min( 2 * ( a_f - a_g - a_h ) * dependentloadsweight / 100 , max( a_j - a_k , 0 ) ) / ( m ) ) + ( ( 16 * max( 0 , a_o - a_p ) + ( a_o / a_q ) * ( ( 10 ) * a_r + ( min( m , a_s ) ) ) ) / ( m ) ) + ( ( a_t / ( a_h + a_g ) ) * a_u / ( m ) ) + ( a_v / ( m ) ) + ( a_w / ( m ) ) ) ) ) + ( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) * ( ( max( ( a - n ) / ( m ) , 0 ) ) / ( ( max( ( a - n ) / ( m ) , 0 ) ) + ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) + ( ( o - l ) / ( m ) ) + ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) * ( ( ( a_t / ( a_h + a_g ) ) * a_u / ( m ) ) / ( ( min( ( 7 ) * a_l + a_m , max( a_j - a_k , 0 ) ) / ( m ) ) + ( 13 * a_n / ( m ) ) + ( min( 2 * ( a_f - a_g - a_h ) * dependentloadsweight / 100 , max( a_j - a_k , 0 ) ) / ( m ) ) + ( ( 16 * max( 0 , a_o - a_p ) + ( a_o / a_q ) * ( ( 10 ) * a_r + ( min( m , a_s ) ) ) ) / ( m ) ) + ( ( a_t / ( a_h + a_g ) ) * a_u / ( m ) ) + ( a_v / ( m ) ) + ( a_w / ( m ) ) ) ) ) + ( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) * ( ( b / ( m ) ) / ( ( max( ( a - n ) / ( m ) , 0 ) ) + ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) + ( ( o - l ) / ( m ) ) + ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) * ( ( a_x / ( a_y if smt_on else ( m ) ) ) / ( ( ( ( a_r * ( 10 ) * ( 1 - ( a_o / a_q ) ) ) + ( 1 - ( a_o / a_q ) ) * ( min( m , a_s ) ) ) / ( m ) ) + ( ( ( 120 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * a_z + ( 48 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * b_a ) / ( m ) ) + ( a_x / ( a_y if smt_on else ( m ) ) ) + ( 9 * b_b / ( m ) ) + ( ( ( 7 ) * b_c + b_d ) / ( a_y if smt_on else ( m ) ) ) ) ) ) + ( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) * ( ( b / ( m ) ) / ( ( max( ( a - n ) / ( m ) , 0 ) ) + ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) + ( ( o - l ) / ( m ) ) + ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) * ( ( ( ( a_r * ( 10 ) * ( 1 - ( a_o / a_q ) ) ) + ( 1 - ( a_o / a_q ) ) * ( min( m , a_s ) ) ) / ( m ) ) / ( ( ( ( a_r * ( 10 ) * ( 1 - ( a_o / a_q ) ) ) + ( 1 - ( a_o / a_q ) ) * ( min( m , a_s ) ) ) / ( m ) ) + ( ( ( 120 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * a_z + ( 48 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * b_a ) / ( m ) ) + ( a_x / ( a_y if smt_on else ( m ) ) ) + ( 9 * b_b / ( m ) ) + ( ( ( 7 ) * b_c + b_d ) / ( a_y if smt_on else ( m ) ) ) ) ) ) )",
      "BaseFormula": "100 * ( ( tma_memory_bound * ( tma_dram_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) * ( tma_mem_latency / ( tma_mem_bandwidth + tma_mem_latency ) ) ) + ( tma_memory_bound * ( tma_l3_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) * ( tma_l3_hit_latency / ( tma_contested_accesses + tma_data_sharing + tma_l3_hit_latency + tma_sq_full ) ) ) + ( tma_memory_bound * tma_l2_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) + ( tma_memory_bound * ( tma_l1_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) * ( tma_l1_latency_dependency / ( tma_dtlb_load + tma_store_fwd_blk + tma_l1_latency_dependency + tma_lock_latency + tma_split_loads + tma_4k_aliasing + tma_fb_full ) ) ) + ( tma_memory_bound * ( tma_l1_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) * ( tma_lock_latency / ( tma_dtlb_load + tma_store_fwd_blk + tma_l1_latency_dependency + tma_lock_latency + tma_split_loads + tma_4k_aliasing + tma_fb_full ) ) ) + ( tma_memory_bound * ( tma_l1_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) * ( tma_split_loads / ( tma_dtlb_load + tma_store_fwd_blk + tma_l1_latency_dependency + tma_lock_latency + tma_split_loads + tma_4k_aliasing + tma_fb_full ) ) ) + ( tma_memory_bound * ( tma_store_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) * ( tma_split_stores / ( tma_store_latency + tma_false_sharing + tma_split_stores + tma_streaming_stores + tma_dtlb_store ) ) ) + ( tma_memory_bound * ( tma_store_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) * ( tma_store_latency / ( tma_store_latency + tma_false_sharing + tma_split_stores + tma_streaming_stores + tma_dtlb_store ) ) ) )",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Bottleneck_Data_Cache_Memory_Latency"
          }
        ],
        "Formula": "a > 20",
        "BaseFormula": "metric_TMA_Bottleneck_Data_Cache_Memory_Latency > 20",
        "ThresholdIssues": "$issueLat"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvML;Mem;MemoryLat;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "Bottleneck_Memory_Data_TLBs",
      "LegacyName": "metric_TMA_Bottleneck_Memory_Data_TLBs",
      "Level": 1,
      "BriefDescription": "Total pipeline cost of Memory Address Translation related bottlenecks (data-side TLBs)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CYCLE_ACTIVITY.STALLS_MEM_ANY",
          "Alias": "a"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "a_a"
        },
        {
          "Name": "MEM_INST_RETIRED.LOCK_LOADS",
          "Alias": "a_c"
        },
        {
          "Name": "L2_RQSTS.ALL_RFO",
          "Alias": "a_d"
        },
        {
          "Name": "MEM_INST_RETIRED.ALL_STORES",
          "Alias": "a_e"
        },
        {
          "Name": "L2_RQSTS.RFO_HIT",
          "Alias": "a_f"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO",
          "Alias": "a_g"
        },
        {
          "Name": "L1D_PEND_MISS.PENDING",
          "Alias": "a_h"
        },
        {
          "Name": "LD_BLOCKS.NO_SR",
          "Alias": "a_i"
        },
        {
          "Name": "LD_BLOCKS_PARTIAL.ADDRESS_ALIAS",
          "Alias": "a_j"
        },
        {
          "Name": "L1D_PEND_MISS.FB_FULL",
          "Alias": "a_k"
        },
        {
          "Name": "DTLB_STORE_MISSES.STLB_HIT:c1",
          "Alias": "a_l"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_ACTIVE",
          "Alias": "a_m"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "a_n"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "a_o"
        },
        {
          "Name": "OCR.DEMAND_RFO.L3_MISS:ocr_msr_val=0x103b800002",
          "Alias": "a_r"
        },
        {
          "Name": "OCR.DEMAND_RFO.L3_HIT.SNOOP_HITM",
          "Alias": "a_s"
        },
        {
          "Name": "MEM_INST_RETIRED.SPLIT_STORES",
          "Alias": "a_t"
        },
        {
          "Name": "OCR.STREAMING_WR.ANY_RESPONSE",
          "Alias": "a_u"
        },
        {
          "Name": "EXE_ACTIVITY.BOUND_ON_STORES",
          "Alias": "b"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_TOTAL",
          "Alias": "c"
        },
        {
          "Name": "EXE_ACTIVITY.1_PORTS_UTIL",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "e"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "f"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "g"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "h"
        },
        {
          "Name": "EXE_ACTIVITY.2_PORTS_UTIL",
          "Alias": "i"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "j"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "k"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L1D_MISS",
          "Alias": "l"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "m"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L2_HIT",
          "Alias": "n"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "o"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "p"
        },
        {
          "Name": "L1D_PEND_MISS.FB_FULL_PERIODS",
          "Alias": "q"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L2_MISS",
          "Alias": "r"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L3_MISS",
          "Alias": "s"
        },
        {
          "Name": "DTLB_LOAD_MISSES.STLB_HIT:c1",
          "Alias": "t"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_ACTIVE",
          "Alias": "u"
        },
        {
          "Name": "CYCLE_ACTIVITY.CYCLES_MEM_ANY",
          "Alias": "v"
        },
        {
          "Name": "CYCLE_ACTIVITY.CYCLES_L1D_MISS",
          "Alias": "w"
        },
        {
          "Name": "LD_BLOCKS.STORE_FORWARD",
          "Alias": "x"
        },
        {
          "Name": "MEM_INST_RETIRED.ALL_LOADS",
          "Alias": "y"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "z"
        }
      ],
      "Constants": [
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "a_p"
        },
        {
          "Name": "20",
          "Alias": "dependentloadsweight"
        },
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        },
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) * ( ( max( ( a - l ) / ( m ) , 0 ) ) / max( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) , ( ( max( ( a - l ) / ( m ) , 0 ) ) + ( ( ( n * ( 1 + ( o / p ) ) ) / ( ( n * ( 1 + ( o / p ) ) ) + q ) ) * ( ( l - r ) / ( m ) ) ) + ( ( r - s ) / ( m ) ) + ( ( s / ( m ) + ( ( l - r ) / ( m ) ) - ( ( ( n * ( 1 + ( o / p ) ) ) / ( ( n * ( 1 + ( o / p ) ) ) + q ) ) * ( ( l - r ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) ) * ( ( min( ( 7 ) * t + u , max( v - w , 0 ) ) / ( m ) ) / max( ( max( ( a - l ) / ( m ) , 0 ) ) , ( ( min( ( 7 ) * t + u , max( v - w , 0 ) ) / ( m ) ) + ( 13 * x / ( m ) ) + ( min( 2 * ( y - z - a_a ) * dependentloadsweight / 100 , max( v - w , 0 ) ) / ( m ) ) + ( ( 16 * max( 0 , a_c - a_d ) + ( a_c / a_e ) * ( ( 10 ) * a_f + ( min( m , a_g ) ) ) ) / ( m ) ) + ( ( a_h / ( a_a + z ) ) * a_i / ( m ) ) + ( a_j / ( m ) ) + ( a_k / ( m ) ) ) ) ) + ( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) * ( ( b / ( m ) ) / ( ( max( ( a - l ) / ( m ) , 0 ) ) + ( ( ( n * ( 1 + ( o / p ) ) ) / ( ( n * ( 1 + ( o / p ) ) ) + q ) ) * ( ( l - r ) / ( m ) ) ) + ( ( r - s ) / ( m ) ) + ( ( s / ( m ) + ( ( l - r ) / ( m ) ) - ( ( ( n * ( 1 + ( o / p ) ) ) / ( ( n * ( 1 + ( o / p ) ) ) + q ) ) * ( ( l - r ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) * ( ( ( ( 7 ) * a_l + a_m ) / ( a_n if smt_on else ( m ) ) ) / ( ( ( ( a_f * ( 10 ) * ( 1 - ( a_c / a_e ) ) ) + ( 1 - ( a_c / a_e ) ) * ( min( m , a_g ) ) ) / ( m ) ) + ( ( ( 120 * ( ( ( m ) / a_o ) * a_p / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * a_r + ( 48 * ( ( ( m ) / a_o ) * a_p / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * a_s ) / ( m ) ) + ( a_t / ( a_n if smt_on else ( m ) ) ) + ( 9 * a_u / ( m ) ) + ( ( ( 7 ) * a_l + a_m ) / ( a_n if smt_on else ( m ) ) ) ) ) ) )",
      "BaseFormula": "100 * ( tma_memory_bound * ( tma_l1_bound / max( tma_memory_bound , ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) ) * ( tma_dtlb_load / max( tma_l1_bound , ( tma_dtlb_load + tma_store_fwd_blk + tma_l1_latency_dependency + tma_lock_latency + tma_split_loads + tma_4k_aliasing + tma_fb_full ) ) ) + ( tma_memory_bound * ( tma_store_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) * ( tma_dtlb_store / ( tma_store_latency + tma_false_sharing + tma_split_stores + tma_streaming_stores + tma_dtlb_store ) ) ) )",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Bottleneck_Memory_Data_TLBs"
          }
        ],
        "Formula": "a > 20",
        "BaseFormula": "metric_TMA_Bottleneck_Memory_Data_TLBs > 20",
        "ThresholdIssues": "$issueTLB"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvMT;Mem;MemoryTLB;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "Bottleneck_Memory_Synchronization",
      "LegacyName": "metric_TMA_Bottleneck_Memory_Synchronization",
      "Level": 1,
      "BriefDescription": "Total pipeline cost of Memory Synchronization related bottlenecks (data transfers and coherency updates across processors)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CYCLE_ACTIVITY.STALLS_MEM_ANY",
          "Alias": "a"
        },
        {
          "Name": "MEM_LOAD_L3_MISS_RETIRED.LOCAL_DRAM",
          "Alias": "a_a"
        },
        {
          "Name": "MEM_LOAD_L3_MISS_RETIRED.REMOTE_DRAM",
          "Alias": "a_b"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM",
          "Alias": "a_c"
        },
        {
          "Name": "OCR.DEMAND_DATA_RD.L3_HIT.SNOOP_HITM",
          "Alias": "a_d"
        },
        {
          "Name": "OCR.DEMAND_DATA_RD.L3_HIT.SNOOP_HIT_WITH_FWD",
          "Alias": "a_e"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS",
          "Alias": "a_f"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT",
          "Alias": "a_g"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L3_HIT",
          "Alias": "a_h"
        },
        {
          "Name": "L1D_PEND_MISS.L2_STALL",
          "Alias": "a_i"
        },
        {
          "Name": "OCR.DEMAND_RFO.L3_MISS:ocr_msr_val=0x103b800002",
          "Alias": "a_j"
        },
        {
          "Name": "OCR.DEMAND_RFO.L3_HIT.SNOOP_HITM",
          "Alias": "a_k"
        },
        {
          "Name": "L2_RQSTS.RFO_HIT",
          "Alias": "a_l"
        },
        {
          "Name": "MEM_INST_RETIRED.LOCK_LOADS",
          "Alias": "a_m"
        },
        {
          "Name": "MEM_INST_RETIRED.ALL_STORES",
          "Alias": "a_n"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO",
          "Alias": "a_o"
        },
        {
          "Name": "MEM_INST_RETIRED.SPLIT_STORES",
          "Alias": "a_p"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "a_q"
        },
        {
          "Name": "OCR.STREAMING_WR.ANY_RESPONSE",
          "Alias": "a_r"
        },
        {
          "Name": "DTLB_STORE_MISSES.STLB_HIT:c1",
          "Alias": "a_s"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_ACTIVE",
          "Alias": "a_t"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "a_u"
        },
        {
          "Name": "BR_MISP_RETIRED.ALL_BRANCHES",
          "Alias": "a_v"
        },
        {
          "Name": "MACHINE_CLEARS.COUNT",
          "Alias": "a_w"
        },
        {
          "Name": "MACHINE_CLEARS.MEMORY_ORDERING",
          "Alias": "a_x"
        },
        {
          "Name": "EXE_ACTIVITY.BOUND_ON_STORES",
          "Alias": "b"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_TOTAL",
          "Alias": "c"
        },
        {
          "Name": "EXE_ACTIVITY.1_PORTS_UTIL",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "e"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "f"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "g"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "h"
        },
        {
          "Name": "EXE_ACTIVITY.2_PORTS_UTIL",
          "Alias": "i"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "j"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "k"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L3_MISS",
          "Alias": "l"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "m"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L1D_MISS",
          "Alias": "n"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L2_MISS",
          "Alias": "o"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L2_HIT",
          "Alias": "p"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "q"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "r"
        },
        {
          "Name": "L1D_PEND_MISS.FB_FULL_PERIODS",
          "Alias": "s"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD",
          "Alias": "t"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD:c4",
          "Alias": "u"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "v"
        },
        {
          "Name": "MEM_LOAD_L3_MISS_RETIRED.REMOTE_HITM",
          "Alias": "y"
        },
        {
          "Name": "MEM_LOAD_L3_MISS_RETIRED.REMOTE_FWD",
          "Alias": "z"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        },
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        },
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "w"
        }
      ],
      "Formula": "100 * ( ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) ) * ( ( ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) / ( ( max( ( a - n ) / ( m ) , 0 ) ) + ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) + ( ( o - l ) / ( m ) ) + ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) * ( ( ( min( m , t ) ) / ( m ) - ( ( min( m , u ) ) / ( m ) ) ) / ( ( ( min( m , u ) ) / ( m ) ) + ( ( min( m , t ) ) / ( m ) - ( ( min( m , u ) ) / ( m ) ) ) ) ) * ( ( ( ( 120 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * y + ( ( 120 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * z ) * ( 1 + ( q / r ) / 2 ) / ( m ) ) / ( ( ( ( 66.5 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * a_a * ( 1 + ( q / r ) / 2 ) / ( m ) ) + ( ( ( 131 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * a_b * ( 1 + ( q / r ) / 2 ) / ( m ) ) + ( ( ( ( 120 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * y + ( ( 120 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * z ) * ( 1 + ( q / r ) / 2 ) / ( m ) ) ) + ( ( ( o - l ) / ( m ) ) / ( ( max( ( a - n ) / ( m ) , 0 ) ) + ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) + ( ( o - l ) / ( m ) ) + ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) * ( ( ( ( ( 48 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_c * ( a_d / ( a_d + a_e ) ) ) + ( ( 47.5 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_f ) ) * ( 1 + ( q / r ) / 2 ) / ( m ) ) + ( ( ( 47.5 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_g + a_c * ( 1 - ( a_d / ( a_d + a_e ) ) ) ) * ( 1 + ( q / r ) / 2 ) / ( m ) ) ) / ( ( ( ( ( 48 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_c * ( a_d / ( a_d + a_e ) ) ) + ( ( 47.5 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_f ) ) * ( 1 + ( q / r ) / 2 ) / ( m ) ) + ( ( ( 47.5 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_g + a_c * ( 1 - ( a_d / ( a_d + a_e ) ) ) ) * ( 1 + ( q / r ) / 2 ) / ( m ) ) + ( ( ( 23 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_h * ( 1 + ( q / r ) / 2 ) ) / ( m ) ) + ( a_i / ( m ) ) ) + ( ( b / ( m ) ) / ( ( max( ( a - n ) / ( m ) , 0 ) ) + ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) + ( ( o - l ) / ( m ) ) + ( ( l / ( m ) + ( ( n - o ) / ( m ) ) - ( ( ( p * ( 1 + ( q / r ) ) ) / ( ( p * ( 1 + ( q / r ) ) ) + s ) ) * ( ( n - o ) / ( m ) ) ) ) ) + ( b / ( m ) ) ) ) * ( ( ( 120 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * a_j + ( 48 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * a_k ) / ( m ) ) / ( ( ( ( ( a_l * ( 10 ) * ( 1 - ( a_m / a_n ) ) ) + ( 1 - ( a_m / a_n ) ) * ( min( m , a_o ) ) ) / ( m ) ) + ( ( ( 120 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * a_j + ( 48 * ( ( ( m ) / v ) * w / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * a_k ) / ( m ) ) + ( a_p / ( a_q if smt_on else ( m ) ) ) + ( 9 * a_r / ( m ) ) + ( ( ( 7 ) * a_s + a_t ) / ( a_q if smt_on else ( m ) ) ) ) - ( ( ( a_l * ( 10 ) * ( 1 - ( a_m / a_n ) ) ) + ( 1 - ( a_m / a_n ) ) * ( min( m , a_o ) ) ) / ( m ) ) ) ) + ( max( 0 , ( max( 1 - ( ( f / ( f + g + e + h ) - a_u / ( k ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) - ( ( a_v / ( a_v + a_w ) ) * ( max( 1 - ( ( f / ( f + g + e + h ) - a_u / ( k ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) ) ) ) * ( 1 - ( max( ( max( 0 , ( max( 1 - ( ( f / ( f + g + e + h ) - a_u / ( k ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) - ( ( a_v / ( a_v + a_w ) ) * ( max( 1 - ( ( f / ( f + g + e + h ) - a_u / ( k ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) ) ) ) * ( 1 - a_x / a_w ) , 0.0001 ) ) / ( ( max( ( max( 0 , ( max( 1 - ( ( f / ( f + g + e + h ) - a_u / ( k ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) - ( ( a_v / ( a_v + a_w ) ) * ( max( 1 - ( ( f / ( f + g + e + h ) - a_u / ( k ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) ) ) ) * ( 1 - a_x / a_w ) , 0.0001 ) ) ) ) )",
      "BaseFormula": "100 * ( tma_memory_bound * ( ( tma_dram_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) * ( tma_mem_latency / ( tma_mem_bandwidth + tma_mem_latency ) ) * tma_remote_cache / ( tma_local_mem + tma_remote_mem + tma_remote_cache ) + ( tma_l3_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) * ( tma_contested_accesses + tma_data_sharing ) / ( tma_contested_accesses + tma_data_sharing + tma_l3_hit_latency + tma_sq_full ) + ( tma_store_bound / ( tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_dram_bound + tma_store_bound ) ) * tma_false_sharing / ( ( tma_store_latency + tma_false_sharing + tma_split_stores + tma_streaming_stores + tma_dtlb_store ) - tma_store_latency ) ) + tma_machine_clears * ( 1 - tma_other_nukes / ( tma_other_nukes ) ) )",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Bottleneck_Memory_Synchronization"
          }
        ],
        "Formula": "a > 10",
        "BaseFormula": "metric_TMA_Bottleneck_Memory_Synchronization > 10",
        "ThresholdIssues": "$issueSyncxn"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvMS;LockCont;Mem;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "Bottleneck_Compute_Bound_Est",
      "LegacyName": "metric_TMA_Bottleneck_Compute_Bound_Est",
      "Level": 1,
      "BriefDescription": "Total pipeline cost when the execution is compute-bound - an estimation. Covers Core Bound when High ILP as well as when long-latency execution units are busy.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "d"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "e"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "f"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_MEM_ANY",
          "Alias": "g"
        },
        {
          "Name": "EXE_ACTIVITY.BOUND_ON_STORES",
          "Alias": "h"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_TOTAL",
          "Alias": "i"
        },
        {
          "Name": "EXE_ACTIVITY.1_PORTS_UTIL",
          "Alias": "j"
        },
        {
          "Name": "EXE_ACTIVITY.2_PORTS_UTIL",
          "Alias": "k"
        },
        {
          "Name": "ARITH.DIVIDER_ACTIVE",
          "Alias": "l"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "m"
        },
        {
          "Name": "RESOURCE_STALLS.SCOREBOARD",
          "Alias": "n"
        },
        {
          "Name": "EXE_ACTIVITY.3_PORTS_UTIL:u0x80",
          "Alias": "o"
        },
        {
          "Name": "UOPS_EXECUTED.CYCLES_GE_3",
          "Alias": "p"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( ( max( 0 , ( a / ( b + c + d + a ) + ( ( 5 ) * e ) / ( f ) ) - ( ( ( g + h ) / ( i + ( j + ( d / ( b + c + d + a ) ) * k ) + h ) ) * ( a / ( b + c + d + a ) + ( ( 5 ) * e ) / ( f ) ) ) ) ) * ( l / ( m ) ) / ( ( l / ( m ) ) + ( n / ( m ) ) + ( ( ( o / ( m ) ) * ( m ) + ( j + ( d / ( b + c + d + a ) ) * k ) ) / ( m ) if ( l < ( i - g ) ) else ( j + ( d / ( b + c + d + a ) ) * k ) / ( m ) ) ) ) + ( ( max( 0 , ( a / ( b + c + d + a ) + ( ( 5 ) * e ) / ( f ) ) - ( ( ( g + h ) / ( i + ( j + ( d / ( b + c + d + a ) ) * k ) + h ) ) * ( a / ( b + c + d + a ) + ( ( 5 ) * e ) / ( f ) ) ) ) ) * ( ( ( ( o / ( m ) ) * ( m ) + ( j + ( d / ( b + c + d + a ) ) * k ) ) / ( m ) if ( l < ( i - g ) ) else ( j + ( d / ( b + c + d + a ) ) * k ) / ( m ) ) / ( ( l / ( m ) ) + ( n / ( m ) ) + ( ( ( o / ( m ) ) * ( m ) + ( j + ( d / ( b + c + d + a ) ) * k ) ) / ( m ) if ( l < ( i - g ) ) else ( j + ( d / ( b + c + d + a ) ) * k ) / ( m ) ) ) ) * ( ( p / ( m ) ) / ( ( o / ( m ) ) + ( j / ( m ) ) + ( k / ( m ) ) + ( p / ( m ) ) ) ) ) )",
      "BaseFormula": "100 * ( ( tma_core_bound * tma_divider / ( tma_divider + tma_serializing_operation + tma_ports_utilization ) ) + ( tma_core_bound * ( tma_ports_utilization / ( tma_divider + tma_serializing_operation + tma_ports_utilization ) ) * ( tma_ports_utilized_3m / ( tma_ports_utilized_0 + tma_ports_utilized_1 + tma_ports_utilized_2 + tma_ports_utilized_3m ) ) ) )",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Bottleneck_Compute_Bound_Est"
          }
        ],
        "Formula": "a > 20",
        "BaseFormula": "metric_TMA_Bottleneck_Compute_Bound_Est > 20",
        "ThresholdIssues": "$issueComp"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvCB;Cor",
      "LocateWith": ""
    },
    {
      "MetricName": "Bottleneck_Irregular_Overhead",
      "LegacyName": "metric_TMA_Bottleneck_Irregular_Overhead",
      "Level": 1,
      "BriefDescription": "Total pipeline cost of irregular execution (e.g. FP-assists in HPC, Wait time with work imbalance multithreaded workloads, overhead in system services or virtualized environments)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "a_a"
        },
        {
          "Name": "MACHINE_CLEARS.MEMORY_ORDERING",
          "Alias": "a_b"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_MEM_ANY",
          "Alias": "a_c"
        },
        {
          "Name": "EXE_ACTIVITY.BOUND_ON_STORES",
          "Alias": "a_d"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_TOTAL",
          "Alias": "a_e"
        },
        {
          "Name": "EXE_ACTIVITY.1_PORTS_UTIL",
          "Alias": "a_f"
        },
        {
          "Name": "EXE_ACTIVITY.2_PORTS_UTIL",
          "Alias": "a_g"
        },
        {
          "Name": "RESOURCE_STALLS.SCOREBOARD",
          "Alias": "a_h"
        },
        {
          "Name": "RS_EVENTS.EMPTY_CYCLES",
          "Alias": "a_i"
        },
        {
          "Name": "EXE_ACTIVITY.3_PORTS_UTIL:u0x80",
          "Alias": "a_j"
        },
        {
          "Name": "ARITH.DIVIDER_ACTIVE",
          "Alias": "a_k"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "b"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "c"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "e"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "f"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "g"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "h"
        },
        {
          "Name": "UOPS_DECODED.DEC0",
          "Alias": "i"
        },
        {
          "Name": "UOPS_DECODED.DEC0:c1",
          "Alias": "j"
        },
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "k"
        },
        {
          "Name": "ASSISTS.ANY",
          "Alias": "l"
        },
        {
          "Name": "IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE",
          "Alias": "m"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "n"
        },
        {
          "Name": "IDQ.MS_SWITCHES",
          "Alias": "o"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "p"
        },
        {
          "Name": "INT_MISC.CLEAR_RESTEER_CYCLES",
          "Alias": "q"
        },
        {
          "Name": "BACLEARS.ANY",
          "Alias": "r"
        },
        {
          "Name": "BR_MISP_RETIRED.ALL_BRANCHES",
          "Alias": "s"
        },
        {
          "Name": "MACHINE_CLEARS.COUNT",
          "Alias": "t"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "u"
        },
        {
          "Name": "ICACHE_DATA.STALLS",
          "Alias": "v"
        },
        {
          "Name": "ICACHE_TAG.STALLS",
          "Alias": "w"
        },
        {
          "Name": "DECODE.LCP",
          "Alias": "x"
        },
        {
          "Name": "DSB2MITE_SWITCHES.PENALTY_CYCLES",
          "Alias": "y"
        },
        {
          "Name": "IDQ.MS_UOPS:c1",
          "Alias": "z"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( ( ( ( ( a / b ) * c / ( d ) ) / ( ( ( ( ( a / b ) * c / ( d ) ) + ( e / ( f + g + e + h ) ) * ( i - j ) / k ) - ( ( a / b ) * c / ( d ) ) ) + ( ( a / b ) * c / ( d ) ) ) ) * ( ( ( 34 ) * l / ( d ) ) / ( ( a / b ) * c / ( d ) ) ) ) * ( ( ( ( 5 ) * m - n ) / ( d ) ) * ( ( ( 3 ) * o / ( p ) ) + ( q / ( p ) + ( 10 ) * r / ( p ) ) * ( ( ( 1 - ( s / ( s + t ) ) ) * q / ( p ) ) + ( 10 * ( ( a / b ) * c / ( d ) ) * ( max( ( ( s / ( s + t ) ) * ( max( 1 - ( ( f / ( f + g + e + h ) - n / ( d ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) ) * ( 1 - s / ( u - t ) ) , 0.0001 ) ) / ( ( s / ( s + t ) ) * ( max( 1 - ( ( f / ( f + g + e + h ) - n / ( d ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) ) ) * ( ( s / ( s + t ) ) * q / ( p ) ) ) / ( ( ( s / ( s + t ) ) * q / ( p ) ) + ( ( 1 - ( s / ( s + t ) ) ) * q / ( p ) ) + ( ( 10 ) * r / ( p ) ) ) ) / ( ( v / ( p ) ) + ( w / ( p ) ) + ( q / ( p ) + ( 10 ) * r / ( p ) ) + ( ( 3 ) * o / ( p ) ) + ( x / ( p ) ) + ( y / ( p ) ) ) + ( z / ( a_a if smt_on else ( p ) ) / 3.3 ) ) ) + ( 10 * ( ( a / b ) * c / ( d ) ) * ( max( ( ( s / ( s + t ) ) * ( max( 1 - ( ( f / ( f + g + e + h ) - n / ( d ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) ) * ( 1 - s / ( u - t ) ) , 0.0001 ) ) / ( ( s / ( s + t ) ) * ( max( 1 - ( ( f / ( f + g + e + h ) - n / ( d ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) ) ) * ( ( s / ( s + t ) ) * ( max( 1 - ( ( f / ( f + g + e + h ) - n / ( d ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) ) + ( ( max( 0 , ( max( 1 - ( ( f / ( f + g + e + h ) - n / ( d ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) - ( ( s / ( s + t ) ) * ( max( 1 - ( ( f / ( f + g + e + h ) - n / ( d ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) ) ) ) * ( max( ( max( 0 , ( max( 1 - ( ( f / ( f + g + e + h ) - n / ( d ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) - ( ( s / ( s + t ) ) * ( max( 1 - ( ( f / ( f + g + e + h ) - n / ( d ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) ) ) ) * ( 1 - a_b / t ) , 0.0001 ) ) / ( ( max( ( max( 0 , ( max( 1 - ( ( f / ( f + g + e + h ) - n / ( d ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) - ( ( s / ( s + t ) ) * ( max( 1 - ( ( f / ( f + g + e + h ) - n / ( d ) ) + ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) + ( e / ( f + g + e + h ) ) ) , 0 ) ) ) ) ) * ( 1 - a_b / t ) , 0.0001 ) ) ) ) + ( ( max( 0 , ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) - ( ( ( a_c + a_d ) / ( a_e + ( a_f + ( e / ( f + g + e + h ) ) * a_g ) + a_d ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) ) ) ) * ( ( a_h / ( p ) ) + ( max( 0 , ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) - ( ( ( a_c + a_d ) / ( a_e + ( a_f + ( e / ( f + g + e + h ) ) * a_g ) + a_d ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * u ) / ( d ) ) ) ) ) * a_i / ( p ) * ( a_j / ( p ) ) ) / ( ( a_k / ( p ) ) + ( a_h / ( p ) ) + ( ( ( a_j / ( p ) ) * ( p ) + ( a_f + ( e / ( f + g + e + h ) ) * a_g ) ) / ( p ) if ( a_k < ( a_e - a_c ) ) else ( a_f + ( e / ( f + g + e + h ) ) * a_g ) / ( p ) ) ) ) + ( ( ( ( ( a / b ) * c / ( d ) ) / ( ( ( ( ( a / b ) * c / ( d ) ) + ( e / ( f + g + e + h ) ) * ( i - j ) / k ) - ( ( a / b ) * c / ( d ) ) ) + ( ( a / b ) * c / ( d ) ) ) ) * ( ( ( 34 ) * l / ( d ) ) / ( ( a / b ) * c / ( d ) ) ) ) * ( ( ( a / b ) * c / ( d ) ) + ( e / ( f + g + e + h ) ) * ( i - j ) / k ) ) )",
      "BaseFormula": "100 * ( ( ( ( tma_microcode_sequencer / ( tma_few_uops_instructions + tma_microcode_sequencer ) ) * ( tma_assists / tma_microcode_sequencer ) ) * ( tma_fetch_latency * ( tma_ms_switches + tma_branch_resteers * ( tma_clears_resteers + ( 10 * tma_microcode_sequencer * tma_other_mispredicts / tma_branch_mispredicts ) * tma_mispredicts_resteers ) / ( tma_mispredicts_resteers + tma_clears_resteers + tma_unknown_branches ) ) / ( tma_icache_misses + tma_itlb_misses + tma_branch_resteers + tma_ms_switches + tma_lcp + tma_dsb_switches ) + tma_ms ) ) + ( 10 * tma_microcode_sequencer * tma_other_mispredicts / tma_branch_mispredicts ) * tma_branch_mispredicts + ( tma_machine_clears * tma_other_nukes / ( tma_other_nukes ) ) + ( tma_core_bound * ( tma_serializing_operation + tma_core_bound * rs_events.empty_cycles / tma_info_thread_clks * tma_ports_utilized_0 ) / ( tma_divider + tma_serializing_operation + tma_ports_utilization ) ) + ( ( ( tma_microcode_sequencer / ( tma_few_uops_instructions + tma_microcode_sequencer ) ) * ( tma_assists / tma_microcode_sequencer ) ) * tma_heavy_operations ) )",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Bottleneck_Irregular_Overhead"
          }
        ],
        "Formula": "a > 10",
        "BaseFormula": "metric_TMA_Bottleneck_Irregular_Overhead > 10",
        "ThresholdIssues": "$issueMS"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Bad;BvIO;Cor;Ret",
      "LocateWith": ""
    },
    {
      "MetricName": "Bottleneck_Other_Bottlenecks",
      "LegacyName": "metric_TMA_Bottleneck_Other_Bottlenecks",
      "Level": 1,
      "BriefDescription": "Total pipeline cost of remaining bottlenecks in the back-end. Examples include data-dependencies (Core Bound when Low ILP) and other unlisted memory-related stalls.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "a_a"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_MEM_ANY",
          "Alias": "a_b"
        },
        {
          "Name": "EXE_ACTIVITY.BOUND_ON_STORES",
          "Alias": "a_c"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_TOTAL",
          "Alias": "a_d"
        },
        {
          "Name": "EXE_ACTIVITY.1_PORTS_UTIL",
          "Alias": "a_e"
        },
        {
          "Name": "EXE_ACTIVITY.2_PORTS_UTIL",
          "Alias": "a_f"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L3_MISS",
          "Alias": "a_g"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L1D_MISS",
          "Alias": "a_h"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L2_MISS",
          "Alias": "a_i"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L2_HIT",
          "Alias": "a_j"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "a_k"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "a_l"
        },
        {
          "Name": "L1D_PEND_MISS.FB_FULL_PERIODS",
          "Alias": "a_m"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD:c4",
          "Alias": "a_n"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD",
          "Alias": "a_o"
        },
        {
          "Name": "L1D_PEND_MISS.L2_STALL",
          "Alias": "a_p"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "a_q"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM",
          "Alias": "a_t"
        },
        {
          "Name": "OCR.DEMAND_DATA_RD.L3_HIT.SNOOP_HITM",
          "Alias": "a_u"
        },
        {
          "Name": "OCR.DEMAND_DATA_RD.L3_HIT.SNOOP_HIT_WITH_FWD",
          "Alias": "a_v"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS",
          "Alias": "a_w"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT",
          "Alias": "a_x"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L3_HIT",
          "Alias": "a_y"
        },
        {
          "Name": "L1D_PEND_MISS.FB_FULL",
          "Alias": "a_z"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "b"
        },
        {
          "Name": "DTLB_LOAD_MISSES.STLB_HIT:c1",
          "Alias": "b_a"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_ACTIVE",
          "Alias": "b_b"
        },
        {
          "Name": "CYCLE_ACTIVITY.CYCLES_MEM_ANY",
          "Alias": "b_c"
        },
        {
          "Name": "CYCLE_ACTIVITY.CYCLES_L1D_MISS",
          "Alias": "b_d"
        },
        {
          "Name": "LD_BLOCKS.STORE_FORWARD",
          "Alias": "b_e"
        },
        {
          "Name": "MEM_INST_RETIRED.ALL_LOADS",
          "Alias": "b_f"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "b_g"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "b_h"
        },
        {
          "Name": "MEM_INST_RETIRED.LOCK_LOADS",
          "Alias": "b_j"
        },
        {
          "Name": "L2_RQSTS.ALL_RFO",
          "Alias": "b_k"
        },
        {
          "Name": "MEM_INST_RETIRED.ALL_STORES",
          "Alias": "b_l"
        },
        {
          "Name": "L2_RQSTS.RFO_HIT",
          "Alias": "b_m"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO",
          "Alias": "b_n"
        },
        {
          "Name": "L1D_PEND_MISS.PENDING",
          "Alias": "b_o"
        },
        {
          "Name": "LD_BLOCKS.NO_SR",
          "Alias": "b_p"
        },
        {
          "Name": "LD_BLOCKS_PARTIAL.ADDRESS_ALIAS",
          "Alias": "b_q"
        },
        {
          "Name": "MEM_INST_RETIRED.SPLIT_STORES",
          "Alias": "b_r"
        },
        {
          "Name": "OCR.DEMAND_RFO.L3_MISS:ocr_msr_val=0x103b800002",
          "Alias": "b_s"
        },
        {
          "Name": "OCR.DEMAND_RFO.L3_HIT.SNOOP_HITM",
          "Alias": "b_t"
        },
        {
          "Name": "OCR.STREAMING_WR.ANY_RESPONSE",
          "Alias": "b_u"
        },
        {
          "Name": "DTLB_STORE_MISSES.STLB_HIT:c1",
          "Alias": "b_v"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_ACTIVE",
          "Alias": "b_w"
        },
        {
          "Name": "MEM_LOAD_L3_MISS_RETIRED.REMOTE_HITM",
          "Alias": "b_x"
        },
        {
          "Name": "MEM_LOAD_L3_MISS_RETIRED.REMOTE_FWD",
          "Alias": "b_y"
        },
        {
          "Name": "MEM_LOAD_L3_MISS_RETIRED.LOCAL_DRAM",
          "Alias": "b_z"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "c"
        },
        {
          "Name": "MEM_LOAD_L3_MISS_RETIRED.REMOTE_DRAM",
          "Alias": "c_a"
        },
        {
          "Name": "MACHINE_CLEARS.MEMORY_ORDERING",
          "Alias": "c_b"
        },
        {
          "Name": "ARITH.DIVIDER_ACTIVE",
          "Alias": "c_c"
        },
        {
          "Name": "RESOURCE_STALLS.SCOREBOARD",
          "Alias": "c_d"
        },
        {
          "Name": "EXE_ACTIVITY.3_PORTS_UTIL:u0x80",
          "Alias": "c_e"
        },
        {
          "Name": "UOPS_EXECUTED.CYCLES_GE_3",
          "Alias": "c_f"
        },
        {
          "Name": "RS_EVENTS.EMPTY_CYCLES",
          "Alias": "c_g"
        },
        {
          "Name": "BR_INST_RETIRED.ALL_BRANCHES",
          "Alias": "c_h"
        },
        {
          "Name": "BR_INST_RETIRED.NEAR_CALL",
          "Alias": "c_i"
        },
        {
          "Name": "INST_RETIRED.NOP",
          "Alias": "c_j"
        },
        {
          "Name": "ICACHE_TAG.STALLS",
          "Alias": "d"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "e"
        },
        {
          "Name": "ICACHE_DATA.STALLS",
          "Alias": "f"
        },
        {
          "Name": "BACLEARS.ANY",
          "Alias": "g"
        },
        {
          "Name": "INT_MISC.CLEAR_RESTEER_CYCLES",
          "Alias": "h"
        },
        {
          "Name": "IDQ.MS_SWITCHES",
          "Alias": "i"
        },
        {
          "Name": "DECODE.LCP",
          "Alias": "j"
        },
        {
          "Name": "DSB2MITE_SWITCHES.PENALTY_CYCLES",
          "Alias": "k"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "l"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "m"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "n"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "o"
        },
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "p"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "q"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "r"
        },
        {
          "Name": "BR_MISP_RETIRED.ALL_BRANCHES",
          "Alias": "s"
        },
        {
          "Name": "MACHINE_CLEARS.COUNT",
          "Alias": "t"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "u"
        },
        {
          "Name": "UOPS_DECODED.DEC0",
          "Alias": "v"
        },
        {
          "Name": "UOPS_DECODED.DEC0:c1",
          "Alias": "w"
        },
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "x"
        },
        {
          "Name": "ASSISTS.ANY",
          "Alias": "y"
        },
        {
          "Name": "IDQ.MS_UOPS:c1",
          "Alias": "z"
        }
      ],
      "Constants": [
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "a_r"
        },
        {
          "Name": "20",
          "Alias": "dependentloadsweight"
        },
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        },
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 - ( ( 100 * ( ( ( 5 ) * a - b ) / ( c ) ) * ( ( d / ( e ) ) + ( f / ( e ) ) + ( ( 10 ) * g / ( e ) ) ) / ( ( f / ( e ) ) + ( d / ( e ) ) + ( h / ( e ) + ( 10 ) * g / ( e ) ) + ( ( 3 ) * i / ( e ) ) + ( j / ( e ) ) + ( k / ( e ) ) ) ) + ( 100 * ( ( l / ( l + m + n + o ) - b / ( c ) ) - ( 1 - ( 10 * ( ( p / q ) * r / ( c ) ) * ( max( ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) * ( 1 - s / ( u - t ) ) , 0.0001 ) ) / ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) ) ) * ( ( ( 5 ) * a - b ) / ( c ) ) * ( ( s / ( s + t ) ) * h / ( e ) ) / ( ( f / ( e ) ) + ( d / ( e ) ) + ( h / ( e ) + ( 10 ) * g / ( e ) ) + ( ( 3 ) * i / ( e ) ) + ( j / ( e ) ) + ( k / ( e ) ) ) - ( ( ( ( ( p / q ) * r / ( c ) ) / ( ( ( ( ( p / q ) * r / ( c ) ) + ( n / ( l + m + n + o ) ) * ( v - w ) / x ) - ( ( p / q ) * r / ( c ) ) ) + ( ( p / q ) * r / ( c ) ) ) ) * ( ( ( 34 ) * y / ( c ) ) / ( ( p / q ) * r / ( c ) ) ) ) * ( ( ( ( 5 ) * a - b ) / ( c ) ) * ( ( ( 3 ) * i / ( e ) ) + ( h / ( e ) + ( 10 ) * g / ( e ) ) * ( ( ( 1 - ( s / ( s + t ) ) ) * h / ( e ) ) + ( 10 * ( ( p / q ) * r / ( c ) ) * ( max( ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) * ( 1 - s / ( u - t ) ) , 0.0001 ) ) / ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) ) * ( ( s / ( s + t ) ) * h / ( e ) ) ) / ( ( ( s / ( s + t ) ) * h / ( e ) ) + ( ( 1 - ( s / ( s + t ) ) ) * h / ( e ) ) + ( ( 10 ) * g / ( e ) ) ) ) / ( ( f / ( e ) ) + ( d / ( e ) ) + ( h / ( e ) + ( 10 ) * g / ( e ) ) + ( ( 3 ) * i / ( e ) ) + ( j / ( e ) ) + ( k / ( e ) ) ) + ( z / ( a_a if smt_on else ( e ) ) / 3.3 ) ) ) ) - ( 100 * ( ( ( 5 ) * a - b ) / ( c ) ) * ( ( d / ( e ) ) + ( f / ( e ) ) + ( ( 10 ) * g / ( e ) ) ) / ( ( f / ( e ) ) + ( d / ( e ) ) + ( h / ( e ) + ( 10 ) * g / ( e ) ) + ( ( 3 ) * i / ( e ) ) + ( j / ( e ) ) + ( k / ( e ) ) ) ) ) + ( 100 * ( 1 - ( 10 * ( ( p / q ) * r / ( c ) ) * ( max( ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) * ( 1 - s / ( u - t ) ) , 0.0001 ) ) / ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) ) ) * ( ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) + ( ( ( 5 ) * a - b ) / ( c ) ) * ( ( s / ( s + t ) ) * h / ( e ) ) / ( ( f / ( e ) ) + ( d / ( e ) ) + ( h / ( e ) + ( 10 ) * g / ( e ) ) + ( ( 3 ) * i / ( e ) ) + ( j / ( e ) ) + ( k / ( e ) ) ) ) ) + ( 100 * ( ( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) * ( ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) * ( ( ( min( e , a_n ) ) / ( e ) ) / ( ( ( min( e , a_n ) ) / ( e ) ) + ( ( min( e , a_o ) ) / ( e ) - ( ( min( e , a_n ) ) / ( e ) ) ) ) ) ) + ( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) * ( ( ( a_i - a_g ) / ( e ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) * ( ( a_p / ( e ) ) / ( ( ( ( ( 48 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_t * ( a_u / ( a_u + a_v ) ) ) + ( ( 47.5 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_w ) ) * ( 1 + ( a_k / a_l ) / 2 ) / ( e ) ) + ( ( ( 47.5 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_x + a_t * ( 1 - ( a_u / ( a_u + a_v ) ) ) ) * ( 1 + ( a_k / a_l ) / 2 ) / ( e ) ) + ( ( ( 23 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_y * ( 1 + ( a_k / a_l ) / 2 ) ) / ( e ) ) + ( a_p / ( e ) ) ) ) ) + ( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) * ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) * ( ( a_z / ( e ) ) / ( ( min( ( 7 ) * b_a + b_b , max( b_c - b_d , 0 ) ) / ( e ) ) + ( 13 * b_e / ( e ) ) + ( min( 2 * ( b_f - b_g - b_h ) * dependentloadsweight / 100 , max( b_c - b_d , 0 ) ) / ( e ) ) + ( ( 16 * max( 0 , b_j - b_k ) + ( b_j / b_l ) * ( ( 10 ) * b_m + ( min( e , b_n ) ) ) ) / ( e ) ) + ( ( b_o / ( b_h + b_g ) ) * b_p / ( e ) ) + ( b_q / ( e ) ) + ( a_z / ( e ) ) ) ) ) ) ) + ( 100 * ( ( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) * ( ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) * ( ( ( min( e , a_o ) ) / ( e ) - ( ( min( e , a_n ) ) / ( e ) ) ) / ( ( ( min( e , a_n ) ) / ( e ) ) + ( ( min( e , a_o ) ) / ( e ) - ( ( min( e , a_n ) ) / ( e ) ) ) ) ) ) + ( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) * ( ( ( a_i - a_g ) / ( e ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) * ( ( ( ( 23 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_y * ( 1 + ( a_k / a_l ) / 2 ) ) / ( e ) ) / ( ( ( ( ( 48 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_t * ( a_u / ( a_u + a_v ) ) ) + ( ( 47.5 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_w ) ) * ( 1 + ( a_k / a_l ) / 2 ) / ( e ) ) + ( ( ( 47.5 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_x + a_t * ( 1 - ( a_u / ( a_u + a_v ) ) ) ) * ( 1 + ( a_k / a_l ) / 2 ) / ( e ) ) + ( ( ( 23 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_y * ( 1 + ( a_k / a_l ) / 2 ) ) / ( e ) ) + ( a_p / ( e ) ) ) ) ) + ( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) * ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) + ( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) * ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) * ( ( min( 2 * ( b_f - b_g - b_h ) * dependentloadsweight / 100 , max( b_c - b_d , 0 ) ) / ( e ) ) / ( ( min( ( 7 ) * b_a + b_b , max( b_c - b_d , 0 ) ) / ( e ) ) + ( 13 * b_e / ( e ) ) + ( min( 2 * ( b_f - b_g - b_h ) * dependentloadsweight / 100 , max( b_c - b_d , 0 ) ) / ( e ) ) + ( ( 16 * max( 0 , b_j - b_k ) + ( b_j / b_l ) * ( ( 10 ) * b_m + ( min( e , b_n ) ) ) ) / ( e ) ) + ( ( b_o / ( b_h + b_g ) ) * b_p / ( e ) ) + ( b_q / ( e ) ) + ( a_z / ( e ) ) ) ) ) + ( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) * ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) * ( ( ( 16 * max( 0 , b_j - b_k ) + ( b_j / b_l ) * ( ( 10 ) * b_m + ( min( e , b_n ) ) ) ) / ( e ) ) / ( ( min( ( 7 ) * b_a + b_b , max( b_c - b_d , 0 ) ) / ( e ) ) + ( 13 * b_e / ( e ) ) + ( min( 2 * ( b_f - b_g - b_h ) * dependentloadsweight / 100 , max( b_c - b_d , 0 ) ) / ( e ) ) + ( ( 16 * max( 0 , b_j - b_k ) + ( b_j / b_l ) * ( ( 10 ) * b_m + ( min( e , b_n ) ) ) ) / ( e ) ) + ( ( b_o / ( b_h + b_g ) ) * b_p / ( e ) ) + ( b_q / ( e ) ) + ( a_z / ( e ) ) ) ) ) + ( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) * ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) * ( ( ( b_o / ( b_h + b_g ) ) * b_p / ( e ) ) / ( ( min( ( 7 ) * b_a + b_b , max( b_c - b_d , 0 ) ) / ( e ) ) + ( 13 * b_e / ( e ) ) + ( min( 2 * ( b_f - b_g - b_h ) * dependentloadsweight / 100 , max( b_c - b_d , 0 ) ) / ( e ) ) + ( ( 16 * max( 0 , b_j - b_k ) + ( b_j / b_l ) * ( ( 10 ) * b_m + ( min( e , b_n ) ) ) ) / ( e ) ) + ( ( b_o / ( b_h + b_g ) ) * b_p / ( e ) ) + ( b_q / ( e ) ) + ( a_z / ( e ) ) ) ) ) + ( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) * ( ( a_c / ( e ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) * ( ( b_r / ( a_a if smt_on else ( e ) ) ) / ( ( ( ( b_m * ( 10 ) * ( 1 - ( b_j / b_l ) ) ) + ( 1 - ( b_j / b_l ) ) * ( min( e , b_n ) ) ) / ( e ) ) + ( ( ( 120 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * b_s + ( 48 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * b_t ) / ( e ) ) + ( b_r / ( a_a if smt_on else ( e ) ) ) + ( 9 * b_u / ( e ) ) + ( ( ( 7 ) * b_v + b_w ) / ( a_a if smt_on else ( e ) ) ) ) ) ) + ( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) * ( ( a_c / ( e ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) * ( ( ( ( b_m * ( 10 ) * ( 1 - ( b_j / b_l ) ) ) + ( 1 - ( b_j / b_l ) ) * ( min( e , b_n ) ) ) / ( e ) ) / ( ( ( ( b_m * ( 10 ) * ( 1 - ( b_j / b_l ) ) ) + ( 1 - ( b_j / b_l ) ) * ( min( e , b_n ) ) ) / ( e ) ) + ( ( ( 120 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * b_s + ( 48 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * b_t ) / ( e ) ) + ( b_r / ( a_a if smt_on else ( e ) ) ) + ( 9 * b_u / ( e ) ) + ( ( ( 7 ) * b_v + b_w ) / ( a_a if smt_on else ( e ) ) ) ) ) ) ) ) + ( 100 * ( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) * ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) / max( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) , ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) ) * ( ( min( ( 7 ) * b_a + b_b , max( b_c - b_d , 0 ) ) / ( e ) ) / max( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) , ( ( min( ( 7 ) * b_a + b_b , max( b_c - b_d , 0 ) ) / ( e ) ) + ( 13 * b_e / ( e ) ) + ( min( 2 * ( b_f - b_g - b_h ) * dependentloadsweight / 100 , max( b_c - b_d , 0 ) ) / ( e ) ) + ( ( 16 * max( 0 , b_j - b_k ) + ( b_j / b_l ) * ( ( 10 ) * b_m + ( min( e , b_n ) ) ) ) / ( e ) ) + ( ( b_o / ( b_h + b_g ) ) * b_p / ( e ) ) + ( b_q / ( e ) ) + ( a_z / ( e ) ) ) ) ) + ( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) * ( ( a_c / ( e ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) * ( ( ( ( 7 ) * b_v + b_w ) / ( a_a if smt_on else ( e ) ) ) / ( ( ( ( b_m * ( 10 ) * ( 1 - ( b_j / b_l ) ) ) + ( 1 - ( b_j / b_l ) ) * ( min( e , b_n ) ) ) / ( e ) ) + ( ( ( 120 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * b_s + ( 48 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * b_t ) / ( e ) ) + ( b_r / ( a_a if smt_on else ( e ) ) ) + ( 9 * b_u / ( e ) ) + ( ( ( 7 ) * b_v + b_w ) / ( a_a if smt_on else ( e ) ) ) ) ) ) ) ) + ( 100 * ( ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) * ( ( ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) * ( ( ( min( e , a_o ) ) / ( e ) - ( ( min( e , a_n ) ) / ( e ) ) ) / ( ( ( min( e , a_n ) ) / ( e ) ) + ( ( min( e , a_o ) ) / ( e ) - ( ( min( e , a_n ) ) / ( e ) ) ) ) ) * ( ( ( ( 120 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * b_x + ( ( 120 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * b_y ) * ( 1 + ( a_k / a_l ) / 2 ) / ( e ) ) / ( ( ( ( 66.5 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * b_z * ( 1 + ( a_k / a_l ) / 2 ) / ( e ) ) + ( ( ( 131 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * c_a * ( 1 + ( a_k / a_l ) / 2 ) / ( e ) ) + ( ( ( ( 120 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * b_x + ( ( 120 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * b_y ) * ( 1 + ( a_k / a_l ) / 2 ) / ( e ) ) ) + ( ( ( a_i - a_g ) / ( e ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) * ( ( ( ( ( 48 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_t * ( a_u / ( a_u + a_v ) ) ) + ( ( 47.5 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_w ) ) * ( 1 + ( a_k / a_l ) / 2 ) / ( e ) ) + ( ( ( 47.5 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_x + a_t * ( 1 - ( a_u / ( a_u + a_v ) ) ) ) * ( 1 + ( a_k / a_l ) / 2 ) / ( e ) ) ) / ( ( ( ( ( 48 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_t * ( a_u / ( a_u + a_v ) ) ) + ( ( 47.5 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_w ) ) * ( 1 + ( a_k / a_l ) / 2 ) / ( e ) ) + ( ( ( 47.5 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_x + a_t * ( 1 - ( a_u / ( a_u + a_v ) ) ) ) * ( 1 + ( a_k / a_l ) / 2 ) / ( e ) ) + ( ( ( 23 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( a_y * ( 1 + ( a_k / a_l ) / 2 ) ) / ( e ) ) + ( a_p / ( e ) ) ) + ( ( a_c / ( e ) ) / ( ( max( ( a_b - a_h ) / ( e ) , 0 ) ) + ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) + ( ( a_i - a_g ) / ( e ) ) + ( ( a_g / ( e ) + ( ( a_h - a_i ) / ( e ) ) - ( ( ( a_j * ( 1 + ( a_k / a_l ) ) ) / ( ( a_j * ( 1 + ( a_k / a_l ) ) ) + a_m ) ) * ( ( a_h - a_i ) / ( e ) ) ) ) ) + ( a_c / ( e ) ) ) ) * ( ( ( 120 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * b_s + ( 48 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * b_t ) / ( e ) ) / ( ( ( ( ( b_m * ( 10 ) * ( 1 - ( b_j / b_l ) ) ) + ( 1 - ( b_j / b_l ) ) * ( min( e , b_n ) ) ) / ( e ) ) + ( ( ( 120 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * b_s + ( 48 * ( ( ( e ) / a_q ) * a_r / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * b_t ) / ( e ) ) + ( b_r / ( a_a if smt_on else ( e ) ) ) + ( 9 * b_u / ( e ) ) + ( ( ( 7 ) * b_v + b_w ) / ( a_a if smt_on else ( e ) ) ) ) - ( ( ( b_m * ( 10 ) * ( 1 - ( b_j / b_l ) ) ) + ( 1 - ( b_j / b_l ) ) * ( min( e , b_n ) ) ) / ( e ) ) ) ) + ( max( 0 , ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) - ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) ) ) * ( 1 - ( max( ( max( 0 , ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) - ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) ) ) * ( 1 - c_b / t ) , 0.0001 ) ) / ( ( max( ( max( 0 , ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) - ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) ) ) * ( 1 - c_b / t ) , 0.0001 ) ) ) ) ) ) + ( 100 * ( ( ( max( 0 , ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) - ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) ) ) * ( c_c / ( e ) ) / ( ( c_c / ( e ) ) + ( c_d / ( e ) ) + ( ( ( c_e / ( e ) ) * ( e ) + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) ) / ( e ) if ( c_c < ( a_d - a_b ) ) else ( a_e + ( n / ( l + m + n + o ) ) * a_f ) / ( e ) ) ) ) + ( ( max( 0 , ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) - ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) ) ) * ( ( ( ( c_e / ( e ) ) * ( e ) + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) ) / ( e ) if ( c_c < ( a_d - a_b ) ) else ( a_e + ( n / ( l + m + n + o ) ) * a_f ) / ( e ) ) / ( ( c_c / ( e ) ) + ( c_d / ( e ) ) + ( ( ( c_e / ( e ) ) * ( e ) + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) ) / ( e ) if ( c_c < ( a_d - a_b ) ) else ( a_e + ( n / ( l + m + n + o ) ) * a_f ) / ( e ) ) ) ) * ( ( c_f / ( e ) ) / ( ( c_e / ( e ) ) + ( a_e / ( e ) ) + ( a_f / ( e ) ) + ( c_f / ( e ) ) ) ) ) ) ) + ( 100 * ( ( ( ( ( ( p / q ) * r / ( c ) ) / ( ( ( ( ( p / q ) * r / ( c ) ) + ( n / ( l + m + n + o ) ) * ( v - w ) / x ) - ( ( p / q ) * r / ( c ) ) ) + ( ( p / q ) * r / ( c ) ) ) ) * ( ( ( 34 ) * y / ( c ) ) / ( ( p / q ) * r / ( c ) ) ) ) * ( ( ( ( 5 ) * a - b ) / ( c ) ) * ( ( ( 3 ) * i / ( e ) ) + ( h / ( e ) + ( 10 ) * g / ( e ) ) * ( ( ( 1 - ( s / ( s + t ) ) ) * h / ( e ) ) + ( 10 * ( ( p / q ) * r / ( c ) ) * ( max( ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) * ( 1 - s / ( u - t ) ) , 0.0001 ) ) / ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) ) * ( ( s / ( s + t ) ) * h / ( e ) ) ) / ( ( ( s / ( s + t ) ) * h / ( e ) ) + ( ( 1 - ( s / ( s + t ) ) ) * h / ( e ) ) + ( ( 10 ) * g / ( e ) ) ) ) / ( ( f / ( e ) ) + ( d / ( e ) ) + ( h / ( e ) + ( 10 ) * g / ( e ) ) + ( ( 3 ) * i / ( e ) ) + ( j / ( e ) ) + ( k / ( e ) ) ) + ( z / ( a_a if smt_on else ( e ) ) / 3.3 ) ) ) + ( 10 * ( ( p / q ) * r / ( c ) ) * ( max( ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) * ( 1 - s / ( u - t ) ) , 0.0001 ) ) / ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) ) * ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) + ( ( max( 0 , ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) - ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) ) ) * ( max( ( max( 0 , ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) - ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) ) ) * ( 1 - c_b / t ) , 0.0001 ) ) / ( ( max( ( max( 0 , ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) - ( ( s / ( s + t ) ) * ( max( 1 - ( ( l / ( l + m + n + o ) - b / ( c ) ) + ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) + ( n / ( l + m + n + o ) ) ) , 0 ) ) ) ) ) * ( 1 - c_b / t ) , 0.0001 ) ) ) ) + ( ( max( 0 , ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) - ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) ) ) * ( ( c_d / ( e ) ) + ( max( 0 , ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) - ( ( ( a_b + a_c ) / ( a_d + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) + a_c ) ) * ( o / ( l + m + n + o ) + ( ( 5 ) * u ) / ( c ) ) ) ) ) * c_g / ( e ) * ( c_e / ( e ) ) ) / ( ( c_c / ( e ) ) + ( c_d / ( e ) ) + ( ( ( c_e / ( e ) ) * ( e ) + ( a_e + ( n / ( l + m + n + o ) ) * a_f ) ) / ( e ) if ( c_c < ( a_d - a_b ) ) else ( a_e + ( n / ( l + m + n + o ) ) * a_f ) / ( e ) ) ) ) + ( ( ( ( ( p / q ) * r / ( c ) ) / ( ( ( ( ( p / q ) * r / ( c ) ) + ( n / ( l + m + n + o ) ) * ( v - w ) / x ) - ( ( p / q ) * r / ( c ) ) ) + ( ( p / q ) * r / ( c ) ) ) ) * ( ( ( 34 ) * y / ( c ) ) / ( ( p / q ) * r / ( c ) ) ) ) * ( ( ( p / q ) * r / ( c ) ) + ( n / ( l + m + n + o ) ) * ( v - w ) / x ) ) ) ) + ( 100 * ( ( c_h + 2 * c_i + c_j ) / ( c ) ) ) + ( 100 * ( ( n / ( l + m + n + o ) ) - ( ( c_h + 2 * c_i + c_j ) / ( c ) ) - ( ( ( ( ( p / q ) * r / ( c ) ) / ( ( ( ( ( p / q ) * r / ( c ) ) + ( n / ( l + m + n + o ) ) * ( v - w ) / x ) - ( ( p / q ) * r / ( c ) ) ) + ( ( p / q ) * r / ( c ) ) ) ) * ( ( ( 34 ) * y / ( c ) ) / ( ( p / q ) * r / ( c ) ) ) ) * ( ( ( p / q ) * r / ( c ) ) + ( n / ( l + m + n + o ) ) * ( v - w ) / x ) ) ) ) )",
      "BaseFormula": "100 - ( tma_bottleneck_big_code + tma_bottleneck_instruction_fetch_bw + tma_bottleneck_mispredictions + tma_bottleneck_data_cache_memory_bandwidth + tma_bottleneck_data_cache_memory_latency + tma_bottleneck_memory_data_tlbs + tma_bottleneck_memory_synchronization + tma_bottleneck_compute_bound_est + tma_bottleneck_irregular_overhead + tma_bottleneck_branching_overhead + tma_bottleneck_useful_work )",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Bottleneck_Other_Bottlenecks"
          }
        ],
        "Formula": "a > 20",
        "BaseFormula": "metric_TMA_Bottleneck_Other_Bottlenecks > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvOB;Cor;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "Bottleneck_Branching_Overhead",
      "LegacyName": "metric_TMA_Bottleneck_Branching_Overhead",
      "Level": 1,
      "BriefDescription": "Total pipeline cost of instructions used for program control-flow - a subset of the Retiring category in TMA. Examples include function calls; loops and alignments. (A lower bound)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "BR_INST_RETIRED.ALL_BRANCHES",
          "Alias": "a"
        },
        {
          "Name": "BR_INST_RETIRED.NEAR_CALL",
          "Alias": "b"
        },
        {
          "Name": "INST_RETIRED.NOP",
          "Alias": "c"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a + 2 * b + c ) / ( d ) )",
      "BaseFormula": "100 * ( ( br_inst_retired.all_branches + 2 * br_inst_retired.near_call + inst_retired.nop ) / tma_info_thread_slots )",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Bottleneck_Branching_Overhead"
          }
        ],
        "Formula": "a > 5",
        "BaseFormula": "metric_TMA_Bottleneck_Branching_Overhead > 5",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvBO;Ret",
      "LocateWith": ""
    },
    {
      "MetricName": "Bottleneck_Useful_Work",
      "LegacyName": "metric_TMA_Bottleneck_Useful_Work",
      "Level": 1,
      "BriefDescription": "Total pipeline cost of \"useful operations\" - the portion of Retiring category not covered by Branching_Overhead nor Irregular_Overhead.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "BR_INST_RETIRED.ALL_BRANCHES",
          "Alias": "e"
        },
        {
          "Name": "BR_INST_RETIRED.NEAR_CALL",
          "Alias": "f"
        },
        {
          "Name": "INST_RETIRED.NOP",
          "Alias": "g"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "h"
        },
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "i"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "j"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "k"
        },
        {
          "Name": "UOPS_DECODED.DEC0",
          "Alias": "l"
        },
        {
          "Name": "UOPS_DECODED.DEC0:c1",
          "Alias": "m"
        },
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "n"
        },
        {
          "Name": "ASSISTS.ANY",
          "Alias": "o"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a / ( b + c + a + d ) ) - ( ( e + 2 * f + g ) / ( h ) ) - ( ( ( ( ( i / j ) * k / ( h ) ) / ( ( ( ( ( i / j ) * k / ( h ) ) + ( a / ( b + c + a + d ) ) * ( l - m ) / n ) - ( ( i / j ) * k / ( h ) ) ) + ( ( i / j ) * k / ( h ) ) ) ) * ( ( ( 34 ) * o / ( h ) ) / ( ( i / j ) * k / ( h ) ) ) ) * ( ( ( i / j ) * k / ( h ) ) + ( a / ( b + c + a + d ) ) * ( l - m ) / n ) ) )",
      "BaseFormula": "100 * ( tma_retiring - ( ( br_inst_retired.all_branches + 2 * br_inst_retired.near_call + inst_retired.nop ) / tma_info_thread_slots ) - ( ( ( tma_microcode_sequencer / ( tma_few_uops_instructions + tma_microcode_sequencer ) ) * ( tma_assists / tma_microcode_sequencer ) ) * tma_heavy_operations ) )",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Bottleneck_Useful_Work"
          }
        ],
        "Formula": "a > 20",
        "BaseFormula": "metric_TMA_Bottleneck_Useful_Work > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvUW;Ret",
      "LocateWith": ""
    },
    {
      "MetricName": "Frontend_Bound",
      "LegacyName": "metric_TMA_Frontend_Bound(%)",
      "Level": 1,
      "BriefDescription": "This category represents fraction of slots where the processor's Frontend undersupplies its Backend. Frontend denotes the first part of the processor core responsible to fetch operations that are executed later on by the Backend part. Within the Frontend; a branch predictor predicts the next address to fetch; cache-lines are fetched from the memory subsystem; parsed into instructions; and lastly decoded into micro-operations (uops). Ideally the Frontend can issue Pipeline_Width uops every cycle to the Backend. Frontend Bound denotes unutilized issue-slots when there is no Backend stall; i.e. bubbles where Frontend delivered no uops while Backend could have accepted them. For example; stalls due to instruction-cache misses would be categorized under Frontend Bound.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "e"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "f"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( a + b + c + d ) - e / ( f ) )",
      "BaseFormula": "perf_metrics.frontend_bound / ( perf_metrics.frontend_bound + perf_metrics.bad_speculation + perf_metrics.retiring + perf_metrics.backend_bound ) - int_misc.uop_dropping / tma_info_thread_slots",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 15",
        "BaseFormula": "metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvFB;BvIO;TmaL1;PGO",
      "LocateWith": "FRONTEND_RETIRED.LATENCY_GE_4"
    },
    {
      "MetricName": "Fetch_Latency",
      "LegacyName": "metric_TMA_..Fetch_Latency(%)",
      "ParentCategory": "Frontend_Bound",
      "Level": 2,
      "BriefDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend latency issues.  For example; instruction-cache misses; iTLB misses or fetch stalls after a branch misprediction are categorized under Frontend Latency. In such cases; the Frontend eventually delivers no uops for some period.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE",
          "Alias": "a"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "b"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( ( 5 ) * a - b ) / ( c ) )",
      "BaseFormula": "( ( 5 ) * idq_uops_not_delivered.cycles_0_uops_deliv.core - int_misc.uop_dropping ) / tma_info_thread_slots",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 10 & b > 15",
        "BaseFormula": "metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Frontend;TmaL2",
      "LocateWith": "FRONTEND_RETIRED.LATENCY_GE_16;FRONTEND_RETIRED.LATENCY_GE_8"
    },
    {
      "MetricName": "ICache_Misses",
      "LegacyName": "metric_TMA_....ICache_Misses(%)",
      "ParentCategory": "Fetch_Latency",
      "Level": 3,
      "BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to instruction cache misses.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "ICACHE_DATA.STALLS",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "icache_data.stalls / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....ICache_Misses(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 10 & c > 15",
        "BaseFormula": "metric_TMA_....ICache_Misses(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BigFootprint;BvBC;FetchLat;IcMiss",
      "LocateWith": "FRONTEND_RETIRED.L2_MISS;FRONTEND_RETIRED.L1I_MISS"
    },
    {
      "MetricName": "Code_L2_Hit",
      "LegacyName": "metric_TMA_......Code_L2_Hit(%)",
      "ParentCategory": "ICache_Misses",
      "Level": 4,
      "BriefDescription": "This metric estimates fraction of cycles the CPU was stalled due to instruction cache misses that hit in the L2 cache.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "ICACHE_DATA.STALLS",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_CODE_RD",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( max( 0 , ( a / ( b ) ) - ( c / ( b ) ) ) )",
      "BaseFormula": "max( 0 , tma_icache_misses - tma_code_l2_miss )",
      "Category": "TMA",
      "CountDomain": "Clocks_Retired",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Code_L2_Hit(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....ICache_Misses(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 10 & d > 15",
        "BaseFormula": "metric_TMA_......Code_L2_Hit(%) > 5 & metric_TMA_....ICache_Misses(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "IcMiss;FetchLat;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "Code_L2_Miss",
      "LegacyName": "metric_TMA_......Code_L2_Miss(%)",
      "ParentCategory": "ICache_Misses",
      "Level": 4,
      "BriefDescription": "This metric estimates fraction of cycles the CPU was stalled due to instruction cache misses that miss in the L2 cache.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_CODE_RD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "offcore_requests_outstanding.cycles_with_demand_code_rd / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Retired",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Code_L2_Miss(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....ICache_Misses(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 10 & d > 15",
        "BaseFormula": "metric_TMA_......Code_L2_Miss(%) > 5 & metric_TMA_....ICache_Misses(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "IcMiss;FetchLat;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "ITLB_Misses",
      "LegacyName": "metric_TMA_....ITLB_Misses(%)",
      "ParentCategory": "Fetch_Latency",
      "Level": 3,
      "BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Instruction TLB (ITLB) misses.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "ICACHE_TAG.STALLS",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "icache_tag.stalls / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....ITLB_Misses(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 10 & c > 15",
        "BaseFormula": "metric_TMA_....ITLB_Misses(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BigFootprint;BvBC;FetchLat;MemoryTLB",
      "LocateWith": "FRONTEND_RETIRED.STLB_MISS;FRONTEND_RETIRED.ITLB_MISS"
    },
    {
      "MetricName": "Code_STLB_Hit",
      "LegacyName": "metric_TMA_......Code_STLB_Hit(%)",
      "ParentCategory": "ITLB_Misses",
      "Level": 4,
      "BriefDescription": "This metric roughly estimates the fraction of cycles where the (first level) ITLB was missed by instructions fetches, that later on hit in second-level TLB (STLB)",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "ICACHE_TAG.STALLS",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        },
        {
          "Name": "ITLB_MISSES.WALK_ACTIVE",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( max( 0 , ( a / ( b ) ) - ( c / ( b ) ) ) )",
      "BaseFormula": "max( 0 , tma_itlb_misses - tma_code_stlb_miss )",
      "Category": "TMA",
      "CountDomain": "Clocks_Retired",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Code_STLB_Hit(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....ITLB_Misses(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 10 & d > 15",
        "BaseFormula": "metric_TMA_......Code_STLB_Hit(%) > 5 & metric_TMA_....ITLB_Misses(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "FetchLat;MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Code_STLB_Miss",
      "LegacyName": "metric_TMA_......Code_STLB_Miss(%)",
      "ParentCategory": "ITLB_Misses",
      "Level": 4,
      "BriefDescription": "This metric estimates the fraction of cycles where the Second-level TLB (STLB) was missed by instruction fetches, performing a hardware page walk",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "ITLB_MISSES.WALK_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "itlb_misses.walk_active / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Retired",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Code_STLB_Miss(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....ITLB_Misses(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 10 & d > 15",
        "BaseFormula": "metric_TMA_......Code_STLB_Miss(%) > 5 & metric_TMA_....ITLB_Misses(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "FetchLat;MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Code_STLB_Miss_4K",
      "LegacyName": "metric_TMA_........Code_STLB_Miss_4K(%)",
      "ParentCategory": "Code_STLB_Miss",
      "Level": 5,
      "BriefDescription": "This metric estimates the fraction of cycles to walk the memory paging structures to cache translation of 4 KB pages for (instruction) code accesses.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "ITLB_MISSES.WALK_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        },
        {
          "Name": "ITLB_MISSES.WALK_COMPLETED_4K",
          "Alias": "c"
        },
        {
          "Name": "ITLB_MISSES.WALK_COMPLETED_2M_4M",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a / ( b ) ) * c / ( c + d ) )",
      "BaseFormula": "tma_code_stlb_miss * itlb_misses.walk_completed_4k / ( itlb_misses.walk_completed_4k + itlb_misses.walk_completed_2m_4m )",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........Code_STLB_Miss_4K(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_......Code_STLB_Miss(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_....ITLB_Misses(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 5 & d > 10 & e > 15",
        "BaseFormula": "metric_TMA_........Code_STLB_Miss_4K(%) > 5 & metric_TMA_......Code_STLB_Miss(%) > 5 & metric_TMA_....ITLB_Misses(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "FetchLat;MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Code_STLB_Miss_2M",
      "LegacyName": "metric_TMA_........Code_STLB_Miss_2M(%)",
      "ParentCategory": "Code_STLB_Miss",
      "Level": 5,
      "BriefDescription": "This metric estimates the fraction of cycles to walk the memory paging structures to cache translation of 2 or 4 MB pages for (instruction) code accesses.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "ITLB_MISSES.WALK_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        },
        {
          "Name": "ITLB_MISSES.WALK_COMPLETED_2M_4M",
          "Alias": "c"
        },
        {
          "Name": "ITLB_MISSES.WALK_COMPLETED_4K",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a / ( b ) ) * c / ( d + c ) )",
      "BaseFormula": "tma_code_stlb_miss * itlb_misses.walk_completed_2m_4m / ( itlb_misses.walk_completed_4k + itlb_misses.walk_completed_2m_4m )",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........Code_STLB_Miss_2M(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_......Code_STLB_Miss(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_....ITLB_Misses(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 5 & d > 10 & e > 15",
        "BaseFormula": "metric_TMA_........Code_STLB_Miss_2M(%) > 5 & metric_TMA_......Code_STLB_Miss(%) > 5 & metric_TMA_....ITLB_Misses(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "FetchLat;MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Branch_Resteers",
      "LegacyName": "metric_TMA_....Branch_Resteers(%)",
      "ParentCategory": "Fetch_Latency",
      "Level": 3,
      "BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers. Branch Resteers estimates the Frontend delay in fetching operations from corrected path; following all sorts of miss-predicted branches. For example; branchy code with lots of miss-predictions might get categorized under Branch Resteers. Note the value of this node may overlap with its siblings.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "INT_MISC.CLEAR_RESTEER_CYCLES",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        },
        {
          "Name": "BACLEARS.ANY",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) + ( 10 ) * c / ( b ) )",
      "BaseFormula": "int_misc.clear_resteer_cycles / tma_info_thread_clks + ( 10 ) * baclears.any / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....Branch_Resteers(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 10 & c > 15",
        "BaseFormula": "metric_TMA_....Branch_Resteers(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": "~overlap"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "FetchLat",
      "LocateWith": "BR_MISP_RETIRED.ALL_BRANCHES"
    },
    {
      "MetricName": "Mispredicts_Resteers",
      "LegacyName": "metric_TMA_......Mispredicts_Resteers(%)",
      "ParentCategory": "Branch_Resteers",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Branch Misprediction at execution stage.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "BR_MISP_RETIRED.ALL_BRANCHES",
          "Alias": "a"
        },
        {
          "Name": "MACHINE_CLEARS.COUNT",
          "Alias": "b"
        },
        {
          "Name": "INT_MISC.CLEAR_RESTEER_CYCLES",
          "Alias": "c"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a / ( a + b ) ) * c / ( d ) )",
      "BaseFormula": "( br_misp_retired.all_branches / ( br_misp_retired.all_branches + machine_clears.count ) ) * int_misc.clear_resteer_cycles / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Mispredicts_Resteers(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Branch_Resteers(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 10 & d > 15",
        "BaseFormula": "metric_TMA_......Mispredicts_Resteers(%) > 5 & metric_TMA_....Branch_Resteers(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": "$issueBM"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BadSpec;BrMispredicts;BvMP",
      "LocateWith": "INT_MISC.CLEAR_RESTEER_CYCLES"
    },
    {
      "MetricName": "Clears_Resteers",
      "LegacyName": "metric_TMA_......Clears_Resteers(%)",
      "ParentCategory": "Branch_Resteers",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Machine Clears.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "BR_MISP_RETIRED.ALL_BRANCHES",
          "Alias": "a"
        },
        {
          "Name": "MACHINE_CLEARS.COUNT",
          "Alias": "b"
        },
        {
          "Name": "INT_MISC.CLEAR_RESTEER_CYCLES",
          "Alias": "c"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( 1 - ( a / ( a + b ) ) ) * c / ( d ) )",
      "BaseFormula": "( 1 - ( br_misp_retired.all_branches / ( br_misp_retired.all_branches + machine_clears.count ) ) ) * int_misc.clear_resteer_cycles / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Clears_Resteers(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Branch_Resteers(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 10 & d > 15",
        "BaseFormula": "metric_TMA_......Clears_Resteers(%) > 5 & metric_TMA_....Branch_Resteers(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": "$issueMC"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BadSpec;MachineClears",
      "LocateWith": "INT_MISC.CLEAR_RESTEER_CYCLES"
    },
    {
      "MetricName": "Unknown_Branches",
      "LegacyName": "metric_TMA_......Unknown_Branches(%)",
      "ParentCategory": "Branch_Resteers",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to new branch address clears. These are fetched branches the Branch Prediction Unit was unable to recognize (e.g. first time the branch is fetched or hitting BTB capacity limit) hence called Unknown Branches",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "BACLEARS.ANY",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( 10 ) * a / ( b ) )",
      "BaseFormula": "( 10 ) * baclears.any / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Unknown_Branches(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Branch_Resteers(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 10 & d > 15",
        "BaseFormula": "metric_TMA_......Unknown_Branches(%) > 5 & metric_TMA_....Branch_Resteers(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BigFootprint;BvBC;FetchLat",
      "LocateWith": "BACLEARS.ANY"
    },
    {
      "MetricName": "MS_Switches",
      "LegacyName": "metric_TMA_....MS_Switches(%)",
      "ParentCategory": "Fetch_Latency",
      "Level": 3,
      "BriefDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS). Commonly used instructions are optimized for delivery by the DSB (decoded i-cache) or MITE (legacy instruction decode) pipelines. Certain operations cannot be handled natively by the execution pipeline; and must be performed by microcode (small programs injected into the execution stream). Switching to the MS too often can negatively impact performance. The MS is designated to deliver long uop flows required by CISC instructions like CPUID; or uncommon conditions like Floating Point Assists when dealing with Denormals.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "IDQ.MS_SWITCHES",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( 3 ) * a / ( b ) )",
      "BaseFormula": "( 3 ) * idq.ms_switches / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....MS_Switches(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 10 & c > 15",
        "BaseFormula": "metric_TMA_....MS_Switches(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": "$issueMC, $issueMS, $issueMV, $issueSO"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "FetchLat;MicroSeq",
      "LocateWith": "IDQ.MS_SWITCHES"
    },
    {
      "MetricName": "LCP",
      "LegacyName": "metric_TMA_....LCP(%)",
      "ParentCategory": "Fetch_Latency",
      "Level": 3,
      "BriefDescription": "This metric represents fraction of cycles CPU was stalled due to Length Changing Prefixes (LCPs). Using proper compiler flags or Intel Compiler by default will certainly avoid this.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "DECODE.LCP",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "decode.lcp / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....LCP(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 10 & c > 15",
        "BaseFormula": "metric_TMA_....LCP(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": "$issueFB"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "FetchLat",
      "LocateWith": ""
    },
    {
      "MetricName": "DSB_Switches",
      "LegacyName": "metric_TMA_....DSB_Switches(%)",
      "ParentCategory": "Fetch_Latency",
      "Level": 3,
      "BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to switches from DSB to MITE pipelines. The DSB (decoded i-cache) is a Uop Cache where the front-end directly delivers Uops (micro operations) avoiding heavy x86 decoding. The DSB pipeline has shorter latency and delivered higher bandwidth than the MITE (legacy instruction decode pipeline). Switching between the two pipelines can cause penalties hence this metric measures the exposed penalty.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "DSB2MITE_SWITCHES.PENALTY_CYCLES",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "dsb2mite_switches.penalty_cycles / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....DSB_Switches(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Fetch_Latency(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Frontend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 10 & c > 15",
        "BaseFormula": "metric_TMA_....DSB_Switches(%) > 5 & metric_TMA_..Fetch_Latency(%) > 10 & metric_TMA_Frontend_Bound(%) > 15",
        "ThresholdIssues": "$issueFB"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "DSBmiss;FetchLat",
      "LocateWith": "FRONTEND_RETIRED.DSB_MISS"
    },
    {
      "MetricName": "Fetch_Bandwidth",
      "LegacyName": "metric_TMA_..Fetch_Bandwidth(%)",
      "ParentCategory": "Frontend_Bound",
      "Level": 2,
      "BriefDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues.  For example; inefficiencies at the instruction decoders; or restrictions for caching in the DSB (decoded uops cache) are categorized under Fetch Bandwidth. In such cases; the Frontend typically delivers suboptimal amount of uops to the Backend.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "e"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "f"
        },
        {
          "Name": "IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE",
          "Alias": "g"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( max( 0 , ( a / ( a + b + c + d ) - e / ( f ) ) - ( ( ( 5 ) * g - e ) / ( f ) ) ) )",
      "BaseFormula": "max( 0 , tma_frontend_bound - tma_fetch_latency )",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..Fetch_Bandwidth(%)"
          }
        ],
        "Formula": "a > 20",
        "BaseFormula": "metric_TMA_..Fetch_Bandwidth(%) > 20",
        "ThresholdIssues": "$issueFB"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "FetchBW;Frontend;TmaL2",
      "LocateWith": "FRONTEND_RETIRED.LATENCY_GE_2_BUBBLES_GE_1;FRONTEND_RETIRED.LATENCY_GE_1;FRONTEND_RETIRED.LATENCY_GE_2"
    },
    {
      "MetricName": "MITE",
      "LegacyName": "metric_TMA_....MITE(%)",
      "ParentCategory": "Fetch_Bandwidth",
      "Level": 3,
      "BriefDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to the MITE pipeline (the legacy decode pipeline). This pipeline is used for code that was not pre-cached in the DSB or LSD. For example; inefficiencies due to asymmetric decoders; use of long immediate or LCP can manifest as MITE fetch bandwidth bottleneck.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "IDQ.MITE_CYCLES_ANY",
          "Alias": "a"
        },
        {
          "Name": "IDQ.MITE_CYCLES_OK",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "c"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "d"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( a - b ) / ( c if smt_on else ( d ) ) / 2 )",
      "BaseFormula": "( idq.mite_cycles_any - idq.mite_cycles_ok ) / tma_info_core_core_clks / 2",
      "Category": "TMA",
      "CountDomain": "Slots_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....MITE(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Fetch_Bandwidth(%)"
          }
        ],
        "Formula": "a > 10 & b > 20",
        "BaseFormula": "metric_TMA_....MITE(%) > 10 & metric_TMA_..Fetch_Bandwidth(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "DSBmiss;FetchBW",
      "LocateWith": "FRONTEND_RETIRED.ANY_DSB_MISS"
    },
    {
      "MetricName": "Decoder0_Alone",
      "LegacyName": "metric_TMA_......Decoder0_Alone(%)",
      "ParentCategory": "MITE",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of cycles where decoder-0 was the only active decoder",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "INST_DECODED.DECODERS:c1",
          "Alias": "a"
        },
        {
          "Name": "INST_DECODED.DECODERS:c2",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "c"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "d"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( a - b ) / ( c if smt_on else ( d ) ) / 2 )",
      "BaseFormula": "( inst_decoded.decoders:c1 - inst_decoded.decoders:c2 ) / tma_info_core_core_clks / 2",
      "Category": "TMA",
      "CountDomain": "Slots_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Decoder0_Alone(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....MITE(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Fetch_Bandwidth(%)"
          }
        ],
        "Formula": "a > 10 & b > 10 & c > 20",
        "BaseFormula": "metric_TMA_......Decoder0_Alone(%) > 10 & metric_TMA_....MITE(%) > 10 & metric_TMA_..Fetch_Bandwidth(%) > 20",
        "ThresholdIssues": "$issueD0"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "DSBmiss;FetchBW",
      "LocateWith": ""
    },
    {
      "MetricName": "MITE_4wide",
      "LegacyName": "metric_TMA_......MITE_4wide(%)",
      "ParentCategory": "MITE",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of cycles where (only) 4 uops were delivered by the MITE pipeline",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "IDQ.MITE_UOPS:c4",
          "Alias": "a"
        },
        {
          "Name": "IDQ.MITE_UOPS:c5",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a - b ) / ( c ) )",
      "BaseFormula": "( idq.mite_uops:c4 - idq.mite_uops:c5 ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Core_Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......MITE_4wide(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....MITE(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Fetch_Bandwidth(%)"
          }
        ],
        "Formula": "a > 5 & b > 10 & c > 20",
        "BaseFormula": "metric_TMA_......MITE_4wide(%) > 5 & metric_TMA_....MITE(%) > 10 & metric_TMA_..Fetch_Bandwidth(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "DSBmiss;FetchBW",
      "LocateWith": ""
    },
    {
      "MetricName": "DSB",
      "LegacyName": "metric_TMA_....DSB(%)",
      "ParentCategory": "Fetch_Bandwidth",
      "Level": 3,
      "BriefDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline.  For example; inefficient utilization of the DSB cache structure or bank conflict when reading from it; are categorized here.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "IDQ.DSB_CYCLES_ANY",
          "Alias": "a"
        },
        {
          "Name": "IDQ.DSB_CYCLES_OK",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "c"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "d"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( a - b ) / ( c if smt_on else ( d ) ) / 2 )",
      "BaseFormula": "( idq.dsb_cycles_any - idq.dsb_cycles_ok ) / tma_info_core_core_clks / 2",
      "Category": "TMA",
      "CountDomain": "Slots_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....DSB(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Fetch_Bandwidth(%)"
          }
        ],
        "Formula": "a > 15 & b > 20",
        "BaseFormula": "metric_TMA_....DSB(%) > 15 & metric_TMA_..Fetch_Bandwidth(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "DSB;FetchBW",
      "LocateWith": ""
    },
    {
      "MetricName": "MS",
      "LegacyName": "metric_TMA_....MS(%)",
      "ParentCategory": "Fetch_Bandwidth",
      "Level": 3,
      "BriefDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to the Microcode Sequencer (MS) unit - see Microcode_Sequencer node for details.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "IDQ.MS_UOPS:c1",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( a / ( b if smt_on else ( c ) ) / 3.3 )",
      "BaseFormula": "idq.ms_uops:c1 / tma_info_core_core_clks / 3.3",
      "Category": "TMA",
      "CountDomain": "Slots_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....MS(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Fetch_Bandwidth(%)"
          }
        ],
        "Formula": "a > 5 & b > 20",
        "BaseFormula": "metric_TMA_....MS(%) > 5 & metric_TMA_..Fetch_Bandwidth(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MicroSeq",
      "LocateWith": ""
    },
    {
      "MetricName": "Bad_Speculation",
      "LegacyName": "metric_TMA_Bad_Speculation(%)",
      "Level": 1,
      "BriefDescription": "This category represents fraction of slots wasted due to incorrect speculations. This include slots used to issue uops that do not eventually get retired and slots for which the issue-pipeline was blocked due to recovery from earlier incorrect speculation. For example; wasted work due to miss-predicted branches are categorized under Bad Speculation category. Incorrect data speculation followed by Memory Ordering Nukes is another example.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "e"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "f"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "g"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( max( 1 - ( ( a / ( a + b + c + d ) - e / ( f ) ) + ( d / ( a + b + c + d ) + ( ( 5 ) * g ) / ( f ) ) + ( c / ( a + b + c + d ) ) ) , 0 ) )",
      "BaseFormula": "max( 1 - ( tma_frontend_bound + tma_backend_bound + tma_retiring ) , 0 )",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Bad_Speculation(%)"
          }
        ],
        "Formula": "a > 15",
        "BaseFormula": "metric_TMA_Bad_Speculation(%) > 15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "TmaL1",
      "LocateWith": "#NA"
    },
    {
      "MetricName": "Branch_Mispredicts",
      "LegacyName": "metric_TMA_..Branch_Mispredicts(%)",
      "ParentCategory": "Bad_Speculation",
      "Level": 2,
      "BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction.  These slots are either wasted by uops fetched from an incorrectly speculated program path; or stalls when the out-of-order part of the machine needs to recover its state from a speculative path.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "BR_MISP_RETIRED.ALL_BRANCHES",
          "Alias": "a"
        },
        {
          "Name": "MACHINE_CLEARS.COUNT",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "e"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "f"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "g"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "h"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "i"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a / ( a + b ) ) * ( max( 1 - ( ( c / ( c + d + e + f ) - g / ( h ) ) + ( f / ( c + d + e + f ) + ( ( 5 ) * i ) / ( h ) ) + ( e / ( c + d + e + f ) ) ) , 0 ) ) )",
      "BaseFormula": "( br_misp_retired.all_branches / ( br_misp_retired.all_branches + machine_clears.count ) ) * tma_bad_speculation",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..Branch_Mispredicts(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_Bad_Speculation(%)"
          }
        ],
        "Formula": "a > 10 & b > 15",
        "BaseFormula": "metric_TMA_..Branch_Mispredicts(%) > 10 & metric_TMA_Bad_Speculation(%) > 15",
        "ThresholdIssues": "$issueBM"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BadSpec;BrMispredicts;BvMP;TmaL2",
      "LocateWith": "BR_MISP_RETIRED.ALL_BRANCHES"
    },
    {
      "MetricName": "Other_Mispredicts",
      "LegacyName": "metric_TMA_....Other_Mispredicts(%)",
      "ParentCategory": "Branch_Mispredicts",
      "Level": 3,
      "BriefDescription": "This metric estimates fraction of slots the CPU was stalled due to other cases of misprediction (non-retired x86 branches or other types).",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "BR_MISP_RETIRED.ALL_BRANCHES",
          "Alias": "a"
        },
        {
          "Name": "MACHINE_CLEARS.COUNT",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "e"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "f"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "g"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "h"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "i"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( max( ( ( a / ( a + b ) ) * ( max( 1 - ( ( c / ( c + d + e + f ) - g / ( h ) ) + ( f / ( c + d + e + f ) + ( ( 5 ) * i ) / ( h ) ) + ( e / ( c + d + e + f ) ) ) , 0 ) ) ) * ( 1 - a / ( i - b ) ) , 0.0001 ) )",
      "BaseFormula": "max( tma_branch_mispredicts * ( 1 - br_misp_retired.all_branches / ( int_misc.clears_count - machine_clears.count ) ) , 0.0001 )",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....Other_Mispredicts(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Branch_Mispredicts(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Bad_Speculation(%)"
          }
        ],
        "Formula": "a > 5 & b > 10 & c > 15",
        "BaseFormula": "metric_TMA_....Other_Mispredicts(%) > 5 & metric_TMA_..Branch_Mispredicts(%) > 10 & metric_TMA_Bad_Speculation(%) > 15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvIO;BrMispredicts",
      "LocateWith": ""
    },
    {
      "MetricName": "Machine_Clears",
      "LegacyName": "metric_TMA_..Machine_Clears(%)",
      "ParentCategory": "Bad_Speculation",
      "Level": 2,
      "BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears.  These slots are either wasted by uops fetched prior to the clear; or stalls the out-of-order portion of the machine needs to recover its state after the clear. For example; this can happen due to memory ordering Nukes (e.g. Memory Disambiguation) or Self-Modifying-Code (SMC) nukes.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "e"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "f"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "g"
        },
        {
          "Name": "BR_MISP_RETIRED.ALL_BRANCHES",
          "Alias": "h"
        },
        {
          "Name": "MACHINE_CLEARS.COUNT",
          "Alias": "i"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( max( 0 , ( max( 1 - ( ( a / ( a + b + c + d ) - e / ( f ) ) + ( d / ( a + b + c + d ) + ( ( 5 ) * g ) / ( f ) ) + ( c / ( a + b + c + d ) ) ) , 0 ) ) - ( ( h / ( h + i ) ) * ( max( 1 - ( ( a / ( a + b + c + d ) - e / ( f ) ) + ( d / ( a + b + c + d ) + ( ( 5 ) * g ) / ( f ) ) + ( c / ( a + b + c + d ) ) ) , 0 ) ) ) ) )",
      "BaseFormula": "max( 0 , tma_bad_speculation - tma_branch_mispredicts )",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..Machine_Clears(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_Bad_Speculation(%)"
          }
        ],
        "Formula": "a > 10 & b > 15",
        "BaseFormula": "metric_TMA_..Machine_Clears(%) > 10 & metric_TMA_Bad_Speculation(%) > 15",
        "ThresholdIssues": "$issueMC, $issueSyncxn"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BadSpec;BvMS;MachineClears;TmaL2",
      "LocateWith": "MACHINE_CLEARS.COUNT"
    },
    {
      "MetricName": "Other_Nukes",
      "LegacyName": "metric_TMA_....Other_Nukes(%)",
      "ParentCategory": "Machine_Clears",
      "Level": 3,
      "BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Nukes (Machine Clears) not related to memory ordering.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "e"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "f"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "g"
        },
        {
          "Name": "BR_MISP_RETIRED.ALL_BRANCHES",
          "Alias": "h"
        },
        {
          "Name": "MACHINE_CLEARS.COUNT",
          "Alias": "i"
        },
        {
          "Name": "MACHINE_CLEARS.MEMORY_ORDERING",
          "Alias": "j"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( max( ( max( 0 , ( max( 1 - ( ( a / ( a + b + c + d ) - e / ( f ) ) + ( d / ( a + b + c + d ) + ( ( 5 ) * g ) / ( f ) ) + ( c / ( a + b + c + d ) ) ) , 0 ) ) - ( ( h / ( h + i ) ) * ( max( 1 - ( ( a / ( a + b + c + d ) - e / ( f ) ) + ( d / ( a + b + c + d ) + ( ( 5 ) * g ) / ( f ) ) + ( c / ( a + b + c + d ) ) ) , 0 ) ) ) ) ) * ( 1 - j / i ) , 0.0001 ) )",
      "BaseFormula": "max( tma_machine_clears * ( 1 - machine_clears.memory_ordering / machine_clears.count ) , 0.0001 )",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....Other_Nukes(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Machine_Clears(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Bad_Speculation(%)"
          }
        ],
        "Formula": "a > 5 & b > 10 & c > 15",
        "BaseFormula": "metric_TMA_....Other_Nukes(%) > 5 & metric_TMA_..Machine_Clears(%) > 10 & metric_TMA_Bad_Speculation(%) > 15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvIO;Machine_Clears",
      "LocateWith": ""
    },
    {
      "MetricName": "Backend_Bound",
      "LegacyName": "metric_TMA_Backend_Bound(%)",
      "Level": 1,
      "BriefDescription": "This category represents fraction of slots where no uops are being delivered due to a lack of required resources for accepting new uops in the Backend. Backend is the portion of the processor core where the out-of-order scheduler dispatches ready uops into their respective execution units; and once completed these uops get retired according to program order. For example; stalls due to data-cache misses or stalls due to the divider unit being overloaded are both categorized under Backend Bound. Backend Bound is further divided into two main categories: Memory Bound and Core Bound.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "d"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "e"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "f"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b + c + d + a ) + ( ( 5 ) * e ) / ( f ) )",
      "BaseFormula": "perf_metrics.backend_bound / ( perf_metrics.frontend_bound + perf_metrics.bad_speculation + perf_metrics.retiring + perf_metrics.backend_bound ) + ( ( 5 ) * int_misc.clears_count ) / tma_info_thread_slots",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 20",
        "BaseFormula": "metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvOB;TmaL1",
      "LocateWith": "TOPDOWN.BACKEND_BOUND_SLOTS"
    },
    {
      "MetricName": "Memory_Bound",
      "LegacyName": "metric_TMA_..Memory_Bound(%)",
      "ParentCategory": "Backend_Bound",
      "Level": 2,
      "BriefDescription": "This metric represents fraction of slots the Memory subsystem within the Backend was a bottleneck.  Memory Bound estimates fraction of slots where pipeline is likely stalled due to demand load or store instructions. This accounts mainly for (1) non-completed in-flight memory demand loads which coincides with execution units starvation; in addition to (2) cases where stores could impose backpressure on the pipeline when many of them get buffered at the same time (less common out of the two).",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CYCLE_ACTIVITY.STALLS_MEM_ANY",
          "Alias": "a"
        },
        {
          "Name": "EXE_ACTIVITY.BOUND_ON_STORES",
          "Alias": "b"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_TOTAL",
          "Alias": "c"
        },
        {
          "Name": "EXE_ACTIVITY.1_PORTS_UTIL",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "e"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "f"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "g"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "h"
        },
        {
          "Name": "EXE_ACTIVITY.2_PORTS_UTIL",
          "Alias": "i"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "j"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "k"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( ( a + b ) / ( c + ( d + ( e / ( f + g + e + h ) ) * i ) + b ) ) * ( h / ( f + g + e + h ) + ( ( 5 ) * j ) / ( k ) ) )",
      "BaseFormula": "( ( cycle_activity.stalls_mem_any + exe_activity.bound_on_stores ) / ( cycle_activity.stalls_total + ( exe_activity.1_ports_util + tma_retiring * exe_activity.2_ports_util ) + exe_activity.bound_on_stores ) ) * tma_backend_bound",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 20 & b > 20",
        "BaseFormula": "metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Backend;TmaL2",
      "LocateWith": "#NA"
    },
    {
      "MetricName": "L1_Bound",
      "LegacyName": "metric_TMA_....L1_Bound(%)",
      "ParentCategory": "Memory_Bound",
      "Level": 3,
      "BriefDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 Data (L1D) cache.  The L1D cache typically has the shortest latency.  However; in certain cases like loads blocked on older stores; a load might suffer due to high latency even though it is being satisfied by the L1D. Another example is loads who miss in the TLB. These cases are characterized by execution unit stalls; while some non-completed demand load lives in the machine without having that demand load missing the L1 cache.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CYCLE_ACTIVITY.STALLS_MEM_ANY",
          "Alias": "a"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L1D_MISS",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( max( ( a - b ) / ( c ) , 0 ) )",
      "BaseFormula": "max( ( cycle_activity.stalls_mem_any - cycle_activity.stalls_l1d_miss ) / tma_info_thread_clks , 0 )",
      "Category": "TMA",
      "CountDomain": "Stalls",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....L1_Bound(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 10 & b > 20 & c > 20",
        "BaseFormula": "metric_TMA_....L1_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueL1, $issueMC"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "CacheHits;MemoryBound;TmaL3mem",
      "LocateWith": "MEM_LOAD_RETIRED.L1_HIT"
    },
    {
      "MetricName": "DTLB_Load",
      "LegacyName": "metric_TMA_......DTLB_Load(%)",
      "ParentCategory": "L1_Bound",
      "Level": 4,
      "BriefDescription": "This metric roughly estimates the fraction of cycles where the Data TLB (DTLB) was missed by load accesses. TLBs (Translation Look-aside Buffers) are processor caches for recently used entries out of the Page Tables that are used to map virtual- to physical-addresses by the operating system. This metric approximates the potential delay of demand loads missing the first-level data TLB (assuming worst case scenario with back to back misses to different pages). This includes hitting in the second-level TLB (STLB) as well as performing a hardware page walk on an STLB miss.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "DTLB_LOAD_MISSES.STLB_HIT:c1",
          "Alias": "a"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_ACTIVE",
          "Alias": "b"
        },
        {
          "Name": "CYCLE_ACTIVITY.CYCLES_MEM_ANY",
          "Alias": "c"
        },
        {
          "Name": "CYCLE_ACTIVITY.CYCLES_L1D_MISS",
          "Alias": "d"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "e"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( min( ( 7 ) * a + b , max( c - d , 0 ) ) / ( e ) )",
      "BaseFormula": "min( ( 7 ) * dtlb_load_misses.stlb_hit:c1 + dtlb_load_misses.walk_active , max( cycle_activity.cycles_mem_any - cycle_activity.cycles_l1d_miss , 0 ) ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......DTLB_Load(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....L1_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 10 & b > 10 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......DTLB_Load(%) > 10 & metric_TMA_....L1_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueTLB"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvMT;MemoryTLB",
      "LocateWith": "MEM_INST_RETIRED.STLB_MISS_LOADS"
    },
    {
      "MetricName": "Load_STLB_Hit",
      "LegacyName": "metric_TMA_........Load_STLB_Hit(%)",
      "ParentCategory": "DTLB_Load",
      "Level": 5,
      "BriefDescription": "This metric roughly estimates the fraction of cycles where the (first level) DTLB was missed by load accesses, that later on hit in second-level TLB (STLB)",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "DTLB_LOAD_MISSES.STLB_HIT:c1",
          "Alias": "a"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_ACTIVE",
          "Alias": "b"
        },
        {
          "Name": "CYCLE_ACTIVITY.CYCLES_MEM_ANY",
          "Alias": "c"
        },
        {
          "Name": "CYCLE_ACTIVITY.CYCLES_L1D_MISS",
          "Alias": "d"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "e"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( min( ( 7 ) * a + b , max( c - d , 0 ) ) / ( e ) ) - ( b / ( e ) ) )",
      "BaseFormula": "tma_dtlb_load - tma_load_stlb_miss",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........Load_STLB_Hit(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_......DTLB_Load(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_....L1_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 10 & c > 10 & d > 20 & e > 20",
        "BaseFormula": "metric_TMA_........Load_STLB_Hit(%) > 5 & metric_TMA_......DTLB_Load(%) > 10 & metric_TMA_....L1_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Load_STLB_Miss",
      "LegacyName": "metric_TMA_........Load_STLB_Miss(%)",
      "ParentCategory": "DTLB_Load",
      "Level": 5,
      "BriefDescription": "This metric estimates the fraction of cycles where the Second-level TLB (STLB) was missed by load accesses, performing a hardware page walk",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "DTLB_LOAD_MISSES.WALK_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "dtlb_load_misses.walk_active / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Calculated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........Load_STLB_Miss(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_......DTLB_Load(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_....L1_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 10 & c > 10 & d > 20 & e > 20",
        "BaseFormula": "metric_TMA_........Load_STLB_Miss(%) > 5 & metric_TMA_......DTLB_Load(%) > 10 & metric_TMA_....L1_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Load_STLB_Miss_4K",
      "LegacyName": "metric_TMA_..........Load_STLB_Miss_4K(%)",
      "ParentCategory": "Load_STLB_Miss",
      "Level": 6,
      "BriefDescription": "This metric estimates the fraction of cycles to walk the memory paging structures to cache translation of 4 KB pages for data load accesses.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "DTLB_LOAD_MISSES.WALK_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_COMPLETED_4K",
          "Alias": "c"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_COMPLETED_2M_4M",
          "Alias": "d"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_COMPLETED_1G",
          "Alias": "e"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a / ( b ) ) * c / ( c + d + e ) )",
      "BaseFormula": "tma_load_stlb_miss * dtlb_load_misses.walk_completed_4k / ( dtlb_load_misses.walk_completed_4k + dtlb_load_misses.walk_completed_2m_4m + dtlb_load_misses.walk_completed_1g )",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..........Load_STLB_Miss_4K(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_........Load_STLB_Miss(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_......DTLB_Load(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_....L1_Bound(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "f",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 10 & d > 10 & e > 20 & f > 20",
        "BaseFormula": "metric_TMA_..........Load_STLB_Miss_4K(%) > 5 & metric_TMA_........Load_STLB_Miss(%) > 5 & metric_TMA_......DTLB_Load(%) > 10 & metric_TMA_....L1_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Load_STLB_Miss_2M",
      "LegacyName": "metric_TMA_..........Load_STLB_Miss_2M(%)",
      "ParentCategory": "Load_STLB_Miss",
      "Level": 6,
      "BriefDescription": "This metric estimates the fraction of cycles to walk the memory paging structures to cache translation of 2 or 4 MB pages for data load accesses.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "DTLB_LOAD_MISSES.WALK_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_COMPLETED_2M_4M",
          "Alias": "c"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_COMPLETED_4K",
          "Alias": "d"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_COMPLETED_1G",
          "Alias": "e"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a / ( b ) ) * c / ( d + c + e ) )",
      "BaseFormula": "tma_load_stlb_miss * dtlb_load_misses.walk_completed_2m_4m / ( dtlb_load_misses.walk_completed_4k + dtlb_load_misses.walk_completed_2m_4m + dtlb_load_misses.walk_completed_1g )",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..........Load_STLB_Miss_2M(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_........Load_STLB_Miss(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_......DTLB_Load(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_....L1_Bound(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "f",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 10 & d > 10 & e > 20 & f > 20",
        "BaseFormula": "metric_TMA_..........Load_STLB_Miss_2M(%) > 5 & metric_TMA_........Load_STLB_Miss(%) > 5 & metric_TMA_......DTLB_Load(%) > 10 & metric_TMA_....L1_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Load_STLB_Miss_1G",
      "LegacyName": "metric_TMA_..........Load_STLB_Miss_1G(%)",
      "ParentCategory": "Load_STLB_Miss",
      "Level": 6,
      "BriefDescription": "This metric estimates the fraction of cycles to walk the memory paging structures to cache translation of 1 GB pages for data load accesses.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "DTLB_LOAD_MISSES.WALK_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_COMPLETED_1G",
          "Alias": "c"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_COMPLETED_4K",
          "Alias": "d"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_COMPLETED_2M_4M",
          "Alias": "e"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a / ( b ) ) * c / ( d + e + c ) )",
      "BaseFormula": "tma_load_stlb_miss * dtlb_load_misses.walk_completed_1g / ( dtlb_load_misses.walk_completed_4k + dtlb_load_misses.walk_completed_2m_4m + dtlb_load_misses.walk_completed_1g )",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..........Load_STLB_Miss_1G(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_........Load_STLB_Miss(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_......DTLB_Load(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_....L1_Bound(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "f",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 10 & d > 10 & e > 20 & f > 20",
        "BaseFormula": "metric_TMA_..........Load_STLB_Miss_1G(%) > 5 & metric_TMA_........Load_STLB_Miss(%) > 5 & metric_TMA_......DTLB_Load(%) > 10 & metric_TMA_....L1_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Store_Fwd_Blk",
      "LegacyName": "metric_TMA_......Store_Fwd_Blk(%)",
      "ParentCategory": "L1_Bound",
      "Level": 4,
      "BriefDescription": "This metric roughly estimates fraction of cycles when the memory subsystem had loads blocked since they could not forward data from earlier (in program order) overlapping stores. To streamline memory operations in the pipeline; a load can avoid waiting for memory if a prior in-flight store is writing the data that the load wants to read (store forwarding process). However; in some cases the load may be blocked for a significant time pending the store forward. For example; when the prior store is writing a smaller region than the load is reading.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "LD_BLOCKS.STORE_FORWARD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( 13 * a / ( b ) )",
      "BaseFormula": "13 * ld_blocks.store_forward / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Store_Fwd_Blk(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....L1_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 10 & b > 10 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......Store_Fwd_Blk(%) > 10 & metric_TMA_....L1_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": ""
    },
    {
      "MetricName": "L1_Latency_Dependency",
      "LegacyName": "metric_TMA_......L1_Latency_Dependency(%)",
      "ParentCategory": "L1_Bound",
      "Level": 4,
      "BriefDescription": "This metric ([SKL+] roughly; [LNL]) estimates fraction of cycles with demand load accesses that hit the L1D cache. The short latency of the L1D cache may be exposed in pointer-chasing memory access patterns as an example.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "MEM_INST_RETIRED.ALL_LOADS",
          "Alias": "a"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "b"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "c"
        },
        {
          "Name": "CYCLE_ACTIVITY.CYCLES_MEM_ANY",
          "Alias": "e"
        },
        {
          "Name": "CYCLE_ACTIVITY.CYCLES_L1D_MISS",
          "Alias": "f"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "g"
        }
      ],
      "Constants": [
        {
          "Name": "20",
          "Alias": "dependentloadsweight"
        }
      ],
      "Formula": "100 * ( min( 2 * ( a - b - c ) * dependentloadsweight / 100 , max( e - f , 0 ) ) / ( g ) )",
      "BaseFormula": "min( 2 * ( mem_inst_retired.all_loads - mem_load_retired.fb_hit - mem_load_retired.l1_miss ) * 20 / 100 , max( cycle_activity.cycles_mem_any - cycle_activity.cycles_l1d_miss , 0 ) ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......L1_Latency_Dependency(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....L1_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 10 & b > 10 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......L1_Latency_Dependency(%) > 10 & metric_TMA_....L1_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvML;MemoryLat",
      "LocateWith": "MEM_LOAD_RETIRED.L1_HIT"
    },
    {
      "MetricName": "Lock_Latency",
      "LegacyName": "metric_TMA_......Lock_Latency(%)",
      "ParentCategory": "L1_Bound",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of cycles the CPU spent handling cache misses due to lock operations. Due to the microarchitecture handling of locks; they are classified as L1_Bound regardless of what memory source satisfied them.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "MEM_INST_RETIRED.LOCK_LOADS",
          "Alias": "a"
        },
        {
          "Name": "L2_RQSTS.ALL_RFO",
          "Alias": "b"
        },
        {
          "Name": "MEM_INST_RETIRED.ALL_STORES",
          "Alias": "c"
        },
        {
          "Name": "L2_RQSTS.RFO_HIT",
          "Alias": "d"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "e"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO",
          "Alias": "f"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( 16 * max( 0 , a - b ) + ( a / c ) * ( ( 10 ) * d + ( min( e , f ) ) ) ) / ( e ) )",
      "BaseFormula": "( 16 * max( 0 , mem_inst_retired.lock_loads - l2_rqsts.all_rfo ) + ( mem_inst_retired.lock_loads / mem_inst_retired.all_stores ) * ( ( 10 ) * l2_rqsts.rfo_hit + ( min( cpu_clk_unhalted.thread , offcore_requests_outstanding.cycles_with_demand_rfo ) ) ) ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Lock_Latency(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....L1_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 20 & b > 10 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......Lock_Latency(%) > 20 & metric_TMA_....L1_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueRFO"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "LockCont;Offcore",
      "LocateWith": "MEM_INST_RETIRED.LOCK_LOADS"
    },
    {
      "MetricName": "Split_Loads",
      "LegacyName": "metric_TMA_......Split_Loads(%)",
      "ParentCategory": "L1_Bound",
      "Level": 4,
      "BriefDescription": "This metric estimates fraction of cycles handling memory load split accesses - load that cross 64-byte cache line boundary.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "L1D_PEND_MISS.PENDING",
          "Alias": "a"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "b"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "c"
        },
        {
          "Name": "LD_BLOCKS.NO_SR",
          "Alias": "d"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "e"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a / ( b + c ) ) * d / ( e ) )",
      "BaseFormula": "tma_info_memory_load_miss_real_latency * ld_blocks.no_sr / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Calculated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Split_Loads(%)"
          }
        ],
        "Formula": "a > 30",
        "BaseFormula": "metric_TMA_......Split_Loads(%) > 30",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": "MEM_INST_RETIRED.SPLIT_LOADS"
    },
    {
      "MetricName": "4K_Aliasing",
      "LegacyName": "metric_TMA_......4K_Aliasing(%)",
      "ParentCategory": "L1_Bound",
      "Level": 4,
      "BriefDescription": "This metric estimates how often memory load accesses were aliased by preceding stores (in program order) with a 4K address offset. False match is possible; which incur a few cycles load re-issue. However; the short re-issue duration is often hidden by the out-of-order core and HW optimizations; hence a user may safely ignore a high value of this metric unless it manages to propagate up into parent nodes of the hierarchy (e.g. to L1_Bound).",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "LD_BLOCKS_PARTIAL.ADDRESS_ALIAS",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "ld_blocks_partial.address_alias / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......4K_Aliasing(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....L1_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 20 & b > 10 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......4K_Aliasing(%) > 20 & metric_TMA_....L1_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": ""
    },
    {
      "MetricName": "FB_Full",
      "LegacyName": "metric_TMA_......FB_Full(%)",
      "ParentCategory": "L1_Bound",
      "Level": 4,
      "BriefDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed. The higher the metric value; the deeper the memory hierarchy level the misses are satisfied from (metric values >1 are valid). Often it hints on approaching bandwidth limits (to L2 cache; L3 cache or external memory).",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "L1D_PEND_MISS.FB_FULL",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "l1d_pend_miss.fb_full / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Calculated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......FB_Full(%)"
          }
        ],
        "Formula": "a > 30",
        "BaseFormula": "metric_TMA_......FB_Full(%) > 30",
        "ThresholdIssues": "$issueBW, $issueSL, $issueSmSt"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvMB;MemoryBW",
      "LocateWith": ""
    },
    {
      "MetricName": "L2_Bound",
      "LegacyName": "metric_TMA_....L2_Bound(%)",
      "ParentCategory": "Memory_Bound",
      "Level": 3,
      "BriefDescription": "This metric estimates how often the CPU was stalled due to L2 cache accesses by loads.  Avoiding cache misses (i.e. L1 misses/L2 hits) can improve the latency and increase performance.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "MEM_LOAD_RETIRED.L2_HIT",
          "Alias": "a"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "b"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "c"
        },
        {
          "Name": "L1D_PEND_MISS.FB_FULL_PERIODS",
          "Alias": "d"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L1D_MISS",
          "Alias": "e"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L2_MISS",
          "Alias": "f"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "g"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( ( a * ( 1 + ( b / c ) ) ) / ( ( a * ( 1 + ( b / c ) ) ) + d ) ) * ( ( e - f ) / ( g ) ) )",
      "BaseFormula": "( ( mem_load_retired.l2_hit * ( 1 + ( mem_load_retired.fb_hit / mem_load_retired.l1_miss ) ) ) / ( ( mem_load_retired.l2_hit * ( 1 + ( mem_load_retired.fb_hit / mem_load_retired.l1_miss ) ) ) + l1d_pend_miss.fb_full_periods ) ) * ( ( cycle_activity.stalls_l1d_miss - cycle_activity.stalls_l2_miss ) / tma_info_thread_clks )",
      "Category": "TMA",
      "CountDomain": "Stalls",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....L2_Bound(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 20 & c > 20",
        "BaseFormula": "metric_TMA_....L2_Bound(%) > 5 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvML;CacheHits;MemoryBound;TmaL3mem",
      "LocateWith": "MEM_LOAD_RETIRED.L2_HIT"
    },
    {
      "MetricName": "L2_Hit_Latency",
      "LegacyName": "metric_TMA_......L2_Hit_Latency(%)",
      "ParentCategory": "L2_Bound",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of cycles with demand load accesses that hit the L2 cache under unloaded scenarios (possibly L2 latency limited).  Avoiding L1 cache misses (i.e. L1 misses/L2 hits) will improve the latency.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "b"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L2_HIT",
          "Alias": "e"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "f"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "g"
        }
      ],
      "Constants": [
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "c"
        },
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "100 * ( ( 4 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * e * ( 1 + ( f / g ) / 2 ) / ( a ) )",
      "BaseFormula": "( 4 * tma_info_system_core_frequency ) * mem_load_retired.l2_hit * ( 1 + ( mem_load_retired.fb_hit / mem_load_retired.l1_miss ) / 2 ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Retired",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......L2_Hit_Latency(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....L2_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......L2_Hit_Latency(%) > 5 & metric_TMA_....L2_Bound(%) > 5 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MemoryLat",
      "LocateWith": "MEM_LOAD_RETIRED.L2_HIT"
    },
    {
      "MetricName": "L3_Bound",
      "LegacyName": "metric_TMA_....L3_Bound(%)",
      "ParentCategory": "Memory_Bound",
      "Level": 3,
      "BriefDescription": "This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core.  Avoiding cache misses (i.e. L2 misses/L3 hits) can improve the latency and increase performance.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L2_MISS",
          "Alias": "a"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L3_MISS",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a - b ) / ( c ) )",
      "BaseFormula": "( cycle_activity.stalls_l2_miss - cycle_activity.stalls_l3_miss ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Stalls",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....L3_Bound(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 20 & c > 20",
        "BaseFormula": "metric_TMA_....L3_Bound(%) > 5 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "CacheHits;MemoryBound;TmaL3mem",
      "LocateWith": "MEM_LOAD_RETIRED.L3_HIT"
    },
    {
      "MetricName": "Contested_Accesses",
      "LegacyName": "metric_TMA_......Contested_Accesses(%)",
      "ParentCategory": "L3_Bound",
      "Level": 4,
      "BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses. Contested accesses occur when data written by one Logical Processor are read by another Logical Processor on a different Physical Core. Examples of contested accesses include synchronizations such as locks; true data sharing such as modified locked variables; and false sharing.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "b"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM",
          "Alias": "e"
        },
        {
          "Name": "OCR.DEMAND_DATA_RD.L3_HIT.SNOOP_HITM",
          "Alias": "f"
        },
        {
          "Name": "OCR.DEMAND_DATA_RD.L3_HIT.SNOOP_HIT_WITH_FWD",
          "Alias": "g"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS",
          "Alias": "h"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "i"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "j"
        }
      ],
      "Constants": [
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "c"
        },
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "100 * ( ( ( ( 48 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( e * ( f / ( f + g ) ) ) + ( ( 47.5 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( h ) ) * ( 1 + ( i / j ) / 2 ) / ( a ) )",
      "BaseFormula": "( ( ( 48 * tma_info_system_core_frequency ) - ( 4 * tma_info_system_core_frequency ) ) * ( mem_load_l3_hit_retired.xsnp_hitm * ( ocr.demand_data_rd.l3_hit.snoop_hitm / ( ocr.demand_data_rd.l3_hit.snoop_hitm + ocr.demand_data_rd.l3_hit.snoop_hit_with_fwd ) ) ) + ( ( 47.5 * tma_info_system_core_frequency ) - ( 4 * tma_info_system_core_frequency ) ) * ( mem_load_l3_hit_retired.xsnp_miss ) ) * ( 1 + ( mem_load_retired.fb_hit / mem_load_retired.l1_miss ) / 2 ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Contested_Accesses(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....L3_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......Contested_Accesses(%) > 5 & metric_TMA_....L3_Bound(%) > 5 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueSyncxn"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvMS;DataSharing;LockCont;Offcore;Snoop",
      "LocateWith": "MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM;MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS"
    },
    {
      "MetricName": "Data_Sharing",
      "LegacyName": "metric_TMA_......Data_Sharing(%)",
      "ParentCategory": "L3_Bound",
      "Level": 4,
      "BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to data-sharing accesses. Data shared by multiple Logical Processors (even just read shared) may cause increased access latency due to cache coherency. Excessive data sharing can drastically harm multithreaded performance.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "b"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT",
          "Alias": "e"
        },
        {
          "Name": "MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM",
          "Alias": "f"
        },
        {
          "Name": "OCR.DEMAND_DATA_RD.L3_HIT.SNOOP_HITM",
          "Alias": "g"
        },
        {
          "Name": "OCR.DEMAND_DATA_RD.L3_HIT.SNOOP_HIT_WITH_FWD",
          "Alias": "h"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "i"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "j"
        }
      ],
      "Constants": [
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "c"
        },
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "100 * ( ( ( 47.5 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( e + f * ( 1 - ( g / ( g + h ) ) ) ) * ( 1 + ( i / j ) / 2 ) / ( a ) )",
      "BaseFormula": "( ( 47.5 * tma_info_system_core_frequency ) - ( 4 * tma_info_system_core_frequency ) ) * ( mem_load_l3_hit_retired.xsnp_hit + mem_load_l3_hit_retired.xsnp_hitm * ( 1 - ( ocr.demand_data_rd.l3_hit.snoop_hitm / ( ocr.demand_data_rd.l3_hit.snoop_hitm + ocr.demand_data_rd.l3_hit.snoop_hit_with_fwd ) ) ) ) * ( 1 + ( mem_load_retired.fb_hit / mem_load_retired.l1_miss ) / 2 ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Data_Sharing(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....L3_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......Data_Sharing(%) > 5 & metric_TMA_....L3_Bound(%) > 5 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueSyncxn"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvMS;Offcore;Snoop",
      "LocateWith": "MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT"
    },
    {
      "MetricName": "L3_Hit_Latency",
      "LegacyName": "metric_TMA_......L3_Hit_Latency(%)",
      "ParentCategory": "L3_Bound",
      "Level": 4,
      "BriefDescription": "This metric estimates fraction of cycles with demand load accesses that hit the L3 cache under unloaded scenarios (possibly L3 latency limited).  Avoiding private cache misses (i.e. L2 misses/L3 hits) will improve the latency; reduce contention with sibling physical cores and increase performance.  Note the value of this node may overlap with its siblings.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "b"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L3_HIT",
          "Alias": "e"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "f"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "g"
        }
      ],
      "Constants": [
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "c"
        },
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "100 * ( ( ( 23 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 4 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * ( e * ( 1 + ( f / g ) / 2 ) ) / ( a ) )",
      "BaseFormula": "( ( 23 * tma_info_system_core_frequency ) - ( 4 * tma_info_system_core_frequency ) ) * ( mem_load_retired.l3_hit * ( 1 + ( mem_load_retired.fb_hit / mem_load_retired.l1_miss ) / 2 ) ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......L3_Hit_Latency(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....L3_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 10 & b > 5 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......L3_Hit_Latency(%) > 10 & metric_TMA_....L3_Bound(%) > 5 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueLat, ~overlap"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvML;MemoryLat",
      "LocateWith": "MEM_LOAD_RETIRED.L3_HIT"
    },
    {
      "MetricName": "SQ_Full",
      "LegacyName": "metric_TMA_......SQ_Full(%)",
      "ParentCategory": "L3_Bound",
      "Level": 4,
      "BriefDescription": "This metric measures fraction of cycles where the Super Queue (SQ) was full taking into account all request-types and both hardware SMT threads (Logical Processors).",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "L1D_PEND_MISS.L2_STALL",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "l1d_pend_miss.l2_stall / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......SQ_Full(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....L3_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 30 & b > 5 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......SQ_Full(%) > 30 & metric_TMA_....L3_Bound(%) > 5 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueBW"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvMB;MemoryBW;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "DRAM_Bound",
      "LegacyName": "metric_TMA_....DRAM_Bound(%)",
      "ParentCategory": "Memory_Bound",
      "Level": 3,
      "BriefDescription": "This metric estimates how often the CPU was stalled on accesses to external memory (DRAM) by loads. Better caching can improve the latency and increase performance.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L3_MISS",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L1D_MISS",
          "Alias": "c"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_L2_MISS",
          "Alias": "d"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L2_HIT",
          "Alias": "e"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "f"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "g"
        },
        {
          "Name": "L1D_PEND_MISS.FB_FULL_PERIODS",
          "Alias": "h"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a / ( b ) + ( ( c - d ) / ( b ) ) - ( ( ( e * ( 1 + ( f / g ) ) ) / ( ( e * ( 1 + ( f / g ) ) ) + h ) ) * ( ( c - d ) / ( b ) ) ) ) )",
      "BaseFormula": "( cycle_activity.stalls_l3_miss / tma_info_thread_clks + ( ( cycle_activity.stalls_l1d_miss - cycle_activity.stalls_l2_miss ) / tma_info_thread_clks ) - tma_l2_bound )",
      "Category": "TMA",
      "CountDomain": "Stalls",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....DRAM_Bound(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 10 & b > 20 & c > 20",
        "BaseFormula": "metric_TMA_....DRAM_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MemoryBound;TmaL3mem",
      "LocateWith": "MEM_LOAD_RETIRED.L3_MISS"
    },
    {
      "MetricName": "MEM_Bandwidth",
      "LegacyName": "metric_TMA_......MEM_Bandwidth(%)",
      "ParentCategory": "DRAM_Bound",
      "Level": 4,
      "BriefDescription": "This metric estimates fraction of cycles where the core's performance was likely hurt due to approaching bandwidth limits of external memory - DRAM ([SPR-HBM] and/or HBM).  The underlying heuristic assumes that a similar off-core traffic is generated by all IA cores. This metric does not aggregate non-data-read requests by this logical processor; requests from other IA Logical Processors/Physical Cores/sockets; or other non-IA devices like GPU; hence the maximum external memory bandwidth limits may or may not be approached when this metric is flagged (see Uncore counters for that).",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD:c4",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( min( a , b ) ) / ( a ) )",
      "BaseFormula": "( min( cpu_clk_unhalted.thread , offcore_requests_outstanding.all_data_rd:c4 ) ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......MEM_Bandwidth(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....DRAM_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 20 & b > 10 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......MEM_Bandwidth(%) > 20 & metric_TMA_....DRAM_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueBW"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvMB;MemoryBW;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "MEM_Latency",
      "LegacyName": "metric_TMA_......MEM_Latency(%)",
      "ParentCategory": "DRAM_Bound",
      "Level": 4,
      "BriefDescription": "This metric estimates fraction of cycles where the performance was likely hurt due to latency from external memory - DRAM ([SPR-HBM] and/or HBM).  This metric does not aggregate requests from other Logical Processors/Physical Cores/sockets (see Uncore counters for that).",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD",
          "Alias": "b"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD:c4",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( min( a , b ) ) / ( a ) - ( ( min( a , c ) ) / ( a ) ) )",
      "BaseFormula": "( min( cpu_clk_unhalted.thread , offcore_requests_outstanding.cycles_with_data_rd ) ) / tma_info_thread_clks - tma_mem_bandwidth",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......MEM_Latency(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....DRAM_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 10 & b > 10 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......MEM_Latency(%) > 10 & metric_TMA_....DRAM_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueLat"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvML;MemoryLat;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "Local_MEM",
      "LegacyName": "metric_TMA_........Local_MEM(%)",
      "ParentCategory": "MEM_Latency",
      "Level": 5,
      "BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling loads from local memory. Caching will improve the latency and increase performance.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "b"
        },
        {
          "Name": "MEM_LOAD_L3_MISS_RETIRED.LOCAL_DRAM",
          "Alias": "e"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "f"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "g"
        }
      ],
      "Constants": [
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "c"
        },
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "100 * ( ( ( 66.5 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * e * ( 1 + ( f / g ) / 2 ) / ( a ) )",
      "BaseFormula": "( ( 66.5 * tma_info_system_core_frequency ) - ( 23 * tma_info_system_core_frequency ) ) * mem_load_l3_miss_retired.local_dram * ( 1 + ( mem_load_retired.fb_hit / mem_load_retired.l1_miss ) / 2 ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........Local_MEM(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_......MEM_Latency(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_....DRAM_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 10 & b > 10 & c > 10 & d > 20 & e > 20",
        "BaseFormula": "metric_TMA_........Local_MEM(%) > 10 & metric_TMA_......MEM_Latency(%) > 10 & metric_TMA_....DRAM_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Server",
      "LocateWith": "MEM_LOAD_L3_MISS_RETIRED.LOCAL_DRAM"
    },
    {
      "MetricName": "Remote_MEM",
      "LegacyName": "metric_TMA_........Remote_MEM(%)",
      "ParentCategory": "MEM_Latency",
      "Level": 5,
      "BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling loads from remote memory. This is caused often due to non-optimal NUMA allocations.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "b"
        },
        {
          "Name": "MEM_LOAD_L3_MISS_RETIRED.REMOTE_DRAM",
          "Alias": "e"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "f"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "g"
        }
      ],
      "Constants": [
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "c"
        },
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "100 * ( ( ( 131 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * e * ( 1 + ( f / g ) / 2 ) / ( a ) )",
      "BaseFormula": "( ( 131 * tma_info_system_core_frequency ) - ( 23 * tma_info_system_core_frequency ) ) * mem_load_l3_miss_retired.remote_dram * ( 1 + ( mem_load_retired.fb_hit / mem_load_retired.l1_miss ) / 2 ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........Remote_MEM(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_......MEM_Latency(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_....DRAM_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 10 & b > 10 & c > 10 & d > 20 & e > 20",
        "BaseFormula": "metric_TMA_........Remote_MEM(%) > 10 & metric_TMA_......MEM_Latency(%) > 10 & metric_TMA_....DRAM_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Server;Snoop",
      "LocateWith": "MEM_LOAD_L3_MISS_RETIRED.REMOTE_DRAM"
    },
    {
      "MetricName": "Remote_Cache",
      "LegacyName": "metric_TMA_........Remote_Cache(%)",
      "ParentCategory": "MEM_Latency",
      "Level": 5,
      "BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling loads from remote cache in other sockets including synchronizations issues. This is caused often due to non-optimal NUMA allocations.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "b"
        },
        {
          "Name": "MEM_LOAD_L3_MISS_RETIRED.REMOTE_HITM",
          "Alias": "e"
        },
        {
          "Name": "MEM_LOAD_L3_MISS_RETIRED.REMOTE_FWD",
          "Alias": "f"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "g"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "h"
        }
      ],
      "Constants": [
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "c"
        },
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "100 * ( ( ( ( 120 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * e + ( ( 120 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) - ( 23 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) ) * f ) * ( 1 + ( g / h ) / 2 ) / ( a ) )",
      "BaseFormula": "( ( ( 120 * tma_info_system_core_frequency ) - ( 23 * tma_info_system_core_frequency ) ) * mem_load_l3_miss_retired.remote_hitm + ( ( 120 * tma_info_system_core_frequency ) - ( 23 * tma_info_system_core_frequency ) ) * mem_load_l3_miss_retired.remote_fwd ) * ( 1 + ( mem_load_retired.fb_hit / mem_load_retired.l1_miss ) / 2 ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........Remote_Cache(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_......MEM_Latency(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_....DRAM_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 10 & c > 10 & d > 20 & e > 20",
        "BaseFormula": "metric_TMA_........Remote_Cache(%) > 5 & metric_TMA_......MEM_Latency(%) > 10 & metric_TMA_....DRAM_Bound(%) > 10 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueSyncxn"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Offcore;Server;Snoop",
      "LocateWith": "MEM_LOAD_L3_MISS_RETIRED.REMOTE_HITM;MEM_LOAD_L3_MISS_RETIRED.REMOTE_FWD"
    },
    {
      "MetricName": "Store_Bound",
      "LegacyName": "metric_TMA_....Store_Bound(%)",
      "ParentCategory": "Memory_Bound",
      "Level": 3,
      "BriefDescription": "This metric estimates how often CPU was stalled  due to RFO store memory accesses; RFO store issue a read-for-ownership request before the write. Even though store accesses do not typically stall out-of-order CPUs; there are few cases where stores can lead to actual stalls. This metric will be flagged should RFO stores be a bottleneck.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "EXE_ACTIVITY.BOUND_ON_STORES",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "exe_activity.bound_on_stores / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Stalls",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....Store_Bound(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 20 & b > 20 & c > 20",
        "BaseFormula": "metric_TMA_....Store_Bound(%) > 20 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MemoryBound;TmaL3mem",
      "LocateWith": "MEM_INST_RETIRED.ALL_STORES"
    },
    {
      "MetricName": "Store_Latency",
      "LegacyName": "metric_TMA_......Store_Latency(%)",
      "ParentCategory": "Store_Bound",
      "Level": 4,
      "BriefDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses. Store accesses usually less impact out-of-order core performance; however; holding resources for longer time can lead into undesired implications (e.g. contention on L1D fill-buffer entries - see FB_Full)",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "L2_RQSTS.RFO_HIT",
          "Alias": "a"
        },
        {
          "Name": "MEM_INST_RETIRED.LOCK_LOADS",
          "Alias": "b"
        },
        {
          "Name": "MEM_INST_RETIRED.ALL_STORES",
          "Alias": "c"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "d"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO",
          "Alias": "e"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( ( a * ( 10 ) * ( 1 - ( b / c ) ) ) + ( 1 - ( b / c ) ) * ( min( d , e ) ) ) / ( d ) )",
      "BaseFormula": "( ( l2_rqsts.rfo_hit * ( 10 ) * ( 1 - ( mem_inst_retired.lock_loads / mem_inst_retired.all_stores ) ) ) + ( 1 - ( mem_inst_retired.lock_loads / mem_inst_retired.all_stores ) ) * ( min( cpu_clk_unhalted.thread , offcore_requests_outstanding.cycles_with_demand_rfo ) ) ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Store_Latency(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Store_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 10 & b > 20 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......Store_Latency(%) > 10 & metric_TMA_....Store_Bound(%) > 20 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueRFO, $issueSL, ~overlap"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvML;LockCont;MemoryLat;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "False_Sharing",
      "LegacyName": "metric_TMA_......False_Sharing(%)",
      "ParentCategory": "Store_Bound",
      "Level": 4,
      "BriefDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing. False Sharing is a multithreading hiccup; where multiple Logical Processors contend on different data-elements mapped into the same cache line.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "b"
        },
        {
          "Name": "OCR.DEMAND_RFO.L3_MISS:ocr_msr_val=0x103b800002",
          "Alias": "e"
        },
        {
          "Name": "OCR.DEMAND_RFO.L3_HIT.SNOOP_HITM",
          "Alias": "f"
        }
      ],
      "Constants": [
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "c"
        },
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "100 * ( ( ( 120 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * e + ( 48 * ( ( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) ) ) * f ) / ( a ) )",
      "BaseFormula": "( ( 120 * tma_info_system_core_frequency ) * ocr.demand_rfo.l3_miss:ocr_msr_val=0x103b800002 + ( 48 * tma_info_system_core_frequency ) * ocr.demand_rfo.l3_hit.snoop_hitm ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......False_Sharing(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Store_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 20 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......False_Sharing(%) > 5 & metric_TMA_....Store_Bound(%) > 20 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueSyncxn"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvMS;DataSharing;LockCont;Offcore;Snoop",
      "LocateWith": "OCR.DEMAND_RFO.L3_HIT.SNOOP_HITM"
    },
    {
      "MetricName": "Split_Stores",
      "LegacyName": "metric_TMA_......Split_Stores(%)",
      "ParentCategory": "Store_Bound",
      "Level": 4,
      "BriefDescription": "This metric represents rate of split store accesses.  Consider aligning your data to the 64-byte cache line granularity.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "MEM_INST_RETIRED.SPLIT_STORES",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( a / ( b if smt_on else ( c ) ) )",
      "BaseFormula": "mem_inst_retired.split_stores / tma_info_core_core_clks",
      "Category": "TMA",
      "CountDomain": "Core_Utilization",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Split_Stores(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Store_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 20 & b > 20 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......Split_Stores(%) > 20 & metric_TMA_....Store_Bound(%) > 20 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueSpSt"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": "MEM_INST_RETIRED.SPLIT_STORES"
    },
    {
      "MetricName": "Streaming_Stores",
      "LegacyName": "metric_TMA_......Streaming_Stores(%)",
      "ParentCategory": "Store_Bound",
      "Level": 4,
      "BriefDescription": "This metric estimates how often CPU was stalled  due to Streaming store memory accesses; Streaming store optimize out a read request required by RFO stores. Even though store accesses do not typically stall out-of-order CPUs; there are few cases where stores can lead to actual stalls. This metric will be flagged should Streaming stores be a bottleneck.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "OCR.STREAMING_WR.ANY_RESPONSE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( 9 * a / ( b ) )",
      "BaseFormula": "9 * ocr.streaming_wr.any_response / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Streaming_Stores(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Store_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 20 & b > 20 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......Streaming_Stores(%) > 20 & metric_TMA_....Store_Bound(%) > 20 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueSmSt"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MemoryBW;Offcore",
      "LocateWith": "OCR.STREAMING_WR.ANY_RESPONSE"
    },
    {
      "MetricName": "DTLB_Store",
      "LegacyName": "metric_TMA_......DTLB_Store(%)",
      "ParentCategory": "Store_Bound",
      "Level": 4,
      "BriefDescription": "This metric roughly estimates the fraction of cycles spent handling first-level data TLB store misses.  As with ordinary data caching; focus on improving data locality and reducing working-set size to reduce DTLB overhead.  Additionally; consider using profile-guided optimization (PGO) to collocate frequently-used data on the same page.  Try using larger page sizes for large amounts of frequently-used data.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "DTLB_STORE_MISSES.STLB_HIT:c1",
          "Alias": "a"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_ACTIVE",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "c"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "d"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( ( 7 ) * a + b ) / ( c if smt_on else ( d ) ) )",
      "BaseFormula": "( ( 7 ) * dtlb_store_misses.stlb_hit:c1 + dtlb_store_misses.walk_active ) / tma_info_core_core_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......DTLB_Store(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Store_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 20 & c > 20 & d > 20",
        "BaseFormula": "metric_TMA_......DTLB_Store(%) > 5 & metric_TMA_....Store_Bound(%) > 20 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueTLB"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvMT;MemoryTLB",
      "LocateWith": "MEM_INST_RETIRED.STLB_MISS_STORES"
    },
    {
      "MetricName": "Store_STLB_Hit",
      "LegacyName": "metric_TMA_........Store_STLB_Hit(%)",
      "ParentCategory": "DTLB_Store",
      "Level": 5,
      "BriefDescription": "This metric roughly estimates the fraction of cycles where the TLB was missed by store accesses, hitting in the second-level TLB (STLB)",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "DTLB_STORE_MISSES.STLB_HIT:c1",
          "Alias": "a"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_ACTIVE",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "c"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "d"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( ( ( 7 ) * a + b ) / ( c if smt_on else ( d ) ) ) - ( b / ( c if smt_on else ( d ) ) ) )",
      "BaseFormula": "tma_dtlb_store - tma_store_stlb_miss",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........Store_STLB_Hit(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_......DTLB_Store(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_....Store_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 20 & d > 20 & e > 20",
        "BaseFormula": "metric_TMA_........Store_STLB_Hit(%) > 5 & metric_TMA_......DTLB_Store(%) > 5 & metric_TMA_....Store_Bound(%) > 20 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Store_STLB_Miss",
      "LegacyName": "metric_TMA_........Store_STLB_Miss(%)",
      "ParentCategory": "DTLB_Store",
      "Level": 5,
      "BriefDescription": "This metric estimates the fraction of cycles where the STLB was missed by store accesses, performing a hardware page walk",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "DTLB_STORE_MISSES.WALK_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( a / ( b if smt_on else ( c ) ) )",
      "BaseFormula": "dtlb_store_misses.walk_active / tma_info_core_core_clks",
      "Category": "TMA",
      "CountDomain": "Clocks_Calculated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........Store_STLB_Miss(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_......DTLB_Store(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_....Store_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 20 & d > 20 & e > 20",
        "BaseFormula": "metric_TMA_........Store_STLB_Miss(%) > 5 & metric_TMA_......DTLB_Store(%) > 5 & metric_TMA_....Store_Bound(%) > 20 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Store_STLB_Miss_4K",
      "LegacyName": "metric_TMA_..........Store_STLB_Miss_4K(%)",
      "ParentCategory": "Store_STLB_Miss",
      "Level": 6,
      "BriefDescription": "This metric estimates the fraction of cycles to walk the memory paging structures to cache translation of 4 KB pages for data store accesses.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "DTLB_STORE_MISSES.WALK_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_COMPLETED_4K",
          "Alias": "d"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_COMPLETED_2M_4M",
          "Alias": "e"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_COMPLETED_1G",
          "Alias": "f"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( a / ( b if smt_on else ( c ) ) ) * d / ( d + e + f ) )",
      "BaseFormula": "tma_store_stlb_miss * dtlb_store_misses.walk_completed_4k / ( dtlb_store_misses.walk_completed_4k + dtlb_store_misses.walk_completed_2m_4m + dtlb_store_misses.walk_completed_1g )",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..........Store_STLB_Miss_4K(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_........Store_STLB_Miss(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_......DTLB_Store(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_....Store_Bound(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "f",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 5 & d > 20 & e > 20 & f > 20",
        "BaseFormula": "metric_TMA_..........Store_STLB_Miss_4K(%) > 5 & metric_TMA_........Store_STLB_Miss(%) > 5 & metric_TMA_......DTLB_Store(%) > 5 & metric_TMA_....Store_Bound(%) > 20 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Store_STLB_Miss_2M",
      "LegacyName": "metric_TMA_..........Store_STLB_Miss_2M(%)",
      "ParentCategory": "Store_STLB_Miss",
      "Level": 6,
      "BriefDescription": "This metric estimates the fraction of cycles to walk the memory paging structures to cache translation of 2 or 4 MB pages for data store accesses.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "DTLB_STORE_MISSES.WALK_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_COMPLETED_2M_4M",
          "Alias": "d"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_COMPLETED_4K",
          "Alias": "e"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_COMPLETED_1G",
          "Alias": "f"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( a / ( b if smt_on else ( c ) ) ) * d / ( e + d + f ) )",
      "BaseFormula": "tma_store_stlb_miss * dtlb_store_misses.walk_completed_2m_4m / ( dtlb_store_misses.walk_completed_4k + dtlb_store_misses.walk_completed_2m_4m + dtlb_store_misses.walk_completed_1g )",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..........Store_STLB_Miss_2M(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_........Store_STLB_Miss(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_......DTLB_Store(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_....Store_Bound(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "f",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 5 & d > 20 & e > 20 & f > 20",
        "BaseFormula": "metric_TMA_..........Store_STLB_Miss_2M(%) > 5 & metric_TMA_........Store_STLB_Miss(%) > 5 & metric_TMA_......DTLB_Store(%) > 5 & metric_TMA_....Store_Bound(%) > 20 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Store_STLB_Miss_1G",
      "LegacyName": "metric_TMA_..........Store_STLB_Miss_1G(%)",
      "ParentCategory": "Store_STLB_Miss",
      "Level": 6,
      "BriefDescription": "This metric estimates the fraction of cycles to walk the memory paging structures to cache translation of 1 GB pages for data store accesses.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "DTLB_STORE_MISSES.WALK_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_COMPLETED_1G",
          "Alias": "d"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_COMPLETED_4K",
          "Alias": "e"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_COMPLETED_2M_4M",
          "Alias": "f"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( a / ( b if smt_on else ( c ) ) ) * d / ( e + f + d ) )",
      "BaseFormula": "tma_store_stlb_miss * dtlb_store_misses.walk_completed_1g / ( dtlb_store_misses.walk_completed_4k + dtlb_store_misses.walk_completed_2m_4m + dtlb_store_misses.walk_completed_1g )",
      "Category": "TMA",
      "CountDomain": "Clocks_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..........Store_STLB_Miss_1G(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_........Store_STLB_Miss(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_......DTLB_Store(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_....Store_Bound(%)"
          },
          {
            "Alias": "e",
            "Value": "metric_TMA_..Memory_Bound(%)"
          },
          {
            "Alias": "f",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 5 & c > 5 & d > 20 & e > 20 & f > 20",
        "BaseFormula": "metric_TMA_..........Store_STLB_Miss_1G(%) > 5 & metric_TMA_........Store_STLB_Miss(%) > 5 & metric_TMA_......DTLB_Store(%) > 5 & metric_TMA_....Store_Bound(%) > 20 & metric_TMA_..Memory_Bound(%) > 20 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Core_Bound",
      "LegacyName": "metric_TMA_..Core_Bound(%)",
      "ParentCategory": "Backend_Bound",
      "Level": 2,
      "BriefDescription": "This metric represents fraction of slots where Core non-memory issues were of a bottleneck.  Shortage in hardware compute resources; or dependencies in software's instructions are both categorized under Core Bound. Hence it may indicate the machine ran out of an out-of-order resource; certain execution units are overloaded or dependencies in program's data- or instruction-flow are limiting the performance (e.g. FP-chained long-latency arithmetic operations).",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "d"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "e"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "f"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_MEM_ANY",
          "Alias": "g"
        },
        {
          "Name": "EXE_ACTIVITY.BOUND_ON_STORES",
          "Alias": "h"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_TOTAL",
          "Alias": "i"
        },
        {
          "Name": "EXE_ACTIVITY.1_PORTS_UTIL",
          "Alias": "j"
        },
        {
          "Name": "EXE_ACTIVITY.2_PORTS_UTIL",
          "Alias": "k"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( max( 0 , ( a / ( b + c + d + a ) + ( ( 5 ) * e ) / ( f ) ) - ( ( ( g + h ) / ( i + ( j + ( d / ( b + c + d + a ) ) * k ) + h ) ) * ( a / ( b + c + d + a ) + ( ( 5 ) * e ) / ( f ) ) ) ) )",
      "BaseFormula": "max( 0 , tma_backend_bound - tma_memory_bound )",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..Core_Bound(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 10 & b > 20",
        "BaseFormula": "metric_TMA_..Core_Bound(%) > 10 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Backend;TmaL2;Compute",
      "LocateWith": ""
    },
    {
      "MetricName": "Divider",
      "LegacyName": "metric_TMA_....Divider(%)",
      "ParentCategory": "Core_Bound",
      "Level": 3,
      "BriefDescription": "This metric represents fraction of cycles where the Divider unit was active. Divide and square root instructions are performed by the Divider unit and can take considerably longer latency than integer or Floating Point addition; subtraction; or multiplication.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "ARITH.DIVIDER_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "arith.divider_active / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....Divider(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Core_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 20 & b > 10 & c > 20",
        "BaseFormula": "metric_TMA_....Divider(%) > 20 & metric_TMA_..Core_Bound(%) > 10 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvCB",
      "LocateWith": "ARITH.DIVIDER_ACTIVE"
    },
    {
      "MetricName": "FP_Divider",
      "LegacyName": "metric_TMA_......FP_Divider(%)",
      "ParentCategory": "Divider",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of cycles where the Floating-Point Divider unit was active.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "ARITH.FP_DIVIDER_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "arith.fp_divider_active / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......FP_Divider(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Divider(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Core_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 20 & b > 20 & c > 10 & d > 20",
        "BaseFormula": "metric_TMA_......FP_Divider(%) > 20 & metric_TMA_....Divider(%) > 20 & metric_TMA_..Core_Bound(%) > 10 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": ""
    },
    {
      "MetricName": "INT_Divider",
      "LegacyName": "metric_TMA_......INT_Divider(%)",
      "ParentCategory": "Divider",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of cycles where the Integer Divider unit was active.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "ARITH.DIVIDER_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        },
        {
          "Name": "ARITH.FP_DIVIDER_ACTIVE",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a / ( b ) ) - ( c / ( b ) ) )",
      "BaseFormula": "tma_divider - tma_fp_divider",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......INT_Divider(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Divider(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Core_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 20 & b > 20 & c > 10 & d > 20",
        "BaseFormula": "metric_TMA_......INT_Divider(%) > 20 & metric_TMA_....Divider(%) > 20 & metric_TMA_..Core_Bound(%) > 10 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": ""
    },
    {
      "MetricName": "Serializing_Operation",
      "LegacyName": "metric_TMA_....Serializing_Operation(%)",
      "ParentCategory": "Core_Bound",
      "Level": 3,
      "BriefDescription": "This metric represents fraction of cycles the CPU issue-pipeline was stalled due to serializing operations. Instructions like CPUID; WRMSR or LFENCE serialize the out-of-order execution which may limit performance.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "RESOURCE_STALLS.SCOREBOARD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "resource_stalls.scoreboard / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....Serializing_Operation(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Core_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 10 & b > 10 & c > 20",
        "BaseFormula": "metric_TMA_....Serializing_Operation(%) > 10 & metric_TMA_..Core_Bound(%) > 10 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueSO"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvIO;PortsUtil",
      "LocateWith": "RESOURCE_STALLS.SCOREBOARD"
    },
    {
      "MetricName": "Slow_Pause",
      "LegacyName": "metric_TMA_......Slow_Pause(%)",
      "ParentCategory": "Serializing_Operation",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to PAUSE Instructions.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "MISC_RETIRED.PAUSE_INST",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( 37 * a / ( b ) )",
      "BaseFormula": "37 * misc_retired.pause_inst / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Slow_Pause(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Serializing_Operation(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Core_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 5 & b > 10 & c > 10 & d > 20",
        "BaseFormula": "metric_TMA_......Slow_Pause(%) > 5 & metric_TMA_....Serializing_Operation(%) > 10 & metric_TMA_..Core_Bound(%) > 10 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": "MISC_RETIRED.PAUSE_INST"
    },
    {
      "MetricName": "Ports_Utilization",
      "LegacyName": "metric_TMA_....Ports_Utilization(%)",
      "ParentCategory": "Core_Bound",
      "Level": 3,
      "BriefDescription": "This metric estimates fraction of cycles the CPU performance was potentially limited due to Core computation issues (non divider-related).  Two distinct categories can be attributed into this metric: (1) heavy data-dependency among contiguous instructions would manifest in this metric - such cases are often referred to as low Instruction Level Parallelism (ILP). (2) Contention on some hardware execution unit other than Divider. For example; when there are too many multiply operations.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "EXE_ACTIVITY.3_PORTS_UTIL:u0x80",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        },
        {
          "Name": "EXE_ACTIVITY.1_PORTS_UTIL",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "e"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "f"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "g"
        },
        {
          "Name": "EXE_ACTIVITY.2_PORTS_UTIL",
          "Alias": "h"
        },
        {
          "Name": "ARITH.DIVIDER_ACTIVE",
          "Alias": "i"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_TOTAL",
          "Alias": "j"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_MEM_ANY",
          "Alias": "k"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( ( a / ( b ) ) * ( b ) + ( c + ( d / ( e + f + d + g ) ) * h ) ) / ( b ) if ( i < ( j - k ) ) else ( c + ( d / ( e + f + d + g ) ) * h ) / ( b ) )",
      "BaseFormula": "( tma_ports_utilized_0 * tma_info_thread_clks + ( exe_activity.1_ports_util + tma_retiring * exe_activity.2_ports_util ) ) / tma_info_thread_clks if ( arith.divider_active < ( cycle_activity.stalls_total - cycle_activity.stalls_mem_any ) ) else ( exe_activity.1_ports_util + tma_retiring * exe_activity.2_ports_util ) / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....Ports_Utilization(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Core_Bound(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 15 & b > 10 & c > 20",
        "BaseFormula": "metric_TMA_....Ports_Utilization(%) > 15 & metric_TMA_..Core_Bound(%) > 10 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "PortsUtil",
      "LocateWith": ""
    },
    {
      "MetricName": "Ports_Utilized_0",
      "LegacyName": "metric_TMA_......Ports_Utilized_0(%)",
      "ParentCategory": "Ports_Utilization",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of cycles CPU executed no uops on any execution port (Logical Processor cycles since ICL, Physical Core cycles otherwise). Long-latency instructions like divides may contribute to this metric.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "EXE_ACTIVITY.3_PORTS_UTIL:u0x80",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "exe_activity.3_ports_util:u0x80 / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Ports_Utilized_0(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Ports_Utilization(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Core_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 20 & b > 15 & c > 10 & d > 20",
        "BaseFormula": "metric_TMA_......Ports_Utilized_0(%) > 20 & metric_TMA_....Ports_Utilization(%) > 15 & metric_TMA_..Core_Bound(%) > 10 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "PortsUtil",
      "LocateWith": ""
    },
    {
      "MetricName": "Mixing_Vectors",
      "LegacyName": "metric_TMA_........Mixing_Vectors(%)",
      "ParentCategory": "Ports_Utilized_0",
      "Level": 5,
      "BriefDescription": "This metric estimates penalty in terms of percentage of([SKL+] injected blend uops out of all Uops Issued , the Count Domain; [ADL+] cycles). Usually a Mixing_Vectors over 5% is worth investigating. Read more in Appendix B1 of the Optimizations Guide for this topic.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UOPS_ISSUED.VECTOR_WIDTH_MISMATCH",
          "Alias": "a"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / b )",
      "BaseFormula": "uops_issued.vector_width_mismatch / uops_issued.any",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........Mixing_Vectors(%)"
          }
        ],
        "Formula": "a > 5",
        "BaseFormula": "metric_TMA_........Mixing_Vectors(%) > 5",
        "ThresholdIssues": "$issueMV"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": ""
    },
    {
      "MetricName": "Ports_Utilized_1",
      "LegacyName": "metric_TMA_......Ports_Utilized_1(%)",
      "ParentCategory": "Ports_Utilization",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of cycles where the CPU executed total of 1 uop per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise). This can be due to heavy data-dependency among software instructions; or over oversubscribing a particular hardware resource. In some other cases with high 1_Port_Utilized and L1_Bound; this metric can point to L1 data-cache latency bottleneck that may not necessarily manifest with complete execution starvation (due to the short L1 latency e.g. walking a linked list) - looking at the assembly can be helpful.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "EXE_ACTIVITY.1_PORTS_UTIL",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "exe_activity.1_ports_util / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Ports_Utilized_1(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Ports_Utilization(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Core_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 20 & b > 15 & c > 10 & d > 20",
        "BaseFormula": "metric_TMA_......Ports_Utilized_1(%) > 20 & metric_TMA_....Ports_Utilization(%) > 15 & metric_TMA_..Core_Bound(%) > 10 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issueL1"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "PortsUtil",
      "LocateWith": "EXE_ACTIVITY.1_PORTS_UTIL"
    },
    {
      "MetricName": "Ports_Utilized_2",
      "LegacyName": "metric_TMA_......Ports_Utilized_2(%)",
      "ParentCategory": "Ports_Utilization",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of cycles CPU executed total of 2 uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise).  Loop Vectorization -most compilers feature auto-Vectorization options today- reduces pressure on the execution ports as multiple elements are calculated with same uop.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "EXE_ACTIVITY.2_PORTS_UTIL",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "exe_activity.2_ports_util / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Ports_Utilized_2(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Ports_Utilization(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Core_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 15 & b > 15 & c > 10 & d > 20",
        "BaseFormula": "metric_TMA_......Ports_Utilized_2(%) > 15 & metric_TMA_....Ports_Utilization(%) > 15 & metric_TMA_..Core_Bound(%) > 10 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": "$issue2P"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "PortsUtil",
      "LocateWith": "EXE_ACTIVITY.2_PORTS_UTIL"
    },
    {
      "MetricName": "Ports_Utilized_3m",
      "LegacyName": "metric_TMA_......Ports_Utilized_3m(%)",
      "ParentCategory": "Ports_Utilization",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of cycles CPU executed total of 3 or more uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise).",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UOPS_EXECUTED.CYCLES_GE_3",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b ) )",
      "BaseFormula": "uops_executed.cycles_ge_3 / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Ports_Utilized_3m(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Ports_Utilization(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Core_Bound(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_Backend_Bound(%)"
          }
        ],
        "Formula": "a > 40 & b > 15 & c > 10 & d > 20",
        "BaseFormula": "metric_TMA_......Ports_Utilized_3m(%) > 40 & metric_TMA_....Ports_Utilization(%) > 15 & metric_TMA_..Core_Bound(%) > 10 & metric_TMA_Backend_Bound(%) > 20",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvCB;PortsUtil",
      "LocateWith": "UOPS_EXECUTED.CYCLES_GE_3"
    },
    {
      "MetricName": "ALU_Op_Utilization",
      "LegacyName": "metric_TMA_........ALU_Op_Utilization(%)",
      "ParentCategory": "Ports_Utilized_3m",
      "Level": 5,
      "BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution ports for ALU operations.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UOPS_DISPATCHED.PORT_0",
          "Alias": "a"
        },
        {
          "Name": "UOPS_DISPATCHED.PORT_1",
          "Alias": "b"
        },
        {
          "Name": "UOPS_DISPATCHED.PORT_5",
          "Alias": "c"
        },
        {
          "Name": "UOPS_DISPATCHED.PORT_6",
          "Alias": "d"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "e"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "f"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( a + b + c + d ) / ( 4 * ( e if smt_on else ( f ) ) ) )",
      "BaseFormula": "( uops_dispatched.port_0 + uops_dispatched.port_1 + uops_dispatched.port_5 + uops_dispatched.port_6 ) / ( 4 * tma_info_core_core_clks )",
      "Category": "TMA",
      "CountDomain": "Core_Execution",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........ALU_Op_Utilization(%)"
          }
        ],
        "Formula": "a > 40",
        "BaseFormula": "metric_TMA_........ALU_Op_Utilization(%) > 40",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": ""
    },
    {
      "MetricName": "Port_0",
      "LegacyName": "metric_TMA_..........Port_0(%)",
      "ParentCategory": "ALU_Op_Utilization",
      "Level": 6,
      "BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch)",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UOPS_DISPATCHED.PORT_0",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( a / ( b if smt_on else ( c ) ) )",
      "BaseFormula": "uops_dispatched.port_0 / tma_info_core_core_clks",
      "Category": "TMA",
      "CountDomain": "Core_Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..........Port_0(%)"
          }
        ],
        "Formula": "a > 60",
        "BaseFormula": "metric_TMA_..........Port_0(%) > 60",
        "ThresholdIssues": "$issue2P"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Compute",
      "LocateWith": "UOPS_DISPATCHED.PORT_0"
    },
    {
      "MetricName": "Port_1",
      "LegacyName": "metric_TMA_..........Port_1(%)",
      "ParentCategory": "ALU_Op_Utilization",
      "Level": 6,
      "BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 1 (ALU)",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UOPS_DISPATCHED.PORT_1",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( a / ( b if smt_on else ( c ) ) )",
      "BaseFormula": "uops_dispatched.port_1 / tma_info_core_core_clks",
      "Category": "TMA",
      "CountDomain": "Core_Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..........Port_1(%)"
          }
        ],
        "Formula": "a > 60",
        "BaseFormula": "metric_TMA_..........Port_1(%) > 60",
        "ThresholdIssues": "$issue2P"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": "UOPS_DISPATCHED.PORT_1"
    },
    {
      "MetricName": "Port_5",
      "LegacyName": "metric_TMA_..........Port_5(%)",
      "ParentCategory": "ALU_Op_Utilization",
      "Level": 6,
      "BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 5 ([SNB+] Branches and ALU; [HSW+] ALU)",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UOPS_DISPATCHED.PORT_5",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( a / ( b if smt_on else ( c ) ) )",
      "BaseFormula": "uops_dispatched.port_5 / tma_info_core_core_clks",
      "Category": "TMA",
      "CountDomain": "Core_Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..........Port_5(%)"
          }
        ],
        "Formula": "a > 60",
        "BaseFormula": "metric_TMA_..........Port_5(%) > 60",
        "ThresholdIssues": "$issue2P"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": "UOPS_DISPATCHED.PORT_5"
    },
    {
      "MetricName": "Port_6",
      "LegacyName": "metric_TMA_..........Port_6(%)",
      "ParentCategory": "ALU_Op_Utilization",
      "Level": 6,
      "BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 6 ([HSW+] Primary Branch and simple ALU)",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UOPS_DISPATCHED.PORT_6",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( a / ( b if smt_on else ( c ) ) )",
      "BaseFormula": "uops_dispatched.port_6 / tma_info_core_core_clks",
      "Category": "TMA",
      "CountDomain": "Core_Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..........Port_6(%)"
          }
        ],
        "Formula": "a > 60",
        "BaseFormula": "metric_TMA_..........Port_6(%) > 60",
        "ThresholdIssues": "$issue2P"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": "UOPS_DISPATCHED.PORT_1"
    },
    {
      "MetricName": "Load_Op_Utilization",
      "LegacyName": "metric_TMA_........Load_Op_Utilization(%)",
      "ParentCategory": "Ports_Utilized_3m",
      "Level": 5,
      "BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port for Load operations",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UOPS_DISPATCHED.PORT_2_3",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( a / ( 2 * ( b if smt_on else ( c ) ) ) )",
      "BaseFormula": "uops_dispatched.port_2_3 / ( 2 * tma_info_core_core_clks )",
      "Category": "TMA",
      "CountDomain": "Core_Execution",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........Load_Op_Utilization(%)"
          }
        ],
        "Formula": "a > 60",
        "BaseFormula": "metric_TMA_........Load_Op_Utilization(%) > 60",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": "UOPS_DISPATCHED.PORT_2_3"
    },
    {
      "MetricName": "Store_Op_Utilization",
      "LegacyName": "metric_TMA_........Store_Op_Utilization(%)",
      "ParentCategory": "Ports_Utilized_3m",
      "Level": 5,
      "BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port for Store operations",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UOPS_DISPATCHED.PORT_4_9",
          "Alias": "a"
        },
        {
          "Name": "UOPS_DISPATCHED.PORT_7_8",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "c"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "d"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( a + b ) / ( 4 * ( c if smt_on else ( d ) ) ) )",
      "BaseFormula": "( uops_dispatched.port_4_9 + uops_dispatched.port_7_8 ) / ( 4 * tma_info_core_core_clks )",
      "Category": "TMA",
      "CountDomain": "Core_Execution",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........Store_Op_Utilization(%)"
          }
        ],
        "Formula": "a > 60",
        "BaseFormula": "metric_TMA_........Store_Op_Utilization(%) > 60",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": "UOPS_DISPATCHED.PORT_7_8"
    },
    {
      "MetricName": "Retiring",
      "LegacyName": "metric_TMA_Retiring(%)",
      "Level": 1,
      "BriefDescription": "This category represents fraction of slots utilized by useful work i.e. issued uops that eventually get retired. Ideally; all pipeline slots would be attributed to the Retiring category.  Retiring of 100% would indicate the maximum Pipeline_Width throughput was achieved.  Maximizing Retiring typically increases the Instructions-per-cycle (see IPC metric). Note that a high Retiring value does not necessary mean there is no room for more performance.  For example; Heavy-operations or Microcode Assists are categorized under Retiring. They often indicate suboptimal performance and can often be optimized or avoided.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( a / ( b + c + a + d ) )",
      "BaseFormula": "perf_metrics.retiring / ( perf_metrics.frontend_bound + perf_metrics.bad_speculation + perf_metrics.retiring + perf_metrics.backend_bound )",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Retiring(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Heavy_Operations(%)"
          }
        ],
        "Formula": "a > 70 | b > 10",
        "BaseFormula": "metric_TMA_Retiring(%) > 70 | metric_TMA_..Heavy_Operations(%) > 10",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvUW;TmaL1",
      "LocateWith": "UOPS_RETIRED.SLOTS"
    },
    {
      "MetricName": "Light_Operations",
      "LegacyName": "metric_TMA_..Light_Operations(%)",
      "ParentCategory": "Retiring",
      "Level": 2,
      "BriefDescription": "This metric represents fraction of slots where the CPU was retiring light-weight operations , instructions that require no more than one uop (micro-operation). This correlates with total number of instructions used by the program. A uops-per-instruction (see UopPI metric) ratio of 1 or less should be expected for decently optimized code running on Intel Core/Xeon products. While this often indicates efficient X86 instructions were executed; high value does not necessarily mean better performance cannot be achieved. ([ICL+] Note this may undercount due to approximation using indirect events; [ADL+] .)",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "e"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "f"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "g"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "h"
        },
        {
          "Name": "UOPS_DECODED.DEC0",
          "Alias": "i"
        },
        {
          "Name": "UOPS_DECODED.DEC0:c1",
          "Alias": "j"
        },
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "k"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( max( 0 , ( a / ( b + c + a + d ) ) - ( ( ( e / f ) * g / ( h ) ) + ( a / ( b + c + a + d ) ) * ( i - j ) / k ) ) )",
      "BaseFormula": "max( 0 , tma_retiring - tma_heavy_operations )",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..Light_Operations(%)"
          }
        ],
        "Formula": "a > 60",
        "BaseFormula": "metric_TMA_..Light_Operations(%) > 60",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Retire;TmaL2",
      "LocateWith": "INST_RETIRED.PREC_DIST"
    },
    {
      "MetricName": "FP_Arith",
      "LegacyName": "metric_TMA_....FP_Arith(%)",
      "ParentCategory": "Light_Operations",
      "Level": 3,
      "BriefDescription": "This metric represents overall arithmetic floating-point (FP) operations fraction the CPU has executed (retired). Note this metric's value may exceed its parent due to use of \"Uops\" CountDomain and FMA double-counting.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "UOPS_EXECUTED.X87",
          "Alias": "e"
        },
        {
          "Name": "UOPS_EXECUTED.THREAD",
          "Alias": "f"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.SCALAR",
          "Alias": "g"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "h"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.VECTOR",
          "Alias": "i"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( ( a / ( b + c + a + d ) ) * e / f ) + ( ( g ) / ( ( a / ( b + c + a + d ) ) * ( h ) ) ) + ( ( i ) / ( ( a / ( b + c + a + d ) ) * ( h ) ) ) )",
      "BaseFormula": "tma_x87_use + tma_fp_scalar + tma_fp_vector",
      "Category": "TMA",
      "CountDomain": "Uops",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....FP_Arith(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Light_Operations(%)"
          }
        ],
        "Formula": "a > 20 & b > 60",
        "BaseFormula": "metric_TMA_....FP_Arith(%) > 20 & metric_TMA_..Light_Operations(%) > 60",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "HPC",
      "LocateWith": ""
    },
    {
      "MetricName": "X87_Use",
      "LegacyName": "metric_TMA_......X87_Use(%)",
      "ParentCategory": "FP_Arith",
      "Level": 4,
      "BriefDescription": "This metric serves as an approximation of legacy x87 usage. It accounts for instructions beyond X87 FP arithmetic operations; hence may be used as a thermometer to avoid X87 high usage and preferably upgrade to modern ISA. See Tip under Tuning Hint.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "UOPS_EXECUTED.X87",
          "Alias": "e"
        },
        {
          "Name": "UOPS_EXECUTED.THREAD",
          "Alias": "f"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a / ( b + c + a + d ) ) * e / f )",
      "BaseFormula": "tma_retiring * uops_executed.x87 / uops_executed.thread",
      "Category": "TMA",
      "CountDomain": "Uops",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......X87_Use(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....FP_Arith(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Light_Operations(%)"
          }
        ],
        "Formula": "a > 10 & b > 20 & c > 60",
        "BaseFormula": "metric_TMA_......X87_Use(%) > 10 & metric_TMA_....FP_Arith(%) > 20 & metric_TMA_..Light_Operations(%) > 60",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Compute",
      "LocateWith": ""
    },
    {
      "MetricName": "FP_Scalar",
      "LegacyName": "metric_TMA_......FP_Scalar(%)",
      "ParentCategory": "FP_Arith",
      "Level": 4,
      "BriefDescription": "This metric approximates arithmetic floating-point (FP) scalar uops fraction the CPU has retired. May overcount due to FMA double counting.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "FP_ARITH_INST_RETIRED.SCALAR",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "e"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "f"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a ) / ( ( b / ( c + d + b + e ) ) * ( f ) ) )",
      "BaseFormula": "( fp_arith_inst_retired.scalar ) / ( tma_retiring * tma_info_thread_slots )",
      "Category": "TMA",
      "CountDomain": "Uops",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......FP_Scalar(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....FP_Arith(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Light_Operations(%)"
          }
        ],
        "Formula": "a > 10 & b > 20 & c > 60",
        "BaseFormula": "metric_TMA_......FP_Scalar(%) > 10 & metric_TMA_....FP_Arith(%) > 20 & metric_TMA_..Light_Operations(%) > 60",
        "ThresholdIssues": "$issue2P"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Compute;Flops",
      "LocateWith": ""
    },
    {
      "MetricName": "FP_Vector",
      "LegacyName": "metric_TMA_......FP_Vector(%)",
      "ParentCategory": "FP_Arith",
      "Level": 4,
      "BriefDescription": "This metric approximates arithmetic floating-point (FP) vector uops fraction the CPU has retired aggregated across all vector widths. May overcount due to FMA double counting.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "FP_ARITH_INST_RETIRED.VECTOR",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "e"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "f"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a ) / ( ( b / ( c + d + b + e ) ) * ( f ) ) )",
      "BaseFormula": "( fp_arith_inst_retired.vector ) / ( tma_retiring * tma_info_thread_slots )",
      "Category": "TMA",
      "CountDomain": "Uops",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......FP_Vector(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....FP_Arith(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Light_Operations(%)"
          }
        ],
        "Formula": "a > 10 & b > 20 & c > 60",
        "BaseFormula": "metric_TMA_......FP_Vector(%) > 10 & metric_TMA_....FP_Arith(%) > 20 & metric_TMA_..Light_Operations(%) > 60",
        "ThresholdIssues": "$issue2P"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Compute;Flops",
      "LocateWith": ""
    },
    {
      "MetricName": "FP_Vector_128b",
      "LegacyName": "metric_TMA_........FP_Vector_128b(%)",
      "ParentCategory": "FP_Vector",
      "Level": 5,
      "BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 128-bit wide vectors. May overcount due to FMA double counting prior to LNL.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE",
          "Alias": "a"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "e"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "f"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "g"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a + b ) / ( ( c / ( d + e + c + f ) ) * ( g ) ) )",
      "BaseFormula": "( fp_arith_inst_retired.128b_packed_double + fp_arith_inst_retired.128b_packed_single ) / ( tma_retiring * tma_info_thread_slots )",
      "Category": "TMA",
      "CountDomain": "Uops",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........FP_Vector_128b(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_......FP_Vector(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_....FP_Arith(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_..Light_Operations(%)"
          }
        ],
        "Formula": "a > 10 & b > 10 & c > 20 & d > 60",
        "BaseFormula": "metric_TMA_........FP_Vector_128b(%) > 10 & metric_TMA_......FP_Vector(%) > 10 & metric_TMA_....FP_Arith(%) > 20 & metric_TMA_..Light_Operations(%) > 60",
        "ThresholdIssues": "$issue2P"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Compute;Flops",
      "LocateWith": ""
    },
    {
      "MetricName": "FP_Vector_256b",
      "LegacyName": "metric_TMA_........FP_Vector_256b(%)",
      "ParentCategory": "FP_Vector",
      "Level": 5,
      "BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 256-bit wide vectors. May overcount due to FMA double counting prior to LNL.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE",
          "Alias": "a"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "e"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "f"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "g"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a + b ) / ( ( c / ( d + e + c + f ) ) * ( g ) ) )",
      "BaseFormula": "( fp_arith_inst_retired.256b_packed_double + fp_arith_inst_retired.256b_packed_single ) / ( tma_retiring * tma_info_thread_slots )",
      "Category": "TMA",
      "CountDomain": "Uops",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........FP_Vector_256b(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_......FP_Vector(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_....FP_Arith(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_..Light_Operations(%)"
          }
        ],
        "Formula": "a > 10 & b > 10 & c > 20 & d > 60",
        "BaseFormula": "metric_TMA_........FP_Vector_256b(%) > 10 & metric_TMA_......FP_Vector(%) > 10 & metric_TMA_....FP_Arith(%) > 20 & metric_TMA_..Light_Operations(%) > 60",
        "ThresholdIssues": "$issue2P"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Compute;Flops",
      "LocateWith": ""
    },
    {
      "MetricName": "FP_Vector_512b",
      "LegacyName": "metric_TMA_........FP_Vector_512b(%)",
      "ParentCategory": "FP_Vector",
      "Level": 5,
      "BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 512-bit wide vectors. May overcount due to FMA double counting.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "FP_ARITH_INST_RETIRED.512B_PACKED_DOUBLE",
          "Alias": "a"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.512B_PACKED_SINGLE",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "e"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "f"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "g"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a + b ) / ( ( c / ( d + e + c + f ) ) * ( g ) ) )",
      "BaseFormula": "( fp_arith_inst_retired.512b_packed_double + fp_arith_inst_retired.512b_packed_single ) / ( tma_retiring * tma_info_thread_slots )",
      "Category": "TMA",
      "CountDomain": "Uops",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........FP_Vector_512b(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_......FP_Vector(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_....FP_Arith(%)"
          },
          {
            "Alias": "d",
            "Value": "metric_TMA_..Light_Operations(%)"
          }
        ],
        "Formula": "a > 10 & b > 10 & c > 20 & d > 60",
        "BaseFormula": "metric_TMA_........FP_Vector_512b(%) > 10 & metric_TMA_......FP_Vector(%) > 10 & metric_TMA_....FP_Arith(%) > 20 & metric_TMA_..Light_Operations(%) > 60",
        "ThresholdIssues": "$issue2P"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Compute;Flops",
      "LocateWith": ""
    },
    {
      "MetricName": "Memory_Operations",
      "LegacyName": "metric_TMA_....Memory_Operations(%)",
      "ParentCategory": "Light_Operations",
      "Level": 3,
      "BriefDescription": "This metric represents fraction of slots where the CPU was retiring memory operations , uops for memory load or store accesses.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "e"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "f"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "g"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "h"
        },
        {
          "Name": "UOPS_DECODED.DEC0",
          "Alias": "i"
        },
        {
          "Name": "UOPS_DECODED.DEC0:c1",
          "Alias": "j"
        },
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "k"
        },
        {
          "Name": "MEM_INST_RETIRED.ANY",
          "Alias": "l"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "m"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( max( 0 , ( a / ( b + c + a + d ) ) - ( ( ( e / f ) * g / ( h ) ) + ( a / ( b + c + a + d ) ) * ( i - j ) / k ) ) ) * l / m )",
      "BaseFormula": "tma_light_operations * mem_inst_retired.any / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....Memory_Operations(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Light_Operations(%)"
          }
        ],
        "Formula": "a > 10 & b > 60",
        "BaseFormula": "metric_TMA_....Memory_Operations(%) > 10 & metric_TMA_..Light_Operations(%) > 60",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Pipeline",
      "LocateWith": ""
    },
    {
      "MetricName": "Branch_Instructions",
      "LegacyName": "metric_TMA_....Branch_Instructions(%)",
      "ParentCategory": "Light_Operations",
      "Level": 3,
      "BriefDescription": "This metric represents fraction of slots where the CPU was retiring branch instructions.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "e"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "f"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "g"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "h"
        },
        {
          "Name": "UOPS_DECODED.DEC0",
          "Alias": "i"
        },
        {
          "Name": "UOPS_DECODED.DEC0:c1",
          "Alias": "j"
        },
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "k"
        },
        {
          "Name": "BR_INST_RETIRED.ALL_BRANCHES",
          "Alias": "l"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( max( 0 , ( a / ( b + c + a + d ) ) - ( ( ( e / f ) * g / ( h ) ) + ( a / ( b + c + a + d ) ) * ( i - j ) / k ) ) ) * l / ( ( a / ( b + c + a + d ) ) * ( h ) ) )",
      "BaseFormula": "tma_light_operations * br_inst_retired.all_branches / ( tma_retiring * tma_info_thread_slots )",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....Branch_Instructions(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Light_Operations(%)"
          }
        ],
        "Formula": "a > 10 & b > 60",
        "BaseFormula": "metric_TMA_....Branch_Instructions(%) > 10 & metric_TMA_..Light_Operations(%) > 60",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Branches;BvBO;Pipeline",
      "LocateWith": ""
    },
    {
      "MetricName": "Other_Light_Ops",
      "LegacyName": "metric_TMA_....Other_Light_Ops(%)",
      "ParentCategory": "Light_Operations",
      "Level": 3,
      "BriefDescription": "This metric represents the remaining light uops fraction the CPU has executed - remaining means not covered by other sibling nodes. May undercount due to FMA double counting",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "e"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "f"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "g"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "h"
        },
        {
          "Name": "UOPS_DECODED.DEC0",
          "Alias": "i"
        },
        {
          "Name": "UOPS_DECODED.DEC0:c1",
          "Alias": "j"
        },
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "k"
        },
        {
          "Name": "UOPS_EXECUTED.X87",
          "Alias": "l"
        },
        {
          "Name": "UOPS_EXECUTED.THREAD",
          "Alias": "m"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.SCALAR",
          "Alias": "n"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.VECTOR",
          "Alias": "o"
        },
        {
          "Name": "MEM_INST_RETIRED.ANY",
          "Alias": "p"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "q"
        },
        {
          "Name": "BR_INST_RETIRED.ALL_BRANCHES",
          "Alias": "r"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( max( 0 , ( max( 0 , ( a / ( b + c + a + d ) ) - ( ( ( e / f ) * g / ( h ) ) + ( a / ( b + c + a + d ) ) * ( i - j ) / k ) ) ) - ( ( ( ( a / ( b + c + a + d ) ) * l / m ) + ( ( n ) / ( ( a / ( b + c + a + d ) ) * ( h ) ) ) + ( ( o ) / ( ( a / ( b + c + a + d ) ) * ( h ) ) ) ) + ( ( max( 0 , ( a / ( b + c + a + d ) ) - ( ( ( e / f ) * g / ( h ) ) + ( a / ( b + c + a + d ) ) * ( i - j ) / k ) ) ) * p / q ) + ( ( max( 0 , ( a / ( b + c + a + d ) ) - ( ( ( e / f ) * g / ( h ) ) + ( a / ( b + c + a + d ) ) * ( i - j ) / k ) ) ) * r / ( ( a / ( b + c + a + d ) ) * ( h ) ) ) ) ) )",
      "BaseFormula": "max( 0 , tma_light_operations - ( tma_fp_arith + tma_memory_operations + tma_branch_instructions ) )",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....Other_Light_Ops(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Light_Operations(%)"
          }
        ],
        "Formula": "a > 30 & b > 60",
        "BaseFormula": "metric_TMA_....Other_Light_Ops(%) > 30 & metric_TMA_..Light_Operations(%) > 60",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Pipeline",
      "LocateWith": ""
    },
    {
      "MetricName": "Nop_Instructions",
      "LegacyName": "metric_TMA_......Nop_Instructions(%)",
      "ParentCategory": "Other_Light_Ops",
      "Level": 4,
      "BriefDescription": "This metric represents fraction of slots where the CPU was retiring NOP (no op) instructions. Compilers often use NOPs for certain address alignments - e.g. start address of a function or loop body.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "e"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "f"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "g"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "h"
        },
        {
          "Name": "UOPS_DECODED.DEC0",
          "Alias": "i"
        },
        {
          "Name": "UOPS_DECODED.DEC0:c1",
          "Alias": "j"
        },
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "k"
        },
        {
          "Name": "INST_RETIRED.NOP",
          "Alias": "l"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( max( 0 , ( a / ( b + c + a + d ) ) - ( ( ( e / f ) * g / ( h ) ) + ( a / ( b + c + a + d ) ) * ( i - j ) / k ) ) ) * l / ( ( a / ( b + c + a + d ) ) * ( h ) ) )",
      "BaseFormula": "tma_light_operations * inst_retired.nop / ( tma_retiring * tma_info_thread_slots )",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Nop_Instructions(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Other_Light_Ops(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Light_Operations(%)"
          }
        ],
        "Formula": "a > 10 & b > 30 & c > 60",
        "BaseFormula": "metric_TMA_......Nop_Instructions(%) > 10 & metric_TMA_....Other_Light_Ops(%) > 30 & metric_TMA_..Light_Operations(%) > 60",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvBO;Pipeline",
      "LocateWith": "INST_RETIRED.NOP"
    },
    {
      "MetricName": "Heavy_Operations",
      "LegacyName": "metric_TMA_..Heavy_Operations(%)",
      "ParentCategory": "Retiring",
      "Level": 2,
      "BriefDescription": "This metric represents fraction of slots where the CPU was retiring heavy-weight operations , instructions that require two or more uops or micro-coded sequences. This highly-correlates with the uop length of these instructions/sequences.([ICL+] Note this may overcount due to approximation using indirect events; [ADL+])",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "a"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "b"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "c"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "e"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "f"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "g"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "h"
        },
        {
          "Name": "UOPS_DECODED.DEC0",
          "Alias": "i"
        },
        {
          "Name": "UOPS_DECODED.DEC0:c1",
          "Alias": "j"
        },
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "k"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( ( a / b ) * c / ( d ) ) + ( e / ( f + g + e + h ) ) * ( i - j ) / k )",
      "BaseFormula": "tma_microcode_sequencer + tma_retiring * ( uops_decoded.dec0 - uops_decoded.dec0:c1 ) / idq.mite_uops",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_..Heavy_Operations(%)"
          }
        ],
        "Formula": "a > 10",
        "BaseFormula": "metric_TMA_..Heavy_Operations(%) > 10",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Retire;TmaL2",
      "LocateWith": "#NA"
    },
    {
      "MetricName": "Few_Uops_Instructions",
      "LegacyName": "metric_TMA_....Few_Uops_Instructions(%)",
      "ParentCategory": "Heavy_Operations",
      "Level": 3,
      "BriefDescription": "This metric represents fraction of slots where the CPU was retiring instructions that that are decoder into two or more uops. This highly-correlates with the number of uops in such instructions.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "a"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "b"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "c"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "d"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "e"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "f"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "g"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "h"
        },
        {
          "Name": "UOPS_DECODED.DEC0",
          "Alias": "i"
        },
        {
          "Name": "UOPS_DECODED.DEC0:c1",
          "Alias": "j"
        },
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "k"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( ( ( a / b ) * c / ( d ) ) + ( e / ( f + g + e + h ) ) * ( i - j ) / k ) - ( ( a / b ) * c / ( d ) ) )",
      "BaseFormula": "tma_heavy_operations - tma_microcode_sequencer",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....Few_Uops_Instructions(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Heavy_Operations(%)"
          }
        ],
        "Formula": "a > 5 & b > 10",
        "BaseFormula": "metric_TMA_....Few_Uops_Instructions(%) > 5 & metric_TMA_..Heavy_Operations(%) > 10",
        "ThresholdIssues": "$issueD0"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": ""
    },
    {
      "MetricName": "Microcode_Sequencer",
      "LegacyName": "metric_TMA_....Microcode_Sequencer(%)",
      "ParentCategory": "Heavy_Operations",
      "Level": 3,
      "BriefDescription": "This metric represents fraction of slots the CPU was retiring uops fetched by the Microcode Sequencer (MS) unit.  The MS is used for CISC instructions not supported by the default decoders (like repeat move strings; or CPUID); or by microcode assists used to address some operation modes (like in Floating Point assists). These cases can often be avoided.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "a"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "b"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "c"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( a / b ) * c / ( d ) )",
      "BaseFormula": "( uops_retired.slots / uops_issued.any ) * idq.ms_uops / tma_info_thread_slots",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_....Microcode_Sequencer(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_..Heavy_Operations(%)"
          }
        ],
        "Formula": "a > 5 & b > 10",
        "BaseFormula": "metric_TMA_....Microcode_Sequencer(%) > 5 & metric_TMA_..Heavy_Operations(%) > 10",
        "ThresholdIssues": "$issueMC, $issueMS"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MicroSeq",
      "LocateWith": "IDQ.MS_UOPS"
    },
    {
      "MetricName": "Assists",
      "LegacyName": "metric_TMA_......Assists(%)",
      "ParentCategory": "Microcode_Sequencer",
      "Level": 4,
      "BriefDescription": "This metric estimates fraction of slots the CPU retired uops delivered by the Microcode_Sequencer as a result of Assists. Assists are long sequences of uops that are required in certain corner-cases for operations that cannot be handled natively by the execution pipeline. For example; when working with very small floating point values (so-called Denormals); the FP units are not set up to perform these operations natively. Instead; a sequence of instructions to perform the computation on the Denormals is injected into the pipeline. Since these microcode sequences might be dozens of uops long; Assists can be extremely deleterious to performance and they can be avoided in many cases.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "ASSISTS.ANY",
          "Alias": "a"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( 34 ) * a / ( b ) )",
      "BaseFormula": "( 34 ) * assists.any / tma_info_thread_slots",
      "Category": "TMA",
      "CountDomain": "Slots_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......Assists(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Microcode_Sequencer(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Heavy_Operations(%)"
          }
        ],
        "Formula": "a > 10 & b > 5 & c > 10",
        "BaseFormula": "metric_TMA_......Assists(%) > 10 & metric_TMA_....Microcode_Sequencer(%) > 5 & metric_TMA_..Heavy_Operations(%) > 10",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BvIO",
      "LocateWith": "ASSISTS.ANY"
    },
    {
      "MetricName": "FP_Assists",
      "LegacyName": "metric_TMA_........FP_Assists(%)",
      "ParentCategory": "Assists",
      "Level": 5,
      "BriefDescription": "This metric roughly estimates fraction of slots the CPU retired uops as a result of handing Floating Point (FP) Assists. FP Assist may apply when working with very small floating point values (so-called Denormals).",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "ASSISTS.FP",
          "Alias": "a"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( 34 * a / ( b ) )",
      "BaseFormula": "34 * assists.fp / tma_info_thread_slots",
      "Category": "TMA",
      "CountDomain": "Slots_Estimated",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_........FP_Assists(%)"
          }
        ],
        "Formula": "a > 10",
        "BaseFormula": "metric_TMA_........FP_Assists(%) > 10",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "HPC",
      "LocateWith": ""
    },
    {
      "MetricName": "CISC",
      "LegacyName": "metric_TMA_......CISC(%)",
      "ParentCategory": "Microcode_Sequencer",
      "Level": 4,
      "BriefDescription": "This metric estimates fraction of cycles the CPU retired uops originated from CISC (complex instruction set computer) instruction. A CISC instruction has multiple uops that are required to perform the instruction's functionality as in the case of read-modify-write as an example. Since these instructions require multiple uops they may or may not imply sub-optimal use of machine resources.",
      "UnitOfMeasure": "percent",
      "Events": [
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "a"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "b"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "c"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "d"
        },
        {
          "Name": "ASSISTS.ANY",
          "Alias": "e"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( max( 0 , ( ( a / b ) * c / ( d ) ) - ( ( 34 ) * e / ( d ) ) ) )",
      "BaseFormula": "max( 0 , tma_microcode_sequencer - tma_assists )",
      "Category": "TMA",
      "CountDomain": "Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_......CISC(%)"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_....Microcode_Sequencer(%)"
          },
          {
            "Alias": "c",
            "Value": "metric_TMA_..Heavy_Operations(%)"
          }
        ],
        "Formula": "a > 10 & b > 5 & c > 10",
        "BaseFormula": "metric_TMA_......CISC(%) > 10 & metric_TMA_....Microcode_Sequencer(%) > 5 & metric_TMA_..Heavy_Operations(%) > 10",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "",
      "LocateWith": "#NA"
    },
    {
      "MetricName": "Info_Botlnk_L0_Core_Bound_Likely",
      "LegacyName": "metric_TMA_Info_Botlnk_L0_Core_Bound_Likely",
      "Level": 1,
      "BriefDescription": "Probability of Core Bound bottleneck hidden by SMT-profiling artifacts",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "d"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "e"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "f"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_MEM_ANY",
          "Alias": "g"
        },
        {
          "Name": "EXE_ACTIVITY.BOUND_ON_STORES",
          "Alias": "h"
        },
        {
          "Name": "CYCLE_ACTIVITY.STALLS_TOTAL",
          "Alias": "i"
        },
        {
          "Name": "EXE_ACTIVITY.1_PORTS_UTIL",
          "Alias": "j"
        },
        {
          "Name": "EXE_ACTIVITY.2_PORTS_UTIL",
          "Alias": "k"
        },
        {
          "Name": "EXE_ACTIVITY.3_PORTS_UTIL:u0x80",
          "Alias": "l"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "m"
        },
        {
          "Name": "ARITH.DIVIDER_ACTIVE",
          "Alias": "n"
        },
        {
          "Name": "CPU_CLK_UNHALTED.ONE_THREAD_ACTIVE",
          "Alias": "o"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_DISTRIBUTED",
          "Alias": "p"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( 1 - ( max( 0 , ( a / ( b + c + d + a ) + ( ( 5 ) * e ) / ( f ) ) - ( ( ( g + h ) / ( i + ( j + ( d / ( b + c + d + a ) ) * k ) + h ) ) * ( a / ( b + c + d + a ) + ( ( 5 ) * e ) / ( f ) ) ) ) ) / ( ( ( l / ( m ) ) * ( m ) + ( j + ( d / ( b + c + d + a ) ) * k ) ) / ( m ) if ( n < ( i - g ) ) else ( j + ( d / ( b + c + d + a ) ) * k ) / ( m ) ) if ( max( 0 , ( a / ( b + c + d + a ) + ( ( 5 ) * e ) / ( f ) ) - ( ( ( g + h ) / ( i + ( j + ( d / ( b + c + d + a ) ) * k ) + h ) ) * ( a / ( b + c + d + a ) + ( ( 5 ) * e ) / ( f ) ) ) ) ) < ( ( ( l / ( m ) ) * ( m ) + ( j + ( d / ( b + c + d + a ) ) * k ) ) / ( m ) if ( n < ( i - g ) ) else ( j + ( d / ( b + c + d + a ) ) * k ) / ( m ) ) else 1 ) if ( 1 - o / p if smt_on else 0 ) > 0.5 else 0",
      "BaseFormula": "100 * ( 1 - tma_core_bound / tma_ports_utilization if tma_core_bound < tma_ports_utilization else 1 ) if tma_info_system_smt_2t_utilization > 0.5 else 0",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Botlnk_L0_Core_Bound_Likely"
          }
        ],
        "Formula": "a > 0.5",
        "BaseFormula": "metric_TMA_Info_Botlnk_L0_Core_Bound_Likely > 0.5",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Cor;SMT",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Thread_IPC",
      "LegacyName": "metric_TMA_Info_Thread_IPC",
      "Level": 1,
      "BriefDescription": "Instructions Per Cycle (per Logical Processor)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / ( b )",
      "BaseFormula": "inst_retired.any / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD",
      "MetricGroup": "Ret;Summary",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Thread_UopPI",
      "LegacyName": "metric_TMA_Info_Thread_UopPI",
      "Level": 1,
      "BriefDescription": "Uops Per Instruction",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "e"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "f"
        }
      ],
      "Constants": [],
      "Formula": "( ( a / ( b + c + a + d ) ) * ( e ) ) / f",
      "BaseFormula": "( tma_retiring * tma_info_thread_slots ) / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Thread_UopPI"
          }
        ],
        "Formula": "a > 1.05",
        "BaseFormula": "metric_TMA_Info_Thread_UopPI > 1.05",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD",
      "MetricGroup": "Pipeline;Ret;Retire",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Thread_UpTB",
      "LegacyName": "metric_TMA_Info_Thread_UpTB",
      "Level": 1,
      "BriefDescription": "Uops per taken branch",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "e"
        },
        {
          "Name": "BR_INST_RETIRED.NEAR_TAKEN",
          "Alias": "f"
        }
      ],
      "Constants": [],
      "Formula": "( ( a / ( b + c + a + d ) ) * ( e ) ) / f",
      "BaseFormula": "( tma_retiring * tma_info_thread_slots ) / br_inst_retired.near_taken",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Thread_UpTB"
          }
        ],
        "Formula": "a < 5 * 1.5",
        "BaseFormula": "metric_TMA_Info_Thread_UpTB < 5 * 1.5",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD",
      "MetricGroup": "Branches;Fed;FetchBW",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Thread_CPI",
      "LegacyName": "metric_TMA_Info_Thread_CPI",
      "Level": 1,
      "BriefDescription": "Cycles Per Instruction (per Logical Processor)",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1 / ( a / ( b ) )",
      "BaseFormula": "1 / tma_info_thread_ipc",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD",
      "MetricGroup": "Pipeline;Mem",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Thread_CLKS",
      "LegacyName": "metric_TMA_Info_Thread_CLKS",
      "Level": 1,
      "BriefDescription": "Per-Logical Processor actual clocks when the Logical Processor is active.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "a",
      "BaseFormula": "cpu_clk_unhalted.thread",
      "Category": "TMA",
      "CountDomain": "Count",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD",
      "MetricGroup": "Pipeline",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Thread_SLOTS",
      "LegacyName": "metric_TMA_Info_Thread_SLOTS",
      "Level": 1,
      "BriefDescription": "Total issue-pipeline slots (per-Physical Core till ICL; per-Logical Processor ICL onward)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "a",
      "BaseFormula": "topdown.slots:perf_metrics",
      "Category": "TMA",
      "CountDomain": "Count",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD",
      "MetricGroup": "TmaL1",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Thread_Slots_Utilization",
      "LegacyName": "metric_TMA_Info_Thread_Slots_Utilization",
      "Level": 1,
      "BriefDescription": "Fraction of Physical Core issue-slots utilized by this Logical Processor",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "a"
        },
        {
          "Name": "TOPDOWN.SLOTS:percore",
          "Alias": "b"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "( a ) / ( b / 2 ) if smt_on else 1",
      "BaseFormula": "tma_info_thread_slots / ( topdown.slots:percore / 2 ) if smt_on else 1",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD",
      "MetricGroup": "SMT;TmaL1",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Thread_Execute_per_Issue",
      "LegacyName": "metric_TMA_Info_Thread_Execute_per_Issue",
      "Level": 1,
      "BriefDescription": "The ratio of Executed- by Issued-Uops. Ratio > 1 suggests high rate of uop micro-fusions. Ratio < 1 suggest high rate of \"execute\" at rename stage.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UOPS_EXECUTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "uops_executed.thread / uops_issued.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD",
      "MetricGroup": "Cor;Pipeline",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Core_CoreIPC",
      "LegacyName": "metric_TMA_Info_Core_CoreIPC",
      "Level": 1,
      "BriefDescription": "Instructions Per Cycle across hyper-threads (per physical core)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "a / ( b if smt_on else ( c ) )",
      "BaseFormula": "inst_retired.any / tma_info_core_core_clks",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE",
      "MetricGroup": "Ret;SMT;TmaL1",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Core_FLOPc",
      "LegacyName": "metric_TMA_Info_Core_FLOPc",
      "Level": 1,
      "BriefDescription": "Floating Point Operations Per Cycle",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "FP_ARITH_INST_RETIRED.SCALAR",
          "Alias": "a"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE",
          "Alias": "b"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.4_FLOPS",
          "Alias": "c"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.8_FLOPS",
          "Alias": "d"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.512B_PACKED_SINGLE",
          "Alias": "e"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "f"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "g"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "( a + 2 * b + 4 * c + 8 * d + 16 * e ) / ( f if smt_on else ( g ) )",
      "BaseFormula": "( fp_arith_inst_retired.scalar + 2 * fp_arith_inst_retired.128b_packed_double + 4 * fp_arith_inst_retired.4_flops + 8 * fp_arith_inst_retired.8_flops + 16 * fp_arith_inst_retired.512b_packed_single ) / tma_info_core_core_clks",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE",
      "MetricGroup": "Ret;Flops",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Core_FP_Arith_Utilization",
      "LegacyName": "metric_TMA_Info_Core_FP_Arith_Utilization",
      "Level": 1,
      "BriefDescription": "Actual per-core usage of the Floating Point non-X87 execution units (regardless of precision or vector-width). Values > 1 are possible due to ([BDW+] Fused-Multiply Add (FMA) counting - common; [ADL+] use all of ADD/MUL/FMA in Scalar or 128/256-bit vectors - less common).",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "FP_ARITH_INST_RETIRED.SCALAR",
          "Alias": "a"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.VECTOR",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "c"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "d"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "( ( a ) + ( b ) ) / ( 2 * ( c if smt_on else ( d ) ) )",
      "BaseFormula": "( ( fp_arith_inst_retired.scalar ) + ( fp_arith_inst_retired.vector ) ) / ( 2 * tma_info_core_core_clks )",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE",
      "MetricGroup": "Cor;Flops;HPC",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Core_ILP",
      "LegacyName": "metric_TMA_Info_Core_ILP",
      "Level": 1,
      "BriefDescription": "Instruction-Level-Parallelism (average number of uops executed when there is execution) per thread (logical-processor)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UOPS_EXECUTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "UOPS_EXECUTED.THREAD:c1",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "uops_executed.thread / uops_executed.thread:c1",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE",
      "MetricGroup": "Backend;Cor;Pipeline;PortsUtil",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Core_EPC",
      "LegacyName": "metric_TMA_Info_Core_EPC",
      "Level": 1,
      "BriefDescription": "uops Executed per Cycle",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UOPS_EXECUTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / ( b )",
      "BaseFormula": "uops_executed.thread / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE",
      "MetricGroup": "Power",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Core_CORE_CLKS",
      "LegacyName": "metric_TMA_Info_Core_CORE_CLKS",
      "Level": 1,
      "BriefDescription": "Core actual clocks when any Logical Processor is active on the Physical Core",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "a if smt_on else ( b )",
      "BaseFormula": "cpu_clk_unhalted.distributed if smt_on else tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Count",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE",
      "MetricGroup": "SMT",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_IpLoad",
      "LegacyName": "metric_TMA_Info_Inst_Mix_IpLoad",
      "Level": 1,
      "BriefDescription": "Instructions per Load (lower number means higher occurrence rate)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "MEM_INST_RETIRED.ALL_LOADS",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / mem_inst_retired.all_loads",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Inst_Mix_IpLoad"
          }
        ],
        "Formula": "a < 3",
        "BaseFormula": "metric_TMA_Info_Inst_Mix_IpLoad < 3",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "InsType",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_IpStore",
      "LegacyName": "metric_TMA_Info_Inst_Mix_IpStore",
      "Level": 1,
      "BriefDescription": "Instructions per Store (lower number means higher occurrence rate)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "MEM_INST_RETIRED.ALL_STORES",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / mem_inst_retired.all_stores",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Inst_Mix_IpStore"
          }
        ],
        "Formula": "a < 8",
        "BaseFormula": "metric_TMA_Info_Inst_Mix_IpStore < 8",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "InsType",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_IpBranch",
      "LegacyName": "metric_TMA_Info_Inst_Mix_IpBranch",
      "Level": 1,
      "BriefDescription": "Instructions per Branch (lower number means higher occurrence rate)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "BR_INST_RETIRED.ALL_BRANCHES",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / br_inst_retired.all_branches",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Inst_Mix_IpBranch"
          }
        ],
        "Formula": "a < 8",
        "BaseFormula": "metric_TMA_Info_Inst_Mix_IpBranch < 8",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Branches;Fed;InsType",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_IpCall",
      "LegacyName": "metric_TMA_Info_Inst_Mix_IpCall",
      "Level": 1,
      "BriefDescription": "Instructions per (near) call (lower number means higher occurrence rate)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "BR_INST_RETIRED.NEAR_CALL",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / br_inst_retired.near_call",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Inst_Mix_IpCall"
          }
        ],
        "Formula": "a < 200",
        "BaseFormula": "metric_TMA_Info_Inst_Mix_IpCall < 200",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Branches;Fed;PGO",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_IpTB",
      "LegacyName": "metric_TMA_Info_Inst_Mix_IpTB",
      "Level": 1,
      "BriefDescription": "Instructions per taken branch",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "BR_INST_RETIRED.NEAR_TAKEN",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / br_inst_retired.near_taken",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Inst_Mix_IpTB"
          }
        ],
        "Formula": "a < 5 * 2 + 1",
        "BaseFormula": "metric_TMA_Info_Inst_Mix_IpTB < 5 * 2 + 1",
        "ThresholdIssues": "$issueFB"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Branches;Fed;FetchBW;Frontend;PGO",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_BpTkBranch",
      "LegacyName": "metric_TMA_Info_Inst_Mix_BpTkBranch",
      "Level": 1,
      "BriefDescription": "Branch instructions per taken branch.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "BR_INST_RETIRED.ALL_BRANCHES",
          "Alias": "a"
        },
        {
          "Name": "BR_INST_RETIRED.NEAR_TAKEN",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "br_inst_retired.all_branches / br_inst_retired.near_taken",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Branches;Fed;PGO",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_IpFLOP",
      "LegacyName": "metric_TMA_Info_Inst_Mix_IpFLOP",
      "Level": 1,
      "BriefDescription": "Instructions per Floating Point (FP) Operation (lower number means higher occurrence rate)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.SCALAR",
          "Alias": "b"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE",
          "Alias": "c"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.4_FLOPS",
          "Alias": "d"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.8_FLOPS",
          "Alias": "e"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.512B_PACKED_SINGLE",
          "Alias": "f"
        }
      ],
      "Constants": [],
      "Formula": "a / ( b + 2 * c + 4 * d + 8 * e + 16 * f )",
      "BaseFormula": "inst_retired.any / ( fp_arith_inst_retired.scalar + 2 * fp_arith_inst_retired.128b_packed_double + 4 * fp_arith_inst_retired.4_flops + 8 * fp_arith_inst_retired.8_flops + 16 * fp_arith_inst_retired.512b_packed_single )",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Inst_Mix_IpFLOP"
          }
        ],
        "Formula": "a < 10",
        "BaseFormula": "metric_TMA_Info_Inst_Mix_IpFLOP < 10",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Flops;InsType",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_IpArith",
      "LegacyName": "metric_TMA_Info_Inst_Mix_IpArith",
      "Level": 1,
      "BriefDescription": "Instructions per FP Arithmetic instruction (lower number means higher occurrence rate). Values < 1 are possible due to intentional FMA double counting. Approximated prior to BDW.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.SCALAR",
          "Alias": "b"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.VECTOR",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "a / ( ( b ) + ( c ) )",
      "BaseFormula": "inst_retired.any / ( ( fp_arith_inst_retired.scalar ) + ( fp_arith_inst_retired.vector ) )",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Inst_Mix_IpArith"
          }
        ],
        "Formula": "a < 10",
        "BaseFormula": "metric_TMA_Info_Inst_Mix_IpArith < 10",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Flops;InsType",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_IpArith_Scalar_SP",
      "LegacyName": "metric_TMA_Info_Inst_Mix_IpArith_Scalar_SP",
      "Level": 1,
      "BriefDescription": "Instructions per FP Arithmetic Scalar Single-Precision instruction (lower number means higher occurrence rate). Values < 1 are possible due to intentional FMA double counting.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.SCALAR_SINGLE",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / fp_arith_inst_retired.scalar_single",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Inst_Mix_IpArith_Scalar_SP"
          }
        ],
        "Formula": "a < 10",
        "BaseFormula": "metric_TMA_Info_Inst_Mix_IpArith_Scalar_SP < 10",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Flops;FpScalar;InsType",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_IpArith_Scalar_DP",
      "LegacyName": "metric_TMA_Info_Inst_Mix_IpArith_Scalar_DP",
      "Level": 1,
      "BriefDescription": "Instructions per FP Arithmetic Scalar Double-Precision instruction (lower number means higher occurrence rate). Values < 1 are possible due to intentional FMA double counting.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.SCALAR_DOUBLE",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / fp_arith_inst_retired.scalar_double",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Inst_Mix_IpArith_Scalar_DP"
          }
        ],
        "Formula": "a < 10",
        "BaseFormula": "metric_TMA_Info_Inst_Mix_IpArith_Scalar_DP < 10",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Flops;FpScalar;InsType",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_IpArith_AVX128",
      "LegacyName": "metric_TMA_Info_Inst_Mix_IpArith_AVX128",
      "Level": 1,
      "BriefDescription": "Instructions per FP Arithmetic AVX/SSE 128-bit instruction (lower number means higher occurrence rate). Values < 1 are possible due to intentional FMA double counting.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE",
          "Alias": "b"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "a / ( b + c )",
      "BaseFormula": "inst_retired.any / ( fp_arith_inst_retired.128b_packed_double + fp_arith_inst_retired.128b_packed_single )",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Inst_Mix_IpArith_AVX128"
          }
        ],
        "Formula": "a < 10",
        "BaseFormula": "metric_TMA_Info_Inst_Mix_IpArith_AVX128 < 10",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Flops;FpVector;InsType",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_IpArith_AVX256",
      "LegacyName": "metric_TMA_Info_Inst_Mix_IpArith_AVX256",
      "Level": 1,
      "BriefDescription": "Instructions per FP Arithmetic AVX* 256-bit instruction (lower number means higher occurrence rate). Values < 1 are possible due to intentional FMA double counting.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE",
          "Alias": "b"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "a / ( b + c )",
      "BaseFormula": "inst_retired.any / ( fp_arith_inst_retired.256b_packed_double + fp_arith_inst_retired.256b_packed_single )",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Inst_Mix_IpArith_AVX256"
          }
        ],
        "Formula": "a < 10",
        "BaseFormula": "metric_TMA_Info_Inst_Mix_IpArith_AVX256 < 10",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Flops;FpVector;InsType",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_IpArith_AVX512",
      "LegacyName": "metric_TMA_Info_Inst_Mix_IpArith_AVX512",
      "Level": 1,
      "BriefDescription": "Instructions per FP Arithmetic AVX 512-bit instruction (lower number means higher occurrence rate). Values < 1 are possible due to intentional FMA double counting.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.512B_PACKED_DOUBLE",
          "Alias": "b"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.512B_PACKED_SINGLE",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "a / ( b + c )",
      "BaseFormula": "inst_retired.any / ( fp_arith_inst_retired.512b_packed_double + fp_arith_inst_retired.512b_packed_single )",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Inst_Mix_IpArith_AVX512"
          }
        ],
        "Formula": "a < 10",
        "BaseFormula": "metric_TMA_Info_Inst_Mix_IpArith_AVX512 < 10",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Flops;FpVector;InsType",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_IpPause",
      "LegacyName": "metric_TMA_Info_Inst_Mix_IpPause",
      "Level": 1,
      "BriefDescription": "Instructions per PAUSE (lower number means higher occurrence rate)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "MISC_RETIRED.PAUSE_INST",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "( a ) / b",
      "BaseFormula": "tma_info_inst_mix_instructions / misc_retired.pause_inst",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Flops;FpVector;InsType",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_IpSWPF",
      "LegacyName": "metric_TMA_Info_Inst_Mix_IpSWPF",
      "Level": 1,
      "BriefDescription": "Instructions per Software prefetch instruction (of any type: NTA/T0/T1/T2/Prefetch) (lower number means higher occurrence rate)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "SW_PREFETCH_ACCESS.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / sw_prefetch_access.any",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Inst_Mix_IpSWPF"
          }
        ],
        "Formula": "a < 100",
        "BaseFormula": "metric_TMA_Info_Inst_Mix_IpSWPF < 100",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Prefetches",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Inst_Mix_Instructions",
      "LegacyName": "metric_TMA_Info_Inst_Mix_Instructions",
      "Level": 1,
      "BriefDescription": "Total number of retired Instructions",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "a",
      "BaseFormula": "inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Count",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Summary;TmaL1",
      "LocateWith": "INST_RETIRED.PREC_DIST"
    },
    {
      "MetricName": "Info_Pipeline_Retire",
      "LegacyName": "metric_TMA_Info_Pipeline_Retire",
      "Level": 1,
      "BriefDescription": "Average number of Uops retired in cycles where at least one uop has retired.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "e"
        },
        {
          "Name": "UOPS_RETIRED.SLOTS:c1",
          "Alias": "f"
        }
      ],
      "Constants": [],
      "Formula": "( ( a / ( b + c + a + d ) ) * ( e ) ) / f",
      "BaseFormula": "( tma_retiring * tma_info_thread_slots ) / uops_retired.slots:c1",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Pipeline;Ret",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Pipeline_IpAssist",
      "LegacyName": "metric_TMA_Info_Pipeline_IpAssist",
      "Level": 1,
      "BriefDescription": "Instructions per a microcode Assist invocation. See Assists tree node for details (lower number means higher occurrence rate)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "ASSISTS.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / assists.any",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Pipeline_IpAssist"
          }
        ],
        "Formula": "a < 100000",
        "BaseFormula": "metric_TMA_Info_Pipeline_IpAssist < 100000",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "MicroSeq;Pipeline;Ret;Retire",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Pipeline_Execute",
      "LegacyName": "metric_TMA_Info_Pipeline_Execute",
      "Level": 1,
      "BriefDescription": "Instruction-Level-Parallelism (average number of uops executed when there is execution) per physical core",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UOPS_EXECUTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "UOPS_EXECUTED.CORE_CYCLES_GE_1",
          "Alias": "b"
        },
        {
          "Name": "UOPS_EXECUTED.THREAD:c1",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "a / ( ( b / 2 ) if smt_on else c )",
      "BaseFormula": "uops_executed.thread / ( ( uops_executed.core_cycles_ge_1 / 2 ) if smt_on else uops_executed.thread:c1 )",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Cor;Pipeline;PortsUtil;SMT",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Pipeline_Fetch_DSB",
      "LegacyName": "metric_TMA_Info_Pipeline_Fetch_DSB",
      "Level": 1,
      "BriefDescription": "Average number of uops fetched from DSB per cycle",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "IDQ.DSB_UOPS",
          "Alias": "a"
        },
        {
          "Name": "IDQ.DSB_CYCLES_ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "idq.dsb_uops / idq.dsb_cycles_any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Fed;FetchBW",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Pipeline_Fetch_MITE",
      "LegacyName": "metric_TMA_Info_Pipeline_Fetch_MITE",
      "Level": 1,
      "BriefDescription": "Average number of uops fetched from MITE per cycle",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "IDQ.MITE_UOPS",
          "Alias": "a"
        },
        {
          "Name": "IDQ.MITE_CYCLES_ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "idq.mite_uops / idq.mite_cycles_any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Fed;FetchBW",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Pipeline_Fetch_MS",
      "LegacyName": "metric_TMA_Info_Pipeline_Fetch_MS",
      "Level": 1,
      "BriefDescription": "Average number of uops fetched from MS per cycle",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "a"
        },
        {
          "Name": "IDQ.MS_UOPS:c1",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "idq.ms_uops / idq.ms_uops:c1",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Fed;FetchLat;MicroSeq",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Frontend_Fetch_UpC",
      "LegacyName": "metric_TMA_Info_Frontend_Fetch_UpC",
      "Level": 1,
      "BriefDescription": "Average number of Uops issued by front-end when it issued something",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "a"
        },
        {
          "Name": "UOPS_ISSUED.ANY:c1",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "uops_issued.any / uops_issued.any:c1",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Fed;FetchBW",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Frontend_DSB_Coverage",
      "LegacyName": "metric_TMA_Info_Frontend_DSB_Coverage",
      "Level": 1,
      "BriefDescription": "Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop Cache)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "IDQ.DSB_UOPS",
          "Alias": "a"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / ( b )",
      "BaseFormula": "idq.dsb_uops / ( uops_issued.any )",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Frontend_DSB_Coverage"
          },
          {
            "Alias": "b",
            "Value": "metric_TMA_Info_Thread_IPC"
          }
        ],
        "Formula": "a < 0.7 & b / 5 > 0.35",
        "BaseFormula": "metric_TMA_Info_Frontend_DSB_Coverage < 0.7 & metric_TMA_Info_Thread_IPC / 5 > 0.35",
        "ThresholdIssues": "$issueFB"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "DSB;Fed;FetchBW",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Frontend_DSB_Switch_Cost",
      "LegacyName": "metric_TMA_Info_Frontend_DSB_Switch_Cost",
      "Level": 1,
      "BriefDescription": "Average number of cycles of a switch from the DSB fetch-unit to MITE fetch unit - see DSB_Switches tree node for details.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "DSB2MITE_SWITCHES.PENALTY_CYCLES",
          "Alias": "a"
        },
        {
          "Name": "DSB2MITE_SWITCHES.PENALTY_CYCLES:c1:e1",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "dsb2mite_switches.penalty_cycles / dsb2mite_switches.penalty_cycles:c1:e1",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "DSBmiss",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Frontend_TBpC",
      "LegacyName": "metric_TMA_Info_Frontend_TBpC",
      "Level": 1,
      "BriefDescription": "Taken Branches retired Per Cycle",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "BR_INST_RETIRED.NEAR_TAKEN",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / ( b )",
      "BaseFormula": "br_inst_retired.near_taken / tma_info_thread_clks",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Branches;FetchBW",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Frontend_ICache_Miss_Latency",
      "LegacyName": "metric_TMA_Info_Frontend_ICache_Miss_Latency",
      "Level": 1,
      "BriefDescription": "Average Latency for L1 instruction cache misses",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "ICACHE_16B.IFDATA_STALL",
          "Alias": "a"
        },
        {
          "Name": "ICACHE_16B.IFDATA_STALL:c1:e1",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "icache_16b.ifdata_stall / icache_16b.ifdata_stall:c1:e1",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Fed;FetchLat;IcMiss",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Frontend_IpDSB_Miss_Ret",
      "LegacyName": "metric_TMA_Info_Frontend_IpDSB_Miss_Ret",
      "Level": 1,
      "BriefDescription": "Instructions per non-speculative DSB miss (lower number means higher occurrence rate)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "FRONTEND_RETIRED.ANY_DSB_MISS",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / frontend_retired.any_dsb_miss",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Frontend_IpDSB_Miss_Ret"
          }
        ],
        "Formula": "a < 50",
        "BaseFormula": "metric_TMA_Info_Frontend_IpDSB_Miss_Ret < 50",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "DSBmiss;Fed",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Frontend_IpUnknown_Branch",
      "LegacyName": "metric_TMA_Info_Frontend_IpUnknown_Branch",
      "Level": 1,
      "BriefDescription": "Instructions per speculative Unknown Branch Misprediction (BAClear) (lower number means higher occurrence rate)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "BACLEARS.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "( a ) / b",
      "BaseFormula": "tma_info_inst_mix_instructions / baclears.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Fed",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Frontend_L2MPKI_Code",
      "LegacyName": "metric_TMA_Info_Frontend_L2MPKI_Code",
      "Level": 1,
      "BriefDescription": "L2 cache true code cacheline misses per kilo instruction",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "FRONTEND_RETIRED.L2_MISS",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * frontend_retired.l2_miss / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "IcMiss",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Frontend_L2MPKI_Code_All",
      "LegacyName": "metric_TMA_Info_Frontend_L2MPKI_Code_All",
      "Level": 1,
      "BriefDescription": "L2 cache speculative code cacheline misses per kilo instruction",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "L2_RQSTS.CODE_RD_MISS",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * l2_rqsts.code_rd_miss / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "IcMiss",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Botlnk_L2_DSB_Misses",
      "LegacyName": "metric_TMA_Info_Botlnk_L2_DSB_Misses",
      "Level": 1,
      "BriefDescription": "Total pipeline cost of DSB (uop cache) misses - subset of the Instruction_Fetch_BW Bottleneck.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE",
          "Alias": "a"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "b"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "c"
        },
        {
          "Name": "DSB2MITE_SWITCHES.PENALTY_CYCLES",
          "Alias": "d"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "e"
        },
        {
          "Name": "ICACHE_DATA.STALLS",
          "Alias": "f"
        },
        {
          "Name": "ICACHE_TAG.STALLS",
          "Alias": "g"
        },
        {
          "Name": "INT_MISC.CLEAR_RESTEER_CYCLES",
          "Alias": "h"
        },
        {
          "Name": "BACLEARS.ANY",
          "Alias": "i"
        },
        {
          "Name": "IDQ.MS_SWITCHES",
          "Alias": "j"
        },
        {
          "Name": "DECODE.LCP",
          "Alias": "k"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "l"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "m"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "n"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "o"
        },
        {
          "Name": "IDQ.MITE_CYCLES_ANY",
          "Alias": "p"
        },
        {
          "Name": "IDQ.MITE_CYCLES_OK",
          "Alias": "q"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "r"
        },
        {
          "Name": "IDQ.DSB_CYCLES_ANY",
          "Alias": "s"
        },
        {
          "Name": "IDQ.DSB_CYCLES_OK",
          "Alias": "t"
        },
        {
          "Name": "IDQ.MS_UOPS:c1",
          "Alias": "u"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( ( ( 5 ) * a - b ) / ( c ) ) * ( d / ( e ) ) / ( ( f / ( e ) ) + ( g / ( e ) ) + ( h / ( e ) + ( 10 ) * i / ( e ) ) + ( ( 3 ) * j / ( e ) ) + ( k / ( e ) ) + ( d / ( e ) ) ) + ( max( 0 , ( l / ( l + m + n + o ) - b / ( c ) ) - ( ( ( 5 ) * a - b ) / ( c ) ) ) ) * ( ( p - q ) / ( r if smt_on else ( e ) ) / 2 ) / ( ( ( p - q ) / ( r if smt_on else ( e ) ) / 2 ) + ( ( s - t ) / ( r if smt_on else ( e ) ) / 2 ) + ( u / ( r if smt_on else ( e ) ) / 3.3 ) ) )",
      "BaseFormula": "100 * ( tma_fetch_latency * tma_dsb_switches / ( tma_icache_misses + tma_itlb_misses + tma_branch_resteers + tma_ms_switches + tma_lcp + tma_dsb_switches ) + tma_fetch_bandwidth * tma_mite / ( tma_mite + tma_dsb + tma_ms ) )",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Botlnk_L2_DSB_Misses"
          }
        ],
        "Formula": "a > 10",
        "BaseFormula": "metric_TMA_Info_Botlnk_L2_DSB_Misses > 10",
        "ThresholdIssues": "$issueFB"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "DSBmiss;Fed",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Botlnk_L2_DSB_Bandwidth",
      "LegacyName": "metric_TMA_Info_Botlnk_L2_DSB_Bandwidth",
      "Level": 1,
      "BriefDescription": "Total pipeline cost of DSB (uop cache) hits - subset of the Instruction_Fetch_BW Bottleneck.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "a"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "b"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "c"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "d"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "e"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "f"
        },
        {
          "Name": "IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE",
          "Alias": "g"
        },
        {
          "Name": "IDQ.DSB_CYCLES_ANY",
          "Alias": "h"
        },
        {
          "Name": "IDQ.DSB_CYCLES_OK",
          "Alias": "i"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "j"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "k"
        },
        {
          "Name": "IDQ.MITE_CYCLES_ANY",
          "Alias": "l"
        },
        {
          "Name": "IDQ.MITE_CYCLES_OK",
          "Alias": "m"
        },
        {
          "Name": "IDQ.MS_UOPS:c1",
          "Alias": "n"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "100 * ( ( a / ( a + b + c + d ) - e / ( f ) ) * ( ( max( 0 , ( a / ( a + b + c + d ) - e / ( f ) ) - ( ( ( 5 ) * g - e ) / ( f ) ) ) ) / ( ( ( ( 5 ) * g - e ) / ( f ) ) + ( max( 0 , ( a / ( a + b + c + d ) - e / ( f ) ) - ( ( ( 5 ) * g - e ) / ( f ) ) ) ) ) ) * ( ( ( h - i ) / ( j if smt_on else ( k ) ) / 2 ) / ( ( ( l - m ) / ( j if smt_on else ( k ) ) / 2 ) + ( ( h - i ) / ( j if smt_on else ( k ) ) / 2 ) + ( n / ( j if smt_on else ( k ) ) / 3.3 ) ) ) )",
      "BaseFormula": "100 * ( tma_frontend_bound * ( tma_fetch_bandwidth / ( tma_fetch_latency + tma_fetch_bandwidth ) ) * ( tma_dsb / ( tma_mite + tma_dsb + tma_ms ) ) )",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Botlnk_L2_DSB_Bandwidth"
          }
        ],
        "Formula": "a > 10",
        "BaseFormula": "metric_TMA_Info_Botlnk_L2_DSB_Bandwidth > 10",
        "ThresholdIssues": "$issueFB"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "DSB;Fed;FetchBW",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Botlnk_L2_IC_Misses",
      "LegacyName": "metric_TMA_Info_Botlnk_L2_IC_Misses",
      "Level": 1,
      "BriefDescription": "Total pipeline cost of Instruction Cache misses - subset of the Big_Code Bottleneck.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE",
          "Alias": "a"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "b"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "c"
        },
        {
          "Name": "ICACHE_DATA.STALLS",
          "Alias": "d"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "e"
        },
        {
          "Name": "ICACHE_TAG.STALLS",
          "Alias": "f"
        },
        {
          "Name": "INT_MISC.CLEAR_RESTEER_CYCLES",
          "Alias": "g"
        },
        {
          "Name": "BACLEARS.ANY",
          "Alias": "h"
        },
        {
          "Name": "IDQ.MS_SWITCHES",
          "Alias": "i"
        },
        {
          "Name": "DECODE.LCP",
          "Alias": "j"
        },
        {
          "Name": "DSB2MITE_SWITCHES.PENALTY_CYCLES",
          "Alias": "k"
        }
      ],
      "Constants": [],
      "Formula": "100 * ( ( ( ( 5 ) * a - b ) / ( c ) ) * ( d / ( e ) ) / ( ( d / ( e ) ) + ( f / ( e ) ) + ( g / ( e ) + ( 10 ) * h / ( e ) ) + ( ( 3 ) * i / ( e ) ) + ( j / ( e ) ) + ( k / ( e ) ) ) )",
      "BaseFormula": "100 * ( tma_fetch_latency * tma_icache_misses / ( tma_icache_misses + tma_itlb_misses + tma_branch_resteers + tma_ms_switches + tma_lcp + tma_dsb_switches ) )",
      "Category": "TMA",
      "CountDomain": "Scaled_Slots",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Botlnk_L2_IC_Misses"
          }
        ],
        "Formula": "a > 5",
        "BaseFormula": "metric_TMA_Info_Botlnk_L2_IC_Misses > 5",
        "ThresholdIssues": "$issueFL"
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Fed;FetchLat;IcMiss",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Bad_Spec_IpMispredict",
      "LegacyName": "metric_TMA_Info_Bad_Spec_IpMispredict",
      "Level": 1,
      "BriefDescription": "Number of Instructions per non-speculative Branch Misprediction (JEClear) (lower number means higher occurrence rate)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "BR_MISP_RETIRED.ALL_BRANCHES",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / br_misp_retired.all_branches",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Bad_Spec_IpMispredict"
          }
        ],
        "Formula": "a < 200",
        "BaseFormula": "metric_TMA_Info_Bad_Spec_IpMispredict < 200",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Bad;BadSpec;BrMispredicts",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Bad_Spec_IpMisp_Cond_Ntaken",
      "LegacyName": "metric_TMA_Info_Bad_Spec_IpMisp_Cond_Ntaken",
      "Level": 1,
      "BriefDescription": "Instructions per retired Mispredicts for conditional non-taken branches (lower number means higher occurrence rate).",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "BR_MISP_RETIRED.COND_NTAKEN",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / br_misp_retired.cond_ntaken",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Bad_Spec_IpMisp_Cond_Ntaken"
          }
        ],
        "Formula": "a < 200",
        "BaseFormula": "metric_TMA_Info_Bad_Spec_IpMisp_Cond_Ntaken < 200",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Bad;BrMispredicts",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Bad_Spec_IpMisp_Cond_Taken",
      "LegacyName": "metric_TMA_Info_Bad_Spec_IpMisp_Cond_Taken",
      "Level": 1,
      "BriefDescription": "Instructions per retired Mispredicts for conditional taken branches (lower number means higher occurrence rate).",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "BR_MISP_RETIRED.COND_TAKEN",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / br_misp_retired.cond_taken",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Bad_Spec_IpMisp_Cond_Taken"
          }
        ],
        "Formula": "a < 200",
        "BaseFormula": "metric_TMA_Info_Bad_Spec_IpMisp_Cond_Taken < 200",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Bad;BrMispredicts",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Bad_Spec_IpMisp_Ret",
      "LegacyName": "metric_TMA_Info_Bad_Spec_IpMisp_Ret",
      "Level": 1,
      "BriefDescription": "Instructions per retired Mispredicts for return branches (lower number means higher occurrence rate).",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "BR_MISP_RETIRED.RET",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / br_misp_retired.ret",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Bad_Spec_IpMisp_Ret"
          }
        ],
        "Formula": "a < 500",
        "BaseFormula": "metric_TMA_Info_Bad_Spec_IpMisp_Ret < 500",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Bad;BrMispredicts",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Bad_Spec_IpMisp_Indirect",
      "LegacyName": "metric_TMA_Info_Bad_Spec_IpMisp_Indirect",
      "Level": 1,
      "BriefDescription": "Instructions per retired Mispredicts for indirect CALL or JMP branches (lower number means higher occurrence rate).",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "BR_MISP_RETIRED.INDIRECT",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / br_misp_retired.indirect",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Bad_Spec_IpMisp_Indirect"
          }
        ],
        "Formula": "a < 1000",
        "BaseFormula": "metric_TMA_Info_Bad_Spec_IpMisp_Indirect < 1000",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Bad;BrMispredicts",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Bad_Spec_Branch_Misprediction_Cost",
      "LegacyName": "metric_TMA_Info_Bad_Spec_Branch_Misprediction_Cost",
      "Level": 1,
      "BriefDescription": "Branch Misprediction Cost: Cycles representing fraction of TMA slots wasted per non-speculative branch misprediction (retired JEClear)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UOPS_RETIRED.SLOTS",
          "Alias": "a"
        },
        {
          "Name": "UOPS_ISSUED.ANY",
          "Alias": "b"
        },
        {
          "Name": "IDQ.MS_UOPS",
          "Alias": "c"
        },
        {
          "Name": "TOPDOWN.SLOTS:perf_metrics",
          "Alias": "d"
        },
        {
          "Name": "BR_MISP_RETIRED.ALL_BRANCHES",
          "Alias": "e"
        },
        {
          "Name": "MACHINE_CLEARS.COUNT",
          "Alias": "f"
        },
        {
          "Name": "PERF_METRICS.FRONTEND_BOUND",
          "Alias": "g"
        },
        {
          "Name": "PERF_METRICS.BAD_SPECULATION",
          "Alias": "h"
        },
        {
          "Name": "PERF_METRICS.RETIRING",
          "Alias": "i"
        },
        {
          "Name": "PERF_METRICS.BACKEND_BOUND",
          "Alias": "j"
        },
        {
          "Name": "INT_MISC.UOP_DROPPING",
          "Alias": "k"
        },
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "l"
        },
        {
          "Name": "IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE",
          "Alias": "m"
        },
        {
          "Name": "INT_MISC.CLEAR_RESTEER_CYCLES",
          "Alias": "n"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "o"
        },
        {
          "Name": "ICACHE_DATA.STALLS",
          "Alias": "p"
        },
        {
          "Name": "ICACHE_TAG.STALLS",
          "Alias": "q"
        },
        {
          "Name": "BACLEARS.ANY",
          "Alias": "r"
        },
        {
          "Name": "IDQ.MS_SWITCHES",
          "Alias": "s"
        },
        {
          "Name": "DECODE.LCP",
          "Alias": "t"
        },
        {
          "Name": "DSB2MITE_SWITCHES.PENALTY_CYCLES",
          "Alias": "u"
        }
      ],
      "Constants": [],
      "Formula": "( 100 * ( 1 - ( 10 * ( ( a / b ) * c / ( d ) ) * ( max( ( ( e / ( e + f ) ) * ( max( 1 - ( ( g / ( g + h + i + j ) - k / ( d ) ) + ( j / ( g + h + i + j ) + ( ( 5 ) * l ) / ( d ) ) + ( i / ( g + h + i + j ) ) ) , 0 ) ) ) * ( 1 - e / ( l - f ) ) , 0.0001 ) ) / ( ( e / ( e + f ) ) * ( max( 1 - ( ( g / ( g + h + i + j ) - k / ( d ) ) + ( j / ( g + h + i + j ) + ( ( 5 ) * l ) / ( d ) ) + ( i / ( g + h + i + j ) ) ) , 0 ) ) ) ) ) * ( ( ( e / ( e + f ) ) * ( max( 1 - ( ( g / ( g + h + i + j ) - k / ( d ) ) + ( j / ( g + h + i + j ) + ( ( 5 ) * l ) / ( d ) ) + ( i / ( g + h + i + j ) ) ) , 0 ) ) ) + ( ( ( 5 ) * m - k ) / ( d ) ) * ( ( e / ( e + f ) ) * n / ( o ) ) / ( ( p / ( o ) ) + ( q / ( o ) ) + ( n / ( o ) + ( 10 ) * r / ( o ) ) + ( ( 3 ) * s / ( o ) ) + ( t / ( o ) ) + ( u / ( o ) ) ) ) ) * ( d ) / ( 5 ) / e / 100",
      "BaseFormula": "tma_bottleneck_mispredictions * tma_info_thread_slots / ( 5 ) / br_misp_retired.all_branches / 100",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": "$issueBM"
      },
      "ResolutionLevels": "CORE, SOCKET, SYSTEM",
      "MetricGroup": "Bad;BrMispredicts",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Bad_Spec_Spec_Clears_Ratio",
      "LegacyName": "metric_TMA_Info_Bad_Spec_Spec_Clears_Ratio",
      "Level": 1,
      "BriefDescription": "Speculative to Retired ratio of all clears (covering Mispredicts and nukes)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INT_MISC.CLEARS_COUNT",
          "Alias": "a"
        },
        {
          "Name": "BR_MISP_RETIRED.ALL_BRANCHES",
          "Alias": "b"
        },
        {
          "Name": "MACHINE_CLEARS.COUNT",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "a / ( b + c )",
      "BaseFormula": "int_misc.clears_count / ( br_misp_retired.all_branches + machine_clears.count )",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "BrMispredicts",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Branches_Cond_NT",
      "LegacyName": "metric_TMA_Info_Branches_Cond_NT",
      "Level": 1,
      "BriefDescription": "Fraction of branches that are non-taken conditionals",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "BR_INST_RETIRED.COND_NTAKEN",
          "Alias": "a"
        },
        {
          "Name": "BR_INST_RETIRED.ALL_BRANCHES",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "br_inst_retired.cond_ntaken / br_inst_retired.all_branches",
      "Category": "TMA",
      "CountDomain": "Fraction",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Bad;Branches;CodeGen;PGO",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Branches_Cond_TK",
      "LegacyName": "metric_TMA_Info_Branches_Cond_TK",
      "Level": 1,
      "BriefDescription": "Fraction of branches that are taken conditionals",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "BR_INST_RETIRED.COND_TAKEN",
          "Alias": "a"
        },
        {
          "Name": "BR_INST_RETIRED.ALL_BRANCHES",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "br_inst_retired.cond_taken / br_inst_retired.all_branches",
      "Category": "TMA",
      "CountDomain": "Fraction",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Bad;Branches;CodeGen;PGO",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Branches_CallRet",
      "LegacyName": "metric_TMA_Info_Branches_CallRet",
      "Level": 1,
      "BriefDescription": "Fraction of branches that are CALL or RET",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "BR_INST_RETIRED.NEAR_CALL",
          "Alias": "a"
        },
        {
          "Name": "BR_INST_RETIRED.NEAR_RETURN",
          "Alias": "b"
        },
        {
          "Name": "BR_INST_RETIRED.ALL_BRANCHES",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "( a + b ) / c",
      "BaseFormula": "( br_inst_retired.near_call + br_inst_retired.near_return ) / br_inst_retired.all_branches",
      "Category": "TMA",
      "CountDomain": "Fraction",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Bad;Branches",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Branches_Jump",
      "LegacyName": "metric_TMA_Info_Branches_Jump",
      "Level": 1,
      "BriefDescription": "Fraction of branches that are unconditional (direct or indirect) jumps",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "BR_INST_RETIRED.NEAR_TAKEN",
          "Alias": "a"
        },
        {
          "Name": "BR_INST_RETIRED.COND_TAKEN",
          "Alias": "b"
        },
        {
          "Name": "BR_INST_RETIRED.NEAR_CALL",
          "Alias": "c"
        },
        {
          "Name": "BR_INST_RETIRED.ALL_BRANCHES",
          "Alias": "d"
        }
      ],
      "Constants": [],
      "Formula": "( a - b - 2 * c ) / d",
      "BaseFormula": "( br_inst_retired.near_taken - br_inst_retired.cond_taken - 2 * br_inst_retired.near_call ) / br_inst_retired.all_branches",
      "Category": "TMA",
      "CountDomain": "Fraction",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Bad;Branches",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Branches_Other_Branches",
      "LegacyName": "metric_TMA_Info_Branches_Other_Branches",
      "Level": 1,
      "BriefDescription": "Fraction of branches of other types (not individually covered by other metrics in Info.Branches group)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "BR_INST_RETIRED.COND_NTAKEN",
          "Alias": "a"
        },
        {
          "Name": "BR_INST_RETIRED.ALL_BRANCHES",
          "Alias": "b"
        },
        {
          "Name": "BR_INST_RETIRED.COND_TAKEN",
          "Alias": "c"
        },
        {
          "Name": "BR_INST_RETIRED.NEAR_CALL",
          "Alias": "d"
        },
        {
          "Name": "BR_INST_RETIRED.NEAR_RETURN",
          "Alias": "e"
        },
        {
          "Name": "BR_INST_RETIRED.NEAR_TAKEN",
          "Alias": "f"
        }
      ],
      "Constants": [],
      "Formula": "1 - ( ( a / b ) + ( c / b ) + ( ( d + e ) / b ) + ( ( f - c - 2 * d ) / b ) )",
      "BaseFormula": "1 - ( tma_info_branches_cond_nt + tma_info_branches_cond_tk + tma_info_branches_callret + tma_info_branches_jump )",
      "Category": "TMA",
      "CountDomain": "Fraction",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Bad;Branches",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_Load_Miss_Real_Latency",
      "LegacyName": "metric_TMA_Info_Memory_Load_Miss_Real_Latency",
      "Level": 1,
      "BriefDescription": "Actual Average Latency for L1 data-cache miss demand load operations (in core cycles)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "L1D_PEND_MISS.PENDING",
          "Alias": "a"
        },
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "b"
        },
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "a / ( b + c )",
      "BaseFormula": "l1d_pend_miss.pending / ( mem_load_retired.l1_miss + mem_load_retired.fb_hit )",
      "Category": "TMA",
      "CountDomain": "Clocks_Latency",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryBound;MemoryLat",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_MLP",
      "LegacyName": "metric_TMA_Info_Memory_MLP",
      "Level": 1,
      "BriefDescription": "Memory-Level-Parallelism (average number of L1 miss demand load when there is at least one such miss. Per-Logical Processor)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "L1D_PEND_MISS.PENDING",
          "Alias": "a"
        },
        {
          "Name": "L1D_PEND_MISS.PENDING_CYCLES",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "l1d_pend_miss.pending / l1d_pend_miss.pending_cycles",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryBound;MemoryBW",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_L1MPKI",
      "LegacyName": "metric_TMA_Info_Memory_L1MPKI",
      "Level": 1,
      "BriefDescription": "L1 cache true misses per kilo instruction for retired demand loads",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "MEM_LOAD_RETIRED.L1_MISS",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * mem_load_retired.l1_miss / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "CacheHits;Mem",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_L1MPKI_Load",
      "LegacyName": "metric_TMA_Info_Memory_L1MPKI_Load",
      "Level": 1,
      "BriefDescription": "L1 cache true misses per kilo instruction for all demand loads (including speculative)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "L2_RQSTS.ALL_DEMAND_DATA_RD",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * l2_rqsts.all_demand_data_rd / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "CacheHits;Mem",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_L2MPKI",
      "LegacyName": "metric_TMA_Info_Memory_L2MPKI",
      "Level": 1,
      "BriefDescription": "L2 cache true misses per kilo instruction for retired demand loads",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "MEM_LOAD_RETIRED.L2_MISS",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * mem_load_retired.l2_miss / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem;Backend;CacheHits",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_L2MPKI_All",
      "LegacyName": "metric_TMA_Info_Memory_L2MPKI_All",
      "Level": 1,
      "BriefDescription": "L2 cache ([RKL+] true) misses per kilo instruction for all request types (including speculative)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "OFFCORE_REQUESTS.ALL_DATA_RD",
          "Alias": "a"
        },
        {
          "Name": "OFFCORE_REQUESTS.DEMAND_DATA_RD",
          "Alias": "b"
        },
        {
          "Name": "L2_RQSTS.ALL_DEMAND_MISS",
          "Alias": "c"
        },
        {
          "Name": "L2_RQSTS.SWPF_MISS",
          "Alias": "d"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "e"
        }
      ],
      "Constants": [],
      "Formula": "1000 * ( ( a - b ) + c + d ) / ( e )",
      "BaseFormula": "1000 * ( ( offcore_requests.all_data_rd - offcore_requests.demand_data_rd ) + l2_rqsts.all_demand_miss + l2_rqsts.swpf_miss ) / tma_info_inst_mix_instructions",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "CacheHits;Mem;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_L2MPKI_Load",
      "LegacyName": "metric_TMA_Info_Memory_L2MPKI_Load",
      "Level": 1,
      "BriefDescription": "L2 cache ([RKL+] true) misses per kilo instruction for all demand loads  (including speculative)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "L2_RQSTS.DEMAND_DATA_RD_MISS",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * l2_rqsts.demand_data_rd_miss / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "CacheHits;Mem",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_L2MPKI_RFO",
      "LegacyName": "metric_TMA_Info_Memory_L2MPKI_RFO",
      "Level": 1,
      "BriefDescription": "Offcore requests (L2 cache miss) per kilo instruction for demand RFOs",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "L2_RQSTS.RFO_MISS",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * l2_rqsts.rfo_miss / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "CacheMisses;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_L2HPKI_Load",
      "LegacyName": "metric_TMA_Info_Memory_L2HPKI_Load",
      "Level": 1,
      "BriefDescription": "L2 cache hits per kilo instruction for all demand loads  (including speculative)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "L2_RQSTS.DEMAND_DATA_RD_HIT",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * l2_rqsts.demand_data_rd_hit / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "CacheHits;Mem",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_L3MPKI",
      "LegacyName": "metric_TMA_Info_Memory_L3MPKI",
      "Level": 1,
      "BriefDescription": "L3 cache true misses per kilo instruction for retired demand loads",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "MEM_LOAD_RETIRED.L3_MISS",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * mem_load_retired.l3_miss / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_FB_HPKI",
      "LegacyName": "metric_TMA_Info_Memory_FB_HPKI",
      "Level": 1,
      "BriefDescription": "Fill Buffer (FB) hits per kilo instructions for retired demand loads (L1D misses that merge into ongoing miss-handling entries)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "MEM_LOAD_RETIRED.FB_HIT",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * mem_load_retired.fb_hit / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "CacheHits;Mem",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_L1D_Cache_Fill_BW",
      "LegacyName": "metric_TMA_Info_Memory_L1D_Cache_Fill_BW",
      "Level": 1,
      "BriefDescription": "Average per-thread data fill bandwidth to the L1 data cache [GB / sec]",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "L1D.REPLACEMENT",
          "Alias": "a"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "64 * a / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) )",
      "BaseFormula": "64 * l1d.replacement / ( 1000000000 ) / tma_info_system_time",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryBW",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_L2_Cache_Fill_BW",
      "LegacyName": "metric_TMA_Info_Memory_L2_Cache_Fill_BW",
      "Level": 1,
      "BriefDescription": "Average per-thread data fill bandwidth to the L2 cache [GB / sec]",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "L2_LINES_IN.ALL",
          "Alias": "a"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "64 * a / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) )",
      "BaseFormula": "64 * l2_lines_in.all / ( 1000000000 ) / tma_info_system_time",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryBW",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_L3_Cache_Fill_BW",
      "LegacyName": "metric_TMA_Info_Memory_L3_Cache_Fill_BW",
      "Level": 1,
      "BriefDescription": "Average per-thread data fill bandwidth to the L3 cache [GB / sec]",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "LONGEST_LAT_CACHE.MISS",
          "Alias": "a"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "64 * a / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) )",
      "BaseFormula": "64 * longest_lat_cache.miss / ( 1000000000 ) / tma_info_system_time",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryBW",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_L3_Cache_Access_BW",
      "LegacyName": "metric_TMA_Info_Memory_L3_Cache_Access_BW",
      "Level": 1,
      "BriefDescription": "Average per-thread data access bandwidth to the L3 cache [GB / sec]",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "OFFCORE_REQUESTS.ALL_REQUESTS",
          "Alias": "a"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "64 * a / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) )",
      "BaseFormula": "64 * offcore_requests.all_requests / ( 1000000000 ) / tma_info_system_time",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryBW;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_TLB_Page_Walks_Utilization",
      "LegacyName": "metric_TMA_Info_Memory_TLB_Page_Walks_Utilization",
      "Level": 1,
      "BriefDescription": "Utilization of the core's Page Walker(s) serving STLB misses triggered by instruction/Load/Store accesses",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "ITLB_MISSES.WALK_PENDING",
          "Alias": "a"
        },
        {
          "Name": "DTLB_LOAD_MISSES.WALK_PENDING",
          "Alias": "b"
        },
        {
          "Name": "DTLB_STORE_MISSES.WALK_PENDING",
          "Alias": "c"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "d"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "e"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "( a + b + c ) / ( 2 * ( d if smt_on else ( e ) ) )",
      "BaseFormula": "( itlb_misses.walk_pending + dtlb_load_misses.walk_pending + dtlb_store_misses.walk_pending ) / ( 2 * tma_info_core_core_clks )",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Memory_TLB_Page_Walks_Utilization"
          }
        ],
        "Formula": "a > 0.5",
        "BaseFormula": "metric_TMA_Info_Memory_TLB_Page_Walks_Utilization > 0.5",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_TLB_Code_STLB_MPKI",
      "LegacyName": "metric_TMA_Info_Memory_TLB_Code_STLB_MPKI",
      "Level": 1,
      "BriefDescription": "STLB (2nd level TLB) code speculative misses per kilo instruction (misses of any page-size that complete the page walk)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "ITLB_MISSES.WALK_COMPLETED",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * itlb_misses.walk_completed / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Fed;MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_TLB_Load_STLB_MPKI",
      "LegacyName": "metric_TMA_Info_Memory_TLB_Load_STLB_MPKI",
      "Level": 1,
      "BriefDescription": "STLB (2nd level TLB) data load speculative misses per kilo instruction (misses of any page-size that complete the page walk)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "DTLB_LOAD_MISSES.WALK_COMPLETED",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * dtlb_load_misses.walk_completed / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_TLB_Store_STLB_MPKI",
      "LegacyName": "metric_TMA_Info_Memory_TLB_Store_STLB_MPKI",
      "Level": 1,
      "BriefDescription": "STLB (2nd level TLB) data store speculative misses per kilo instruction (misses of any page-size that complete the page walk)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "DTLB_STORE_MISSES.WALK_COMPLETED",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * dtlb_store_misses.walk_completed / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryTLB",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_Core_L1D_Cache_Fill_BW_2T",
      "LegacyName": "metric_TMA_Info_Memory_Core_L1D_Cache_Fill_BW_2T",
      "Level": 1,
      "BriefDescription": "Average per-core data fill bandwidth to the L1 data cache [GB / sec]",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "L1D.REPLACEMENT",
          "Alias": "a"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "( 64 * a / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) )",
      "BaseFormula": "tma_info_memory_l1d_cache_fill_bw",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryBW",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_Core_L2_Cache_Fill_BW_2T",
      "LegacyName": "metric_TMA_Info_Memory_Core_L2_Cache_Fill_BW_2T",
      "Level": 1,
      "BriefDescription": "Average per-core data fill bandwidth to the L2 cache [GB / sec]",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "L2_LINES_IN.ALL",
          "Alias": "a"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "( 64 * a / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) )",
      "BaseFormula": "tma_info_memory_l2_cache_fill_bw",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryBW",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_Core_L3_Cache_Fill_BW_2T",
      "LegacyName": "metric_TMA_Info_Memory_Core_L3_Cache_Fill_BW_2T",
      "Level": 1,
      "BriefDescription": "Average per-core data fill bandwidth to the L3 cache [GB / sec]",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "LONGEST_LAT_CACHE.MISS",
          "Alias": "a"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "( 64 * a / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) )",
      "BaseFormula": "tma_info_memory_l3_cache_fill_bw",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryBW",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_Core_L3_Cache_Access_BW_2T",
      "LegacyName": "metric_TMA_Info_Memory_Core_L3_Cache_Access_BW_2T",
      "Level": 1,
      "BriefDescription": "Average per-core data access bandwidth to the L3 cache [GB / sec]",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "OFFCORE_REQUESTS.ALL_REQUESTS",
          "Alias": "a"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "( 64 * a / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) ) )",
      "BaseFormula": "tma_info_memory_l3_cache_access_bw",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryBW;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_Core_L2_Evictions_Silent_PKI",
      "LegacyName": "metric_TMA_Info_Memory_Core_L2_Evictions_Silent_PKI",
      "Level": 1,
      "BriefDescription": "Rate of silent evictions from the L2 cache per Kilo instruction where the evicted lines are dropped (no writeback to L3 or memory)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "L2_LINES_OUT.SILENT",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / ( b )",
      "BaseFormula": "1000 * l2_lines_out.silent / tma_info_inst_mix_instructions",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE, SOCKET, SYSTEM",
      "MetricGroup": "L2Evicts;Mem;Server",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_Core_L2_Evictions_NonSilent_PKI",
      "LegacyName": "metric_TMA_Info_Memory_Core_L2_Evictions_NonSilent_PKI",
      "Level": 1,
      "BriefDescription": "Rate of non silent evictions from the L2 cache per Kilo instruction",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "L2_LINES_OUT.NON_SILENT",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / ( b )",
      "BaseFormula": "1000 * l2_lines_out.non_silent / tma_info_inst_mix_instructions",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE, SOCKET, SYSTEM",
      "MetricGroup": "L2Evicts;Mem;Server",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_Prefetches_Useless_HWPF",
      "LegacyName": "metric_TMA_Info_Memory_Prefetches_Useless_HWPF",
      "Level": 1,
      "BriefDescription": "Rate of L2 HW prefetched lines that were not used by demand accesses",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "L2_LINES_OUT.USELESS_HWPF",
          "Alias": "a"
        },
        {
          "Name": "L2_LINES_OUT.SILENT",
          "Alias": "b"
        },
        {
          "Name": "L2_LINES_OUT.NON_SILENT",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "a / ( b + c )",
      "BaseFormula": "l2_lines_out.useless_hwpf / ( l2_lines_out.silent + l2_lines_out.non_silent )",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_Memory_Prefetches_Useless_HWPF"
          }
        ],
        "Formula": "a > 0.15",
        "BaseFormula": "metric_TMA_Info_Memory_Prefetches_Useless_HWPF > 0.15",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Prefetches",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_Latency_Load_L2_Miss_Latency",
      "LegacyName": "metric_TMA_Info_Memory_Latency_Load_L2_Miss_Latency",
      "Level": 1,
      "BriefDescription": "Average Latency for L2 cache miss demand Loads",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.DEMAND_DATA_RD",
          "Alias": "a"
        },
        {
          "Name": "OFFCORE_REQUESTS.DEMAND_DATA_RD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "offcore_requests_outstanding.demand_data_rd / offcore_requests.demand_data_rd",
      "Category": "TMA",
      "CountDomain": "Clocks_Latency",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "LockCont;Memory_Lat;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_Latency_Load_L2_MLP",
      "LegacyName": "metric_TMA_Info_Memory_Latency_Load_L2_MLP",
      "Level": 1,
      "BriefDescription": "Average Parallel L2 cache miss demand Loads",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.DEMAND_DATA_RD",
          "Alias": "a"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.DEMAND_DATA_RD:c1",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "offcore_requests_outstanding.demand_data_rd / offcore_requests_outstanding.demand_data_rd:c1",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Memory_BW;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_Latency_Data_L2_MLP",
      "LegacyName": "metric_TMA_Info_Memory_Latency_Data_L2_MLP",
      "Level": 1,
      "BriefDescription": "Average Parallel L2 cache miss data reads",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD",
          "Alias": "a"
        },
        {
          "Name": "OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "offcore_requests_outstanding.all_data_rd / offcore_requests_outstanding.cycles_with_data_rd",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Memory_BW;Offcore",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_Mix_UC_Load_PKI",
      "LegacyName": "metric_TMA_Info_Memory_Mix_UC_Load_PKI",
      "Level": 1,
      "BriefDescription": "Un-cacheable retired load per kilo instruction",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "MEM_LOAD_MISC_RETIRED.UC",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * mem_load_misc_retired.uc / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_Memory_Mix_Bus_Lock_PKI",
      "LegacyName": "metric_TMA_Info_Memory_Mix_Bus_Lock_PKI",
      "Level": 1,
      "BriefDescription": "\"Bus lock\" per kilo instruction",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "SQ_MISC.BUS_LOCK",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "1000 * a / b",
      "BaseFormula": "1000 * sq_misc.bus_lock / inst_retired.any",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Mem",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_CPU_Utilization",
      "LegacyName": "metric_TMA_Info_System_CPU_Utilization",
      "Level": 1,
      "BriefDescription": "Average CPU Utilization (percentage)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "a"
        }
      ],
      "Constants": [
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "b"
        },
        {
          "Name": "system.sockets[0].cpus.count * system.socket_count",
          "Alias": "c"
        }
      ],
      "Formula": "( a / b ) / c",
      "BaseFormula": "tma_info_system_cpus_utilized / num_cpus",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "HPC;Summary",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_CPUs_Utilized",
      "LegacyName": "metric_TMA_Info_System_CPUs_Utilized",
      "Level": 1,
      "BriefDescription": "Average number of utilized CPUs",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "a"
        }
      ],
      "Constants": [
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "b"
        }
      ],
      "Formula": "a / b",
      "BaseFormula": "cpu_clk_unhalted.ref_tsc / tsc",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "SYSTEM",
      "MetricGroup": "Summary",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_Core_Frequency",
      "LegacyName": "metric_TMA_Info_System_Core_Frequency",
      "Level": 1,
      "BriefDescription": "Measured Average Core Frequency for unhalted processors [GHz]",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "b"
        }
      ],
      "Constants": [
        {
          "Name": "SYSTEM_TSC_FREQ",
          "Alias": "c"
        },
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "( ( a ) / b ) * c / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) )",
      "BaseFormula": "tma_info_system_turbo_utilization * tsc / ( 1000000000 ) / tma_info_system_time",
      "Category": "TMA",
      "CountDomain": "System_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "SOCKET, SYSTEM",
      "MetricGroup": "Summary;Power",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_Uncore_Frequency",
      "LegacyName": "metric_TMA_Info_System_Uncore_Frequency",
      "Level": 1,
      "BriefDescription": "Measured Average Uncore Frequency for the SoC [GHz]",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UNC_CHA_CLOCKTICKS:one_unit",
          "Alias": "a"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "( a ) / 1e9 / ( ( durationtimeinmilliseconds / 1000 ) )",
      "BaseFormula": "tma_info_system_socket_clks / 1e9 / tma_info_system_time",
      "Category": "TMA",
      "CountDomain": "System_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "SOCKET, SYSTEM",
      "MetricGroup": "SoC",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_GFLOPs",
      "LegacyName": "metric_TMA_Info_System_GFLOPs",
      "Level": 1,
      "BriefDescription": "Giga Floating Point Operations Per Second. Aggregate across all supported options of: FP precisions, scalar and vector instructions, vector-width",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "FP_ARITH_INST_RETIRED.SCALAR",
          "Alias": "a"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE",
          "Alias": "b"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.4_FLOPS",
          "Alias": "c"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.8_FLOPS",
          "Alias": "d"
        },
        {
          "Name": "FP_ARITH_INST_RETIRED.512B_PACKED_SINGLE",
          "Alias": "e"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "( ( a + 2 * b + 4 * c + 8 * d + 16 * e ) / ( 1000000000 ) ) / ( ( durationtimeinmilliseconds / 1000 ) )",
      "BaseFormula": "( ( fp_arith_inst_retired.scalar + 2 * fp_arith_inst_retired.128b_packed_double + 4 * fp_arith_inst_retired.4_flops + 8 * fp_arith_inst_retired.8_flops + 16 * fp_arith_inst_retired.512b_packed_single ) / ( 1000000000 ) ) / tma_info_system_time",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Cor;Flops;HPC",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_Turbo_Utilization",
      "LegacyName": "metric_TMA_Info_System_Turbo_Utilization",
      "Level": 1,
      "BriefDescription": "Average Frequency Utilization relative nominal frequency",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_TSC",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "( a ) / b",
      "BaseFormula": "tma_info_thread_clks / cpu_clk_unhalted.ref_tsc",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE, SOCKET, SYSTEM",
      "MetricGroup": "Power",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_Power_License0_Utilization",
      "LegacyName": "metric_TMA_Info_System_Power_License0_Utilization",
      "Level": 1,
      "BriefDescription": "Fraction of Core cycles where the core was running with power-delivery for baseline license level 0.  This includes non-AVX codes, SSE, AVX 128-bit, and low-current AVX 256-bit codes.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CORE_POWER.LVL0_TURBO_LICENSE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "a / ( b if smt_on else ( c ) )",
      "BaseFormula": "core_power.lvl0_turbo_license / tma_info_core_core_clks",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE, SOCKET, SYSTEM",
      "MetricGroup": "Power",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_Power_License1_Utilization",
      "LegacyName": "metric_TMA_Info_System_Power_License1_Utilization",
      "Level": 1,
      "BriefDescription": "Fraction of Core cycles where the core was running with power-delivery for license level 1.  This includes high current AVX 256-bit instructions as well as low current AVX 512-bit instructions.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CORE_POWER.LVL1_TURBO_LICENSE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "a / ( b if smt_on else ( c ) )",
      "BaseFormula": "core_power.lvl1_turbo_license / tma_info_core_core_clks",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_System_Power_License1_Utilization"
          }
        ],
        "Formula": "a > 0.5",
        "BaseFormula": "metric_TMA_Info_System_Power_License1_Utilization > 0.5",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE, SOCKET, SYSTEM",
      "MetricGroup": "Power",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_Power_License2_Utilization",
      "LegacyName": "metric_TMA_Info_System_Power_License2_Utilization",
      "Level": 1,
      "BriefDescription": "Fraction of Core cycles where the core was running with power-delivery for license level 2 (introduced in SKX).  This includes high current AVX 512-bit instructions.",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CORE_POWER.LVL2_TURBO_LICENSE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.DISTRIBUTED",
          "Alias": "b"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "a / ( b if smt_on else ( c ) )",
      "BaseFormula": "core_power.lvl2_turbo_license / tma_info_core_core_clks",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_System_Power_License2_Utilization"
          }
        ],
        "Formula": "a > 0.5",
        "BaseFormula": "metric_TMA_Info_System_Power_License2_Utilization > 0.5",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE, SOCKET, SYSTEM",
      "MetricGroup": "Power",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_SMT_2T_Utilization",
      "LegacyName": "metric_TMA_Info_System_SMT_2T_Utilization",
      "Level": 1,
      "BriefDescription": "Fraction of cycles where both hardware Logical Processors were active",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.ONE_THREAD_ACTIVE",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.REF_DISTRIBUTED",
          "Alias": "b"
        }
      ],
      "Constants": [
        {
          "Name": "HYPERTHREADING_ON",
          "Alias": "smt_on"
        },
        {
          "Name": "THREADS_PER_CORE",
          "Alias": "threads"
        }
      ],
      "Formula": "1 - a / b if smt_on else 0",
      "BaseFormula": "1 - cpu_clk_unhalted.one_thread_active / cpu_clk_unhalted.ref_distributed if smt_on else 0",
      "Category": "TMA",
      "CountDomain": "Core_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "CORE, SOCKET, SYSTEM",
      "MetricGroup": "SMT",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_Kernel_Utilization",
      "LegacyName": "metric_TMA_Info_System_Kernel_Utilization",
      "Level": 1,
      "BriefDescription": "Fraction of cycles spent in the Operating System (OS) Kernel mode",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD_P:SUP",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "cpu_clk_unhalted.thread_p:sup / cpu_clk_unhalted.thread",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_System_Kernel_Utilization"
          }
        ],
        "Formula": "a > 0.05",
        "BaseFormula": "metric_TMA_Info_System_Kernel_Utilization > 0.05",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "OS",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_Kernel_CPI",
      "LegacyName": "metric_TMA_Info_System_Kernel_CPI",
      "Level": 1,
      "BriefDescription": "Cycles Per Instruction for the Operating System (OS) Kernel mode",
      "UnitOfMeasure": "per instruction",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD_P:SUP",
          "Alias": "a"
        },
        {
          "Name": "INST_RETIRED.ANY_P:SUP",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "cpu_clk_unhalted.thread_p:sup / inst_retired.any_p:sup",
      "Category": "TMA",
      "CountDomain": "Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "OS",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_DRAM_BW_Use",
      "LegacyName": "metric_TMA_Info_System_DRAM_BW_Use",
      "Level": 1,
      "BriefDescription": "Average external Memory Bandwidth Use for reads and writes [GB / sec]",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UNC_M_CAS_COUNT.RD",
          "Alias": "a"
        },
        {
          "Name": "UNC_M_CAS_COUNT.WR",
          "Alias": "b"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "( 64 * ( a + b ) / ( 1000000000 ) ) / ( ( durationtimeinmilliseconds / 1000 ) )",
      "BaseFormula": "( 64 * ( unc_m_cas_count.rd + unc_m_cas_count.wr ) / ( 1000000000 ) ) / tma_info_system_time",
      "Category": "TMA",
      "CountDomain": "GB/sec",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": "$issueBW"
      },
      "ResolutionLevels": "CHANNEL, IMC, SOCKET, SYSTEM",
      "MetricGroup": "HPC;MemOffcore;MemoryBW;SoC",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_MEM_Read_Latency",
      "LegacyName": "metric_TMA_Info_System_MEM_Read_Latency",
      "Level": 1,
      "BriefDescription": "Average latency of data read request to external memory (in nanoseconds). Accounts for demand loads and L1/L2 prefetches. ([RKL+]memory-controller only)",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_OCCUPANCY.IA_MISS_DRD",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD",
          "Alias": "b"
        },
        {
          "Name": "UNC_CHA_CLOCKTICKS:one_unit",
          "Alias": "c"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "( 1000000000 ) * ( a / b ) / ( ( c ) / ( ( durationtimeinmilliseconds / 1000 ) ) )",
      "BaseFormula": "( 1000000000 ) * ( unc_cha_tor_occupancy.ia_miss_drd / unc_cha_tor_inserts.ia_miss_drd ) / ( tma_info_system_socket_clks / tma_info_system_time )",
      "Category": "TMA",
      "CountDomain": "NanoSeconds",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryLat;SoC",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_MEM_Parallel_Reads",
      "LegacyName": "metric_TMA_Info_System_MEM_Parallel_Reads",
      "Level": 1,
      "BriefDescription": "Average number of parallel data read requests to external memory. Accounts for demand loads and L1/L2 prefetches",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_OCCUPANCY.IA_MISS_DRD",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_OCCUPANCY.IA_MISS_DRD:c1",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "unc_cha_tor_occupancy.ia_miss_drd / unc_cha_tor_occupancy.ia_miss_drd:c1",
      "Category": "TMA",
      "CountDomain": "System_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "SOCKET, SYSTEM",
      "MetricGroup": "Mem;MemoryBW;SoC",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_MEM_DRAM_Read_Latency",
      "LegacyName": "metric_TMA_Info_System_MEM_DRAM_Read_Latency",
      "Level": 1,
      "BriefDescription": "Average latency of data read request to external DRAM memory [in nanoseconds]. Accounts for demand loads and L1/L2 data-read prefetches",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_OCCUPANCY.IA_MISS_DRD_DDR",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IA_MISS_DRD_DDR",
          "Alias": "b"
        },
        {
          "Name": "UNC_CHA_CLOCKTICKS:one_unit",
          "Alias": "c"
        }
      ],
      "Constants": [],
      "Formula": "( 1000000000 ) * ( a / b ) / c",
      "BaseFormula": "( 1000000000 ) * ( unc_cha_tor_occupancy.ia_miss_drd_ddr / unc_cha_tor_inserts.ia_miss_drd_ddr ) / unc_cha_clockticks:one_unit",
      "Category": "TMA",
      "CountDomain": "NanoSeconds",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "SOCKET, SYSTEM",
      "MetricGroup": "MemOffcore;MemoryLat;SoC;Server",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_IO_Read_BW",
      "LegacyName": "metric_TMA_Info_System_IO_Read_BW",
      "Level": 1,
      "BriefDescription": "Average IO (network or disk) Bandwidth Use for Reads [GB / sec]. Bandwidth of IO reads that are initiated by end device controllers that are requesting memory from the CPU",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_PCIRDCUR",
          "Alias": "a"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "a * 64 / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) )",
      "BaseFormula": "unc_cha_tor_inserts.io_pcirdcur * 64 / ( 1000000000 ) / tma_info_system_time",
      "Category": "TMA",
      "CountDomain": "GB/sec",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "SOCKET, SYSTEM",
      "MetricGroup": "IoBW;MemOffcore;SoC;Server",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_IO_Write_BW",
      "LegacyName": "metric_TMA_Info_System_IO_Write_BW",
      "Level": 1,
      "BriefDescription": "Average IO (network or disk) Bandwidth Use for Writes [GB / sec]. Bandwidth of IO writes that are initiated by end device controllers that are writing memory to the CPU",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_HIT_ITOM",
          "Alias": "a"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_MISS_ITOM",
          "Alias": "b"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_HIT_ITOMCACHENEAR",
          "Alias": "c"
        },
        {
          "Name": "UNC_CHA_TOR_INSERTS.IO_MISS_ITOMCACHENEAR",
          "Alias": "d"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "( a + b + c + d ) * 64 / ( 1000000000 ) / ( ( durationtimeinmilliseconds / 1000 ) )",
      "BaseFormula": "( unc_cha_tor_inserts.io_hit_itom + unc_cha_tor_inserts.io_miss_itom + unc_cha_tor_inserts.io_hit_itomcachenear + unc_cha_tor_inserts.io_miss_itomcachenear ) * 64 / ( 1000000000 ) / tma_info_system_time",
      "Category": "TMA",
      "CountDomain": "GB/sec",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "SOCKET, SYSTEM",
      "MetricGroup": "IoBW;MemOffcore;SoC;Server",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_Power",
      "LegacyName": "metric_TMA_Info_System_Power",
      "Level": 1,
      "BriefDescription": "Total package Power in Watts",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "FREERUN_PKG_ENERGY_STATUS",
          "Alias": "a"
        },
        {
          "Name": "FREERUN_DRAM_ENERGY_STATUS",
          "Alias": "b"
        }
      ],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "( a * ( 61 ) + 15.6 * b ) / ( ( durationtimeinmilliseconds / 1000 ) * ( 1000000 ) )",
      "BaseFormula": "( freerun_pkg_energy_status * ( 61 ) + 15.6 * freerun_dram_energy_status ) / ( ( duration_time ) * ( 1000000 ) )",
      "Category": "TMA",
      "CountDomain": "System_Metric",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "SOCKET, SYSTEM",
      "MetricGroup": "Power;SoC",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_Time",
      "LegacyName": "metric_TMA_Info_System_Time",
      "Level": 1,
      "BriefDescription": "Run duration time in seconds",
      "UnitOfMeasure": "",
      "Events": [],
      "Constants": [
        {
          "Name": "DURATIONTIMEINMILLISECONDS",
          "Alias": "durationtimeinmilliseconds"
        }
      ],
      "Formula": "( durationtimeinmilliseconds / 1000 )",
      "BaseFormula": "duration_time",
      "Category": "TMA",
      "CountDomain": "Seconds",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_System_Time"
          }
        ],
        "Formula": "a < 1",
        "BaseFormula": "metric_TMA_Info_System_Time < 1",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "SOCKET, SYSTEM",
      "MetricGroup": "Summary",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_MUX",
      "LegacyName": "metric_TMA_Info_System_MUX",
      "Level": 1,
      "BriefDescription": "PerfMon Event Multiplexing accuracy indicator",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "CPU_CLK_UNHALTED.THREAD_P",
          "Alias": "a"
        },
        {
          "Name": "CPU_CLK_UNHALTED.THREAD",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "cpu_clk_unhalted.thread_p / cpu_clk_unhalted.thread",
      "Category": "TMA",
      "CountDomain": "Clocks",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_System_MUX"
          }
        ],
        "Formula": "a > 1.1 | a < 0.9",
        "BaseFormula": "metric_TMA_Info_System_MUX > 1.1 | metric_TMA_Info_System_MUX < 0.9",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Summary",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_Socket_CLKS",
      "LegacyName": "metric_TMA_Info_System_Socket_CLKS",
      "Level": 1,
      "BriefDescription": "Socket actual clocks when any core is active on that socket",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "UNC_CHA_CLOCKTICKS:one_unit",
          "Alias": "a"
        }
      ],
      "Constants": [],
      "Formula": "a",
      "BaseFormula": "unc_cha_clockticks:one_unit",
      "Category": "TMA",
      "CountDomain": "Count",
      "Threshold": {
        "Formula": "",
        "BaseFormula": "",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "SOCKET, SYSTEM",
      "MetricGroup": "SoC",
      "LocateWith": ""
    },
    {
      "MetricName": "Info_System_IpFarBranch",
      "LegacyName": "metric_TMA_Info_System_IpFarBranch",
      "Level": 1,
      "BriefDescription": "Instructions per Far Branch ( Far Branches apply upon transition from application to operating system, handling interrupts, exceptions) [lower number means higher occurrence rate]",
      "UnitOfMeasure": "",
      "Events": [
        {
          "Name": "INST_RETIRED.ANY",
          "Alias": "a"
        },
        {
          "Name": "BR_INST_RETIRED.FAR_BRANCH:USER",
          "Alias": "b"
        }
      ],
      "Constants": [],
      "Formula": "a / b",
      "BaseFormula": "inst_retired.any / br_inst_retired.far_branch:user",
      "Category": "TMA",
      "CountDomain": "Inst_Metric",
      "Threshold": {
        "ThresholdMetrics": [
          {
            "Alias": "a",
            "Value": "metric_TMA_Info_System_IpFarBranch"
          }
        ],
        "Formula": "a < 1000000",
        "BaseFormula": "metric_TMA_Info_System_IpFarBranch < 1000000",
        "ThresholdIssues": ""
      },
      "ResolutionLevels": "THREAD, CORE, SOCKET, SYSTEM",
      "MetricGroup": "Branches;OS",
      "LocateWith": ""
    }
  ]
}