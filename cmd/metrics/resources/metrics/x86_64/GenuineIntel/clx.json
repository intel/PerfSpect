[
    {
        "name": "metric_CPU operating frequency (in GHz)",
        "expression": "(([cpu-cycles] / [ref-cycles] * [SYSTEM_TSC_FREQ]) / 1000000000)"
    },
    {
        "name": "metric_CPU utilization %",
        "expression": "100 * [ref-cycles] / [TSC]"
    },
    {
        "name": "metric_CPU utilization% in kernel mode",
        "expression": "100 * [ref-cycles:k] / [TSC]",
        "origin": "perfspect"
    },
    {
        "name": "metric_CPI",
        "name-txn": "metric_cycles per txn",
        "expression": "[cpu-cycles] / [instructions]",
        "expression-txn": "[cpu-cycles] / [TXN]"
    },
    {
        "name": "metric_kernel_CPI",
        "name-txn": "metric_kernel_cycles per txn",
        "expression": "[cpu-cycles:k] / [instructions:k]",
        "expression-txn": "[cpu-cycles:k] / [TXN]",
        "origin": "perfspect"
    },
    {
        "name": "metric_IPC",
        "name-txn": "metric_txn per cycle",
        "expression": "[instructions] / [cpu-cycles]",
        "expression-txn": "[TXN] / [cpu-cycles]",
        "origin": "perfspect"
    },
    {
        "name": "metric_locks retired per instr",
        "name-txn": "metric_locks retired per txn",
        "expression": "[MEM_INST_RETIRED.LOCK_LOADS] / [instructions]",
        "expression-txn": "[MEM_INST_RETIRED.LOCK_LOADS] / [TXN]",
        "origin": "perfmon website"
    },
    {
        "name": "metric_L1D MPI (includes data+rfo w/ prefetches)",
        "name-txn": "metric_L1D misses per txn (includes data+rfo w/ prefetches)",
        "expression": "[L1D.REPLACEMENT] / [instructions]",
        "expression-txn": "[L1D.REPLACEMENT] / [TXN]"
    },
    {
        "name": "metric_L1D demand data read hits per instr",
        "name-txn": "metric_L1D demand data read hits per txn",
        "expression": "[MEM_LOAD_RETIRED.L1_HIT] / [instructions]",
        "expression-txn": "[MEM_LOAD_RETIRED.L1_HIT] / [TXN]"
    },
    {
        "name": "metric_L1-I code read misses (w/ prefetches) per instr",
        "name-txn": "metric_L1I code read misses (includes prefetches) per txn",
        "expression": "[L2_RQSTS.ALL_CODE_RD] / [instructions]",
        "expression-txn": "[L2_RQSTS.ALL_CODE_RD] / [TXN]"
    },
    {
        "name": "metric_L2 demand data read hits per instr",
        "name-txn": "metric_L2 demand data read hits per txn",
        "expression": "[MEM_LOAD_RETIRED.L2_HIT] / [instructions]",
        "expression-txn": "[MEM_LOAD_RETIRED.L2_HIT] / [TXN]"
    },
    {
        "name": "metric_L2 MPI (includes code+data+rfo w/ prefetches)",
        "name-txn": "metric_L2 misses per txn (includes code+data+rfo w/ prefetches)",
        "expression": "[L2_LINES_IN.ALL] / [instructions]",
        "expression-txn": "[L2_LINES_IN.ALL] / [TXN]"
    },
    {
        "name": "metric_L2 demand data read MPI",
        "name-txn": "metric_L2 demand data read misses per txn",
        "expression": "[MEM_LOAD_RETIRED.L2_MISS] / [instructions]",
        "exression-txn": "[MEM_LOAD_RETIRED.L2_MISS] / [TXN]"
    },
    {
        "name": "metric_L2 demand code MPI",
        "name-txn": "metric_L2 demand code misses per txn",
        "expression": "[L2_RQSTS.CODE_RD_MISS] / [instructions]",
        "expression-txn": "[L2_RQSTS.CODE_RD_MISS] / [TXN]"
    },
    {
        "name": "metric_LLC MPI (includes code+data+rfo w/ prefetches)",
        "name-txn": "metric_LLC misses per txn (includes code+data+rfo w/ prefetches)",
        "expression": "([UNC_CHA_TOR_INSERTS.IA_MISS.0x12CC0233] + [UNC_CHA_TOR_INSERTS.IA_MISS.0x12D40433] + [UNC_CHA_TOR_INSERTS.IA_MISS.0x12C40033]) / [instructions]",
        "expression-txn": "([UNC_CHA_TOR_INSERTS.IA_MISS.0x12CC0233] + [UNC_CHA_TOR_INSERTS.IA_MISS.0x12D40433] + [UNC_CHA_TOR_INSERTS.IA_MISS.0x12C40033]) / [TXN]",
        "origin": "perfspect"
    },
    {
        "name": "metric_LLC code read MPI (demand+prefetch)",
        "name-txn": "metric_LLC code read (demand+prefetch) misses per txn",
        "expression": "[UNC_CHA_TOR_INSERTS.IA_MISS.0x12CC0233] / [instructions]",
        "expression-txn": "[UNC_CHA_TOR_INSERTS.IA_MISS.0x12CC0233] / [TXN]"
    },
    {
        "name": "metric_LLC data read MPI (demand+prefetch)",
        "name-txn": "metric_LLC data read (demand+prefetch) misses per txn",
        "expression": "[UNC_CHA_TOR_INSERTS.IA_MISS.0x12D40433] / [instructions]",
        "expression-txn": "[UNC_CHA_TOR_INSERTS.IA_MISS.0x12D40433] / [TXN]"
    },
    {
        "name": "metric_LLC total HITM (per instr)",
        "name-txn": "metric_LLC total HITM per txn (excludes LLC prefetches)",
        "expression": "[OCR.ALL_READS.L3_MISS.REMOTE_HITM] / [instructions]",
        "expression-txn": "[OCR.ALL_READS.L3_MISS.REMOTE_HITM] / [TXN]",
        "origin": "perfspect"
    },
    {
        "name": "metric_LLC total HIT clean line forwards (per instr)",
        "name-txn": "metric_LLC total HIT clean line forwards per txn (excludes LLC prefetches)",
        "expression": "[OCR.ALL_READS.L3_MISS.REMOTE_HIT_FORWARD] / [instructions]",
        "expression-txn": "[OCR.ALL_READS.L3_MISS.REMOTE_HIT_FORWARD] / [TXN]",
        "origin": "perfspect"
    },
    {
        "name": "metric_Average LLC data read miss latency (in ns)",
        "expression": "(1000000000 * [UNC_CHA_TOR_OCCUPANCY.IA_MISS.0x40433] / [UNC_CHA_TOR_INSERTS.IA_MISS.0x40433]) / ( [UNC_CHA_CLOCKTICKS] / ([CHAS_PER_SOCKET] * [SOCKET_COUNT]) )",
        "origin": "perfspect"
    },
    {
        "name": "metric_Average LLC data read miss latency for LOCAL requests (in ns)",
        "expression": "(1000000000 * [UNC_CHA_TOR_OCCUPANCY.IA_MISS.0x40432] / [UNC_CHA_TOR_INSERTS.IA_MISS.0x40432]) / ( [UNC_CHA_CLOCKTICKS] / ([CHAS_PER_SOCKET] * [SOCKET_COUNT]) )",
        "origin": "perfspect"
    },
    {
        "name": "metric_Average LLC data read miss latency for REMOTE requests (in ns)",
        "expression": "(1000000000 * [UNC_CHA_TOR_OCCUPANCY.IA_MISS.0x40431] / [UNC_CHA_TOR_INSERTS.IA_MISS.0x40431]) / ( [UNC_CHA_CLOCKTICKS] / ([CHAS_PER_SOCKET] * [SOCKET_COUNT]) )",
        "origin": "perfspect"
    },
    {
        "name": "metric_ITLB MPI",
        "name-txn": "metric_ITLB misses per txn",
        "expression": "[ITLB_MISSES.WALK_COMPLETED] / [instructions]",
        "expression-txn": "[ITLB_MISSES.WALK_COMPLETED] / [TXN]"
    },
    {
        "name": "metric_ITLB large page MPI",
        "name-txn": "metric_ITLB large page misses per txn",
        "expression": "[ITLB_MISSES.WALK_COMPLETED_2M_4M] / [instructions]",
        "expression-txn": "[ITLB_MISSES.WALK_COMPLETED_2M_4M] / [TXN]"
    },
    {
        "name": "metric_DTLB load MPI",
        "name-txn": "metric_DTLB load misses per txn",
        "expression": "[DTLB_LOAD_MISSES.WALK_COMPLETED] / [instructions]",
        "expression-txn": "[DTLB_LOAD_MISSES.WALK_COMPLETED] / [TXN]"
    },
    {
        "name": "metric_DTLB 4KB page load MPI",
        "name-txn": "metric_DTLB 4KB page load misses per txn",
        "expression": "[DTLB_LOAD_MISSES.WALK_COMPLETED_4K] / [instructions]",
        "expression-txn": "[DTLB_LOAD_MISSES.WALK_COMPLETED_4K] / [TXN]",
        "origin": "perfspect"
    },
    {
        "name": "metric_DTLB 2MB large page load MPI",
        "name-txn": "metric_DTLB 2MB large page load misses per txn",
        "expression": "[DTLB_LOAD_MISSES.WALK_COMPLETED_2M_4M] / [instructions]",
        "expression-txn": "[DTLB_LOAD_MISSES.WALK_COMPLETED_2M_4M] / [TXN]"
    },
    {
        "name": "metric_DTLB 1GB large page load MPI",
        "name-txn": "metric_DTLB 1GB large page load misses per txn",
        "expression": "[DTLB_LOAD_MISSES.WALK_COMPLETED_1G] / [instructions]",
        "expression-txn": "[DTLB_LOAD_MISSES.WALK_COMPLETED_1G] / [TXN]",
        "origin": "perfspect"
    },
    {
        "name": "metric_DTLB store MPI",
        "name-txn": "metric_DTLB store misses per txn",
        "expression": "[DTLB_STORE_MISSES.WALK_COMPLETED] / [instructions]",
        "expression-txn": "[DTLB_STORE_MISSES.WALK_COMPLETED] / [TXN]"
    },
    {
        "name": "metric_DTLB load miss latency (in core clks)",
        "expression": "[DTLB_LOAD_MISSES.WALK_ACTIVE] / [DTLB_LOAD_MISSES.WALK_COMPLETED]",
        "origin": "perfspect"
    },
    {
        "name": "metric_DTLB store miss latency (in core clks)",
        "expression": "[DTLB_STORE_MISSES.WALK_ACTIVE] / [DTLB_STORE_MISSES.WALK_COMPLETED]",
        "origin": "perfspect"
    },
    {
        "name": "metric_ITLB miss latency (in core clks)",
        "expression": "[ITLB_MISSES.WALK_ACTIVE] / [ITLB_MISSES.WALK_COMPLETED]",
        "origin": "perfspect"
    },
    {
        "name": "metric_NUMA %_Reads addressed to local DRAM",
        "expression": "100 * [UNC_CHA_TOR_INSERTS.IA_MISS.0x40432] / ([UNC_CHA_TOR_INSERTS.IA_MISS.0x40432] + [UNC_CHA_TOR_INSERTS.IA_MISS.0x40431])"
    },
    {
        "name": "metric_NUMA %_Reads addressed to remote DRAM",
        "expression": "100 * [UNC_CHA_TOR_INSERTS.IA_MISS.0x40431] / ([UNC_CHA_TOR_INSERTS.IA_MISS.0x40432] + [UNC_CHA_TOR_INSERTS.IA_MISS.0x40431])"
    },
    {
        "name": "metric_UPI Data transmit BW (MB/sec) (only data)",
        "expression": "([UNC_UPI_TxL_FLITS.ALL_DATA] * (64 / 9.0) / 1000000) / 1"
    },
    {
        "name": "metric_UPI Transmit utilization_% (includes control)",
        "expression": "100 * (([UNC_UPI_TxL_FLITS.ALL_DATA] + [UNC_UPI_TxL_FLITS.NON_DATA]) / 3) / ((((([SYSTEM_TSC_FREQ] / ([CHAS_PER_SOCKET] * [CONST_THREAD_COUNT])) / (([SYSTEM_TSC_FREQ] / ([CHAS_PER_SOCKET] * [CONST_THREAD_COUNT])) - [cstate_pkg/c6-residency/])) * ([UNC_UPI_CLOCKTICKS] - [UNC_UPI_L1_POWER_CYCLES])) * 5 / 6))",
        "origin": "perfspect"
    },
    {
        "name": "metric_uncore frequency GHz",
        "expression": "([UNC_CHA_CLOCKTICKS] / ([CHAS_PER_SOCKET] * [SOCKET_COUNT]) / 1000000000) / 1"
    },
    {
        "name": "metric_package power (watts)",
        "expression": "[power/energy-pkg/]",
        "origin": "perfspect"
    },
    {
        "name": "metric_DRAM power (watts)",
        "expression": "[power/energy-ram/]",
        "origin": "perfspect"
    },
    {
        "name": "metric_core c6 residency %",
        "expression": "100 * [cstate_core/c6-residency/] / [TSC]",
        "origin": "perfspect"
    },
    {
        "name": "metric_package c6 residency %",
        "expression": "100 * [cstate_pkg/c6-residency/] * [CORES_PER_SOCKET] / [TSC]",
        "origin": "perfspect"
    },
    {
        "name": "metric_% Uops delivered from decoded Icache (DSB)",
        "expression": "100 * ([IDQ.DSB_UOPS] / ([IDQ.DSB_UOPS] + [IDQ.MITE_UOPS] + [IDQ.MS_UOPS] + [LSD.UOPS]) )"
    },
    {
        "name": "metric_% Uops delivered from legacy decode pipeline (MITE)",
        "expression": "100 * ([IDQ.MITE_UOPS] / ([IDQ.DSB_UOPS] + [IDQ.MITE_UOPS] + [IDQ.MS_UOPS] + [LSD.UOPS]) )"
    },
    {
        "name": "metric_core % cycles in non AVX license",
        "expression": "(100 * [CORE_POWER.LVL0_TURBO_LICENSE]) / ([CORE_POWER.LVL0_TURBO_LICENSE] + [CORE_POWER.LVL1_TURBO_LICENSE] + [CORE_POWER.LVL2_TURBO_LICENSE])",
        "origin": "perfspect"
    },
    {
        "name": "metric_core % cycles in AVX2 license",
        "expression": "(100 * [CORE_POWER.LVL1_TURBO_LICENSE]) / ([CORE_POWER.LVL0_TURBO_LICENSE] + [CORE_POWER.LVL1_TURBO_LICENSE] + [CORE_POWER.LVL2_TURBO_LICENSE])",
        "origin": "perfspect"
    },
    {
        "name": "metric_core % cycles in AVX-512 license",
        "expression": "(100 * [CORE_POWER.LVL2_TURBO_LICENSE]) / ([CORE_POWER.LVL0_TURBO_LICENSE] + [CORE_POWER.LVL1_TURBO_LICENSE] + [CORE_POWER.LVL2_TURBO_LICENSE])",
        "origin": "perfspect"
    },
    {
        "name": "metric_core initiated local dram read bandwidth (MB/sec)",
        "expression": "[OCR.ALL_READS.L3_MISS_LOCAL_DRAM.ANY_SNOOP] * 64 / 1000000",
        "origin": "perfspect"
    },
    {
        "name": "metric_core initiated remote dram read bandwidth (MB/sec)",
        "expression": "[OCR.ALL_READS.L3_MISS_LOCAL_DRAM.ANY_SNOOP_ocr_msr_3fB80007f7] * 64 / 1000000",
        "origin": "perfspect"
    },
    {
        "name": "metric_memory bandwidth read (MB/sec)",
        "expression": "([UNC_M_CAS_COUNT.RD] * 64 / 1000000) / 1"
    },
    {
        "name": "metric_memory bandwidth write (MB/sec)",
        "expression": "([UNC_M_CAS_COUNT.WR] * 64 / 1000000) / 1"
    },
    {
        "name": "metric_memory bandwidth total (MB/sec)",
        "expression": "(([UNC_M_CAS_COUNT.RD] + [UNC_M_CAS_COUNT.WR]) * 64 / 1000000) / 1"
    },
    {
        "name": "metric_IO_bandwidth_disk_or_network_writes (MB/sec)",
        "expression": "(([UNC_IIO_DATA_REQ_OF_CPU.MEM_READ.PART0] + [UNC_IIO_DATA_REQ_OF_CPU.MEM_READ.PART1] + [UNC_IIO_DATA_REQ_OF_CPU.MEM_READ.PART2] + [UNC_IIO_DATA_REQ_OF_CPU.MEM_READ.PART3]) * 4 / 1000000) / 1"
    },
    {
        "name": "metric_IO_bandwidth_disk_or_network_reads (MB/sec)",
        "expression": "(([UNC_IIO_DATA_REQ_OF_CPU.MEM_WRITE.PART0] + [UNC_IIO_DATA_REQ_OF_CPU.MEM_WRITE.PART1] + [UNC_IIO_DATA_REQ_OF_CPU.MEM_WRITE.PART2] + [UNC_IIO_DATA_REQ_OF_CPU.MEM_WRITE.PART3]) * 4 / 1000000) / 1"
    },
    {
        "name": "metric_TMA_Info_cycles_both_threads_active(%)",
        "expression": "100 * ( (1 - ([CPU_CLK_THREAD_UNHALTED.ONE_THREAD_ACTIVE] / ([CPU_CLK_THREAD_UNHALTED.REF_XCLK_ANY] / 2)) ) if [CONST_THREAD_COUNT] > 1 else 0)",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_Info_CoreIPC",
        "expression": "[instructions] / ([CPU_CLK_UNHALTED.THREAD_ANY] / [CONST_THREAD_COUNT])",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_Frontend_Bound(%)",
        "expression": "100 * ( [IDQ_UOPS_NOT_DELIVERED.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) )"
    },
    {
        "name": "metric_TMA_..Frontend_Latency(%)",
        "expression": "100 * [IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE] /  ([CPU_CLK_UNHALTED.THREAD_ANY] /[CONST_THREAD_COUNT])",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_....ICache_Misses(%)",
        "expression": "100 * ( ( [ICACHE_16B.IFDATA_STALL] + 2 * [ICACHE_16B.IFDATA_STALL:c1:e1] ) / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_....ITLB_Misses(%)",
        "expression": "100 * ( [ICACHE_64B.IFTAG_STALL] / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_....Branch_Resteers(%)",
        "expression": "100 * ( [INT_MISC.CLEAR_RESTEER_CYCLES] / ( [cpu-cycles] ) + ( ( 9 ) * [BACLEARS.ANY] / ( [cpu-cycles] ) ) )"
    },
    {
        "name": "metric_TMA_......Mispredicts_Resteers(%)",
        "expression": "100 * ( ( [BR_MISP_RETIRED.ALL_BRANCHES] / ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] ) ) * [INT_MISC.CLEAR_RESTEER_CYCLES] / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_......Clears_Resteers(%)",
        "expression": "100 * ( ( 1 - ( [BR_MISP_RETIRED.ALL_BRANCHES] / ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] ) ) ) * [INT_MISC.CLEAR_RESTEER_CYCLES] / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_......Unknown_Branches_Resteers(%)",
        "expression": "100 * (9 * [BACLEARS.ANY]) /  [cpu-cycles]",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_..Frontend_Bandwidth(%)",
        "expression": "100 * ([IDQ_UOPS_NOT_DELIVERED.CORE] - 4 * [IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE]) / (4 * ([CPU_CLK_UNHALTED.THREAD_ANY] / [CONST_THREAD_COUNT]))",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_....MITE(%)",
        "expression": "100 * ( ( [IDQ.ALL_MITE_CYCLES_ANY_UOPS] - [IDQ.ALL_MITE_CYCLES_4_UOPS] ) / ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) / 2 )"
    },
    {
        "name": "metric_TMA_....DSB(%)",
        "expression": "100 * ( ( [IDQ.ALL_DSB_CYCLES_ANY_UOPS] - [IDQ.ALL_DSB_CYCLES_4_UOPS] ) / ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) / 2 )"
    },
    {
        "name": "metric_TMA_Bad_Speculation(%)",
        "expression": "100 * ( ( [UOPS_ISSUED.ANY] - ( [UOPS_RETIRED.RETIRE_SLOTS] ) + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) )"
    },
    {
        "name": "metric_TMA_..Branch_Mispredicts(%)",
        "expression": "100 * ( ( [BR_MISP_RETIRED.ALL_BRANCHES] / ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] ) ) * ( ( [UOPS_ISSUED.ANY] - ( [UOPS_RETIRED.RETIRE_SLOTS] ) + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) )"
    },
    {
        "name": "metric_TMA_..Machine_Clears(%)",
        "expression": "100 * ( ( ( [UOPS_ISSUED.ANY] - ( [UOPS_RETIRED.RETIRE_SLOTS] ) + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) - ( ( [BR_MISP_RETIRED.ALL_BRANCHES] / ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] ) ) * ( ( [UOPS_ISSUED.ANY] - ( [UOPS_RETIRED.RETIRE_SLOTS] ) + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) ) )"
    },
    {
        "name": "metric_TMA_Backend_Bound(%)",
        "expression": "100 * ( 1 - ( [IDQ_UOPS_NOT_DELIVERED.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) - ( [UOPS_ISSUED.ANY] + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) )"
    },
    {
        "name": "metric_TMA_..Memory_Bound(%)",
        "expression": "100 * ( ( ( [CYCLE_ACTIVITY.STALLS_MEM_ANY] + [EXE_ACTIVITY.BOUND_ON_STORES] ) / ( [CYCLE_ACTIVITY.STALLS_TOTAL] + ( [EXE_ACTIVITY.1_PORTS_UTIL] + ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) * [EXE_ACTIVITY.2_PORTS_UTIL] ) + [EXE_ACTIVITY.BOUND_ON_STORES] ) ) * ( 1 - ( [IDQ_UOPS_NOT_DELIVERED.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) - ( [UOPS_ISSUED.ANY] + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) )"
    },
    {
        "name": "metric_TMA_....L1_Bound(%)",
        "expression": "100 * ( max( ( [CYCLE_ACTIVITY.STALLS_MEM_ANY] - [CYCLE_ACTIVITY.STALLS_L1D_MISS] ) / ( [cpu-cycles] ) , 0 ) )"
    },
    {
        "name": "metric_TMA_......DTLB_Load(%)",
        "expression": "100 * ( min( ( 9 ) * [DTLB_LOAD_MISSES.STLB_HIT:c1] + [DTLB_LOAD_MISSES.WALK_ACTIVE] , max( [CYCLE_ACTIVITY.CYCLES_MEM_ANY] - [CYCLE_ACTIVITY.CYCLES_L1D_MISS] , 0 ) ) / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_......Lock_Latency(%)",
        "expression": "100 * ( min( ( ( 12 * max( 0 , [MEM_INST_RETIRED.LOCK_LOADS] - [L2_RQSTS.ALL_RFO] ) + ( [MEM_INST_RETIRED.LOCK_LOADS] / [MEM_INST_RETIRED.ALL_STORES] ) * ( ( 11 ) * [L2_RQSTS.RFO_HIT] + ( min( [cpu-cycles] , [OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO] ) ) ) ) / ( [cpu-cycles] ) ) , ( 1 ) ) )"
    },
    {
        "name": "metric_TMA_....L2_Bound(%)",
        "expression": "100 * ( ( ( [MEM_LOAD_RETIRED.L2_HIT] * ( 1 + ( [MEM_LOAD_RETIRED.FB_HIT] / [MEM_LOAD_RETIRED.L1_MISS] ) ) ) / ( ( [MEM_LOAD_RETIRED.L2_HIT] * ( 1 + ( [MEM_LOAD_RETIRED.FB_HIT] / [MEM_LOAD_RETIRED.L1_MISS] ) ) ) + [L1D_PEND_MISS.FB_FULL:c1] ) ) * ( ( [CYCLE_ACTIVITY.STALLS_L1D_MISS] - [CYCLE_ACTIVITY.STALLS_L2_MISS] ) / ( [cpu-cycles] ) ) )"
    },
    {
        "name": "metric_TMA_....L3_Bound(%)",
        "expression": "100 * ( ( [CYCLE_ACTIVITY.STALLS_L2_MISS] - [CYCLE_ACTIVITY.STALLS_L3_MISS] ) / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_......Data_Sharing(%)",
        "expression": "100 * ( min( ( ( ( 47.5 * ( ( ( [cpu-cycles] ) / [ref-cycles] ) * [SYSTEM_TSC_FREQ] / ( 1000000000 ) / ( 1000 / 1000 ) ) ) - ( 3.5 * ( ( ( [cpu-cycles] ) / [ref-cycles] ) * [SYSTEM_TSC_FREQ] / ( 1000000000 ) / ( 1000 / 1000 ) ) ) ) * ( [MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT] + [MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM] * ( 1 - ( [OCR.DEMAND_DATA_RD.L3_HIT.HITM_OTHER_CORE] / ( [OCR.DEMAND_DATA_RD.L3_HIT.HITM_OTHER_CORE] + [OCR.DEMAND_DATA_RD.L3_HIT.HIT_OTHER_CORE_FWD] ) ) ) ) * ( 1 + ( [MEM_LOAD_RETIRED.FB_HIT] / [MEM_LOAD_RETIRED.L1_MISS] ) / 2 ) / ( [cpu-cycles] ) ) , ( 1 ) ) )"
    },
    {
        "name": "metric_TMA_....MEM_Bound(%)",
        "expression": "100 * [CYCLE_ACTIVITY.STALLS_L3_MISS]  / [cpu-cycles]",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_......MEM_Bandwidth(%)",
        "expression": "100 * min([OFFCORE_REQUESTS_OUTSTANDING.L3_MISS_DEMAND_DATA_RD_GE_6] , [cpu-cycles]) / [cpu-cycles]",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_......MEM_Latency(%)",
        "expression": "100 * (min([OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_L3_MISS_DEMAND_DATA_RD] , [cpu-cycles]) - min([OFFCORE_REQUESTS_OUTSTANDING.L3_MISS_DEMAND_DATA_RD_GE_6] , [cpu-cycles]))/ [cpu-cycles]",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_....Store_Bound(%)",
        "expression": "100 * ( [EXE_ACTIVITY.BOUND_ON_STORES] / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_......False_Sharing(%)",
        "expression": "100 * ( min( ( ( ( 110 * ( ( ( [cpu-cycles] ) / [ref-cycles] ) * [SYSTEM_TSC_FREQ] / ( 1000000000 ) / ( 1000 / 1000 ) ) ) * ( [OCR.DEMAND_RFO.L3_MISS.REMOTE_HITM] + [OCR.PF_L2_RFO.L3_MISS.REMOTE_HITM] ) + ( 47.5 * ( ( ( [cpu-cycles] ) / [ref-cycles] ) * [SYSTEM_TSC_FREQ] / ( 1000000000 ) / ( 1000 / 1000 ) ) ) * ( [OCR.DEMAND_RFO.L3_HIT.HITM_OTHER_CORE] + [OCR.PF_L2_RFO.L3_HIT.HITM_OTHER_CORE] ) ) / ( [cpu-cycles] ) ) , ( 1 ) ) )"
    },
    {
        "name": "metric_TMA_..Core_Bound(%)",
        "expression": "100 * ( ( 1 - ( [IDQ_UOPS_NOT_DELIVERED.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) - ( [UOPS_ISSUED.ANY] + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) - ( ( ( [CYCLE_ACTIVITY.STALLS_MEM_ANY] + [EXE_ACTIVITY.BOUND_ON_STORES] ) / ( [CYCLE_ACTIVITY.STALLS_TOTAL] + ( [EXE_ACTIVITY.1_PORTS_UTIL] + ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) * [EXE_ACTIVITY.2_PORTS_UTIL] ) + [EXE_ACTIVITY.BOUND_ON_STORES] ) ) * ( 1 - ( [IDQ_UOPS_NOT_DELIVERED.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) - ( [UOPS_ISSUED.ANY] + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) ) )"
    },
    {
        "name": "metric_TMA_....Ports_Utilization(%)",
        "expression": "100 * ( ( [EXE_ACTIVITY.EXE_BOUND_0_PORTS] + ( [EXE_ACTIVITY.1_PORTS_UTIL] + ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) * [EXE_ACTIVITY.2_PORTS_UTIL] ) ) / ( [cpu-cycles] ) if ( [ARITH.DIVIDER_ACTIVE] < ( [CYCLE_ACTIVITY.STALLS_TOTAL] - [CYCLE_ACTIVITY.STALLS_MEM_ANY] ) ) else ( [EXE_ACTIVITY.1_PORTS_UTIL] + ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) * [EXE_ACTIVITY.2_PORTS_UTIL] ) / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_......Ports_Utilized_0(%)",
        "expression": "100 * (([UOPS_EXECUTED.CORE_CYCLES_NONE] / 2) if ([CONST_THREAD_COUNT] > 1) else [EXE_ACTIVITY.EXE_BOUND_0_PORTS]) / ([CPU_CLK_UNHALTED.THREAD_ANY] / [CONST_THREAD_COUNT])",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_......Ports_Utilized_1(%)",
        "expression": "100 * ((([UOPS_EXECUTED.CORE_CYCLES_GE_1] - [UOPS_EXECUTED.CORE_CYCLES_GE_2]) / 2) if ([CONST_THREAD_COUNT] > 1) else [EXE_ACTIVITY.1_PORTS_UTIL]) / ([CPU_CLK_UNHALTED.THREAD_ANY] / [CONST_THREAD_COUNT])",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_......Ports_Utilized_2(%)",
        "expression": "100 * ((([UOPS_EXECUTED.CORE_CYCLES_GE_2] - [UOPS_EXECUTED.CORE_CYCLES_GE_3]) / 2) if ([CONST_THREAD_COUNT] > 1) else [EXE_ACTIVITY.2_PORTS_UTIL]) / ([CPU_CLK_UNHALTED.THREAD_ANY] / [CONST_THREAD_COUNT])",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_......Ports_Utilized_3m(%)",
        "expression": "100 * [UOPS_EXECUTED.CORE_CYCLES_GE_3] / [CPU_CLK_UNHALTED.THREAD_ANY]",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_Retiring(%)",
        "expression": "100 * ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) )"
    },
    {
        "name": "metric_TMA_..Light_Operations(%)",
        "expression": "100 * ( ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) - ( ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) + [UOPS_RETIRED.MACRO_FUSED] - [instructions] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) )"
    },
    {
        "name": "metric_TMA_....FP_Arith(%)",
        "expression": "100 * ( ( ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) * [UOPS_EXECUTED.X87] / [UOPS_EXECUTED.THREAD] ) + ( ( [FP_ARITH_INST_RETIRED.SCALAR_SINGLE:u0x03] ) / ( [UOPS_RETIRED.RETIRE_SLOTS] ) ) + ( min( ( ( [FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE:u0xfc] ) / ( [UOPS_RETIRED.RETIRE_SLOTS] ) ) , ( 1 ) ) ) )"
    },
    {
        "name": "metric_TMA_......FP_Scalar(%)",
        "expression": "100 * ( ( [FP_ARITH_INST_RETIRED.SCALAR_SINGLE:u0x03] ) / ( [UOPS_RETIRED.RETIRE_SLOTS] ) )"
    },
    {
        "name": "metric_TMA_......FP_Vector(%)",
        "expression": "100 * ( min( ( ( [FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE:u0xfc] ) / ( [UOPS_RETIRED.RETIRE_SLOTS] ) ) , ( 1 ) ) )"
    },
    {
        "name": "metric_TMA_..Heavy_Operations(%)",
        "expression": "100 * ( ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) + [UOPS_RETIRED.MACRO_FUSED] - [instructions] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) )"
    },
    {
        "name": "metric_TMA_..Microcode_Sequencer(%)",
        "expression": "100 * (([UOPS_RETIRED.RETIRE_SLOTS] / [UOPS_ISSUED.ANY]) * [IDQ.MS_UOPS] / (4 * ([CPU_CLK_UNHALTED.THREAD_ANY] / [CONST_THREAD_COUNT])))",
        "origin": "perfspect"
    }
]