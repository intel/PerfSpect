[
    {
        "name": "metric_CPU operating frequency (in GHz)",
        "expression": "(([cpu-cycles] / [ref-cycles] * [SYSTEM_TSC_FREQ]) / 1000000000)"
    },
    {
        "name": "metric_CPU utilization %",
        "expression": "100 * [ref-cycles] / [TSC]"
    },
    {
        "name": "metric_CPU utilization% in kernel mode",
        "expression": "100 * [ref-cycles:k] / [TSC]",
        "origin": "perfspect"
    },
    {
        "name": "metric_CPI",
        "name-txn": "metric_cycles per txn",
        "expression": "[cpu-cycles] / [instructions]",
        "expression-txn": "[cpu-cycles] / [TXN]"
    },
    {
        "name": "metric_kernel_CPI",
        "name-txn": "metric_kernel_cycles per txn",
        "expression": "[cpu-cycles:k] / [instructions:k]",
        "expression-txn": "[cpu-cycles:k] / [TXN]",
        "origin": "perfspect"
    },
    {
        "name": "metric_IPC",
        "name-txn": "metric_txn per cycle",
        "expression": "[instructions] / [cpu-cycles]",
        "expression-txn": "[TXN] / [cpu-cycles]",
        "origin": "perfspect"
    },
    {
        "name": "metric_locks retired per instr",
        "name-txn": "metric_locks retired per txn",
        "expression": "[MEM_INST_RETIRED.LOCK_LOADS] / [instructions]",
        "expression-txn": "[MEM_INST_RETIRED.LOCK_LOADS] / [TXN]",
        "origin": "perfmon website"
    },
    {
        "name": "metric_L1D MPI (includes data+rfo w/ prefetches)",
        "name-txn": "metric_L1D misses per txn (includes data+rfo w/ prefetches)",
        "expression": "[L1D.REPLACEMENT] / [instructions]",
        "expression-txn": "[L1D.REPLACEMENT] / [TXN]"
    },
    {
        "name": "metric_L1D demand data read hits per instr",
        "name-txn": "metric_L1D demand data read hits per txn",
        "expression": "[MEM_LOAD_UOPS_RETIRED.L1_HIT] / [instructions]",
        "expression-txn": "[MEM_LOAD_UOPS_RETIRED.L1_HIT] / [TXN]"
    },
    {
        "name": "metric_L1-I code read misses (w/ prefetches) per instr",
        "name-txn": "metric_L1-I code read misses (w/ prefetches) per txn",
        "expression": "[L2_RQSTS.ALL_CODE_RD] / [instructions]",
        "expression-txn": "[L2_RQSTS.ALL_CODE_RD] / [TXN]"
    },
    {
        "name": "metric_L2 demand data read hits per instr",
        "name-txn": "metric_L2 demand data read hits per txn",
        "expression": "[MEM_LOAD_UOPS_RETIRED.L2_HIT] / [instructions]",
        "expression-txn": "[MEM_LOAD_UOPS_RETIRED.L2_HIT] / [txn]"
    },
    {
        "name": "metric_L2 MPI (includes code+data+rfo w/ prefetches)",
        "name-txn": "metric_L2 misses per txn (includes code+data+rfo w/ prefetches)",
        "expression": "[L2_LINES_IN.ALL] / [instructions]",
        "expression-txn": "[L2_LINES_IN.ALL] / [TXN]"
    },
    {
        "name": "metric_L2 demand data read MPI",
        "name-txn": "metric_L2 demand data read misses per txn",
        "expression": "[MEM_LOAD_UOPS_RETIRED.L2_MISS] / [instructions]",
        "expression-txn": "[MEM_LOAD_UOPS_RETIRED.L2_MISS] / [TXN]"
    },
    {
        "name": "metric_L2 demand code MPI",
        "name-txn": "metric_L2 demand code misses per txn",
        "expression": "[L2_RQSTS.CODE_RD_MISS] / [instructions]",
        "expression-txn": "[L2_RQSTS.CODE_RD_MISS] / [TXN]"
    },
    {
        "name": "metric_LLC MPI",
        "name-txn": "metric_LLC misses per txn (includes code+data+rfo w/ prefetches)",
        "expression": "([UNC_C_TOR_INSERTS.MISS_OPCODE.0x180] + [UNC_C_TOR_INSERTS.MISS_OPCODE.0x181] + [UNC_C_TOR_INSERTS.MISS_OPCODE.0x182] + [UNC_C_TOR_INSERTS.MISS_OPCODE.0x190] + [UNC_C_TOR_INSERTS.MISS_OPCODE.0x191] + [UNC_C_TOR_INSERTS.MISS_OPCODE.0x192] - [UNC_C_TOR_INSERTS.MISS_OPCODE.tid.0x180]) / [instructions]",
        "expression-txn": "([UNC_C_TOR_INSERTS.MISS_OPCODE.0x180] + [UNC_C_TOR_INSERTS.MISS_OPCODE.0x181] + [UNC_C_TOR_INSERTS.MISS_OPCODE.0x182] + [UNC_C_TOR_INSERTS.MISS_OPCODE.0x190] + [UNC_C_TOR_INSERTS.MISS_OPCODE.0x191] + [UNC_C_TOR_INSERTS.MISS_OPCODE.0x192] - [UNC_C_TOR_INSERTS.MISS_OPCODE.tid.0x180]) / [TXN]",
        "origin": "perfspect"
    },
    {
        "name": "metric_LLC code read MPI (demand+prefetch)",
        "name-txn": "metric_LLC code read (demand+prefetch) misses per txn",
        "expression": "([UNC_C_TOR_INSERTS.MISS_OPCODE.0x181] + [UNC_C_TOR_INSERTS.MISS_OPCODE.0x191]) / [instructions]",
        "expression-txn": "([UNC_C_TOR_INSERTS.MISS_OPCODE.0x181] + [UNC_C_TOR_INSERTS.MISS_OPCODE.0x191]) / [TXN]"
    },
    {
        "name": "metric_LLC data read MPI (demand+prefetch)",
        "name-txn": "metric_LLC data read (demand+prefetch) misses per txn",
        "expression": "([UNC_C_TOR_INSERTS.MISS_OPCODE.0x182] + [UNC_C_TOR_INSERTS.MISS_OPCODE.0x192]) / [instructions]",
        "expression-txn": "([UNC_C_TOR_INSERTS.MISS_OPCODE.0x182] + [UNC_C_TOR_INSERTS.MISS_OPCODE.0x192]) / [TXN]"
    },
    {
        "name": "metric_LLC total HITM (per instr)",
        "name-txn": "metric_LLC total HITM per txn (excludes LLC prefetches)",
        "expression": "[OCR.ALL_READS.L3_MISS.REMOTE_HITM] / [instructions]",
        "expression-txn": "[OCR.ALL_READS.L3_MISS.REMOTE_HITM] / [TXN]",
        "origin": "perfspect"
    },
    {
        "name": "metric_LLC total HIT clean line forwards (per instr)",
        "name-txn": "metric_LLC total HIT clean line forwards per txn (excludes LLC prefetches)",
        "expression": "[OCR.ALL_READS.L3_MISS.REMOTE_HIT_FORWARD] / [instructions]",
        "expression-txn": "[OCR.ALL_READS.L3_MISS.REMOTE_HIT_FORWARD] / [TXN]",
        "origin": "perfspect"
    },
    {
        "name": "metric_Average LLC data read miss latency (in clks)",
        "expression": "[UNC_C_TOR_OCCUPANCY.MISS_OPCODE.0x182] / [UNC_C_TOR_INSERTS.MISS_OPCODE.0x182]",
        "origin": "perfspect"
    },
    {
        "name": "metric_Average LLC data read miss latency (in ns)",
        "expression": "(1000000000 * [UNC_C_TOR_OCCUPANCY.MISS_OPCODE.0x182] / [UNC_C_TOR_INSERTS.MISS_OPCODE.0x182]) / ([UNC_C_CLOCKTICKS] / ([CHAS_PER_SOCKET] * [SOCKET_COUNT]) )",
        "origin": "perfspect"
    },
    {
        "name": "metric_Average LLC data read miss latency for LOCAL requests (in ns)",
        "expression": "(1000000000 * [UNC_C_TOR_OCCUPANCY.MISS_LOCAL_OPCODE.0x182] / [UNC_C_TOR_INSERTS.MISS_LOCAL_OPCODE.0x182]) / ([UNC_C_CLOCKTICKS] / ([CHAS_PER_SOCKET] * [SOCKET_COUNT]))",
        "origin": "perfspect"
    },
    {
        "name": "metric_Average LLC data read miss latency for REMOTE requests (in ns)",
        "expression": "(1000000000 * [UNC_C_TOR_OCCUPANCY.MISS_REMOTE_OPCODE.0x182] / [UNC_C_TOR_INSERTS.MISS_REMOTE_OPCODE.0x182]) / ([UNC_C_CLOCKTICKS] / ([CHAS_PER_SOCKET] * [SOCKET_COUNT]))",
        "origin": "perfspect"
    },
    {
        "name": "metric_ITLB MPI",
        "name-txn": "metric_ITLB misses per txn",
        "expression": "[ITLB_MISSES.WALK_COMPLETED] / [instructions]",
        "expression-txn": "[ITLB_MISSES.WALK_COMPLETED] / [TXN]"
    },
    {
        "name": "metric_ITLB large page MPI",
        "name-txn": "metric_ITLB large page misses per txn",
        "expression": "[ITLB_MISSES.WALK_COMPLETED_2M_4M] / [instructions]",
        "expression-txn": "[ITLB_MISSES.WALK_COMPLETED_2M_4M] / [TXN]"
    },
    {
        "name": "metric_DTLB load MPI",
        "name-txn": "metric_DTLB load misses per txn",
        "expression": "[DTLB_LOAD_MISSES.WALK_COMPLETED] / [instructions]",
        "expression-txn": "[DTLB_LOAD_MISSES.WALK_COMPLETED] / [TXN]"
    },
    {
        "name": "metric_DTLB 2MB large page load MPI",
        "name-txn": "metric_DTLB 2MB large page load misses per txn",
        "expression": "[DTLB_LOAD_MISSES.WALK_COMPLETED_2M_4M] / [instructions]",
        "expression-txn": "[DTLB_LOAD_MISSES.WALK_COMPLETED_2M_4M] / [TXN]",
        "origin": "perfspect"
    },
    {
        "name": "metric_DTLB store MPI",
        "name-txn": "metric_DTLB store misses per txn",
        "expression": "[DTLB_STORE_MISSES.WALK_COMPLETED] / [instructions]",
        "expression-txn": "[DTLB_STORE_MISSES.WALK_COMPLETED] / [TXN]"
    },
    {
        "name": "metric_DTLB load miss latency (in core clks)",
        "expression": "[DTLB_LOAD_MISSES.WALK_DURATION] / [DTLB_LOAD_MISSES.WALK_COMPLETED]",
        "origin": "perfspect"
    },
    {
        "name": "metric_DTLB store miss latency (in core clks)",
        "expression": "[DTLB_STORE_MISSES.WALK_DURATION] / [DTLB_STORE_MISSES.WALK_COMPLETED]",
        "origin": "perfspect"
    },
    {
        "name": "metric_NUMA %_Reads addressed to local DRAM",
        "expression": "100 * [UNC_C_TOR_INSERTS.MISS_LOCAL_OPCODE.0x182] / ([UNC_C_TOR_INSERTS.MISS_LOCAL_OPCODE.0x182] + [UNC_C_TOR_INSERTS.MISS_REMOTE_OPCODE.0x182])"
    },
    {
        "name": "metric_NUMA %_Reads addressed to remote DRAM",
        "expression": "100 * [UNC_C_TOR_INSERTS.MISS_REMOTE_OPCODE.0x182] / ([UNC_C_TOR_INSERTS.MISS_LOCAL_OPCODE.0x182] + [UNC_C_TOR_INSERTS.MISS_REMOTE_OPCODE.0x182])"
    },
    {
        "name": "metric_uncore frequency GHz",
        "expression": "([UNC_C_CLOCKTICKS] / ([CORES_PER_SOCKET] * [SOCKET_COUNT]) / 1000000000) / 1"
    },
    {
        "name": "metric_package power (watts)",
        "expression": "[power/energy-pkg/]",
        "origin": "perfspect"
    },
    {
        "name": "metric_DRAM power (watts)",
        "expression": "[power/energy-ram/]",
        "origin": "perfspect"
    },
    {
        "name": "metric_core c6 residency %",
        "expression": "100 * [cstate_core/c6-residency/] / [TSC]",
        "origin": "perfspect"
    },
    {
        "name": "metric_package c6 residency %",
        "expression": "100 * [cstate_pkg/c6-residency/] * [CORES_PER_SOCKET] / [TSC]",
        "origin": "perfspect"
    },
    {
        "name": "metric_% Uops delivered from decoded Icache (DSB)",
        "expression": "100 * ([IDQ.DSB_UOPS] / [UOPS_ISSUED.ANY])"
    },
    {
        "name": "metric_% Uops delivered from legacy decode pipeline (MITE)",
        "expression": "100 * ([IDQ.MITE_UOPS] / [UOPS_ISSUED.ANY])"
    },
    {
        "name": "metric_memory bandwidth read (MB/sec)",
        "expression": "([UNC_M_CAS_COUNT.RD] * 64 / 1000000) / 1"
    },
    {
        "name": "metric_memory bandwidth write (MB/sec)",
        "expression": "([UNC_M_CAS_COUNT.WR] * 64 / 1000000) / 1"
    },
    {
        "name": "metric_memory bandwidth total (MB/sec)",
        "expression": "(([UNC_M_CAS_COUNT.RD] + [UNC_M_CAS_COUNT.WR]) * 64 / 1000000) / 1"
    },
    {
        "name": "metric_IO_bandwidth_disk_or_network_writes (MB/sec)",
        "expression": "([UNC_C_TOR_INSERTS.OPCODE.0x19e] * 64 / 1000000) / 1"
    },
    {
        "name": "metric_IO_bandwidth_disk_or_network_reads (MB/sec)",
        "expression": "(([UNC_C_TOR_INSERTS.OPCODE.0x1c8.tid.0x3e] + [UNC_C_TOR_INSERTS.OPCODE.0x180.tid.0x3e]) * 64 / 1000000) / 1"
    },
    {
        "name": "metric_TMA_Frontend_Bound(%)",
        "expression": "100 * ( [IDQ_UOPS_NOT_DELIVERED.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) )"
    },
    {
        "name": "metric_TMA_..Fetch_Latency(%)",
        "expression": "100 * ( ( 4 ) * [IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) )"
    },
    {
        "name": "metric_TMA_....ICache_Misses(%)",
        "expression": "100 * ( [ICACHE.IFDATA_STALL] / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_....ITLB_Misses(%)",
        "expression": "100 * ( ( 14 * [ITLB_MISSES.STLB_HIT] + [ITLB_MISSES.WALK_DURATION:c1] + 7 * [ITLB_MISSES.WALK_COMPLETED] ) / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_....Branch_Resteers(%)",
        "expression": "100 * ( ( 12 ) * ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] + [BACLEARS.ANY] ) / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_......Mispredicts_Resteers(%)",
        "expression": "100 * ( [BR_MISP_RETIRED.ALL_BRANCHES] * ( ( 12 ) * ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] + [BACLEARS.ANY] ) / ( [cpu-cycles] ) ) / ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] + [BACLEARS.ANY] ) )"
    },
    {
        "name": "metric_TMA_......Clears_Resteers(%)",
        "expression": "100 * ( [MACHINE_CLEARS.COUNT] * ( ( 12 ) * ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] + [BACLEARS.ANY] ) / ( [cpu-cycles] ) ) / ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] + [BACLEARS.ANY] ) )"
    },
    {
        "name": "metric_TMA_......Unknown_Branches(%)",
        "expression": "100 * ( ( ( 12 ) * ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] + [BACLEARS.ANY] ) / ( [cpu-cycles] ) ) - ( [BR_MISP_RETIRED.ALL_BRANCHES] * ( ( 12 ) * ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] + [BACLEARS.ANY] ) / ( [cpu-cycles] ) ) / ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] + [BACLEARS.ANY] ) ) - ( [MACHINE_CLEARS.COUNT] * ( ( 12 ) * ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] + [BACLEARS.ANY] ) / ( [cpu-cycles] ) ) / ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] + [BACLEARS.ANY] ) ) )"
    },
    {
        "name": "metric_TMA_..Fetch_Bandwidth(%)",
        "expression": "100 * ( ( [IDQ_UOPS_NOT_DELIVERED.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) - ( ( 4 ) * [IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) )"
    },
    {
        "name": "metric_TMA_....MITE(%)",
        "expression": "100 * ( ( [IDQ.ALL_MITE_CYCLES_ANY_UOPS] - [IDQ.ALL_MITE_CYCLES_4_UOPS] ) / ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) / 2 )"
    },
    {
        "name": "metric_TMA_....DSB(%)",
        "expression": "100 * ( ( [IDQ.ALL_DSB_CYCLES_ANY_UOPS] - [IDQ.ALL_DSB_CYCLES_4_UOPS] ) / ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) / 2 )"
    },
    {
        "name": "metric_TMA_Bad_Speculation(%)",
        "expression": "100 * ( ( [UOPS_ISSUED.ANY] - ( [UOPS_RETIRED.RETIRE_SLOTS] ) + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) )"
    },
    {
        "name": "metric_TMA_..Branch_Mispredicts(%)",
        "expression": "100 * ( ( [BR_MISP_RETIRED.ALL_BRANCHES] / ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] ) ) * ( ( [UOPS_ISSUED.ANY] - ( [UOPS_RETIRED.RETIRE_SLOTS] ) + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) )"
    },
    {
        "name": "metric_TMA_..Machine_Clears(%)",
        "expression": "100 * ( ( ( [UOPS_ISSUED.ANY] - ( [UOPS_RETIRED.RETIRE_SLOTS] ) + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) - ( ( [BR_MISP_RETIRED.ALL_BRANCHES] / ( [BR_MISP_RETIRED.ALL_BRANCHES] + [MACHINE_CLEARS.COUNT] ) ) * ( ( [UOPS_ISSUED.ANY] - ( [UOPS_RETIRED.RETIRE_SLOTS] ) + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) ) )"
    },
    {
        "name": "metric_TMA_Backend_Bound(%)",
        "expression": "100 * ( 1 - ( ( [IDQ_UOPS_NOT_DELIVERED.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) + ( ( [UOPS_ISSUED.ANY] - ( [UOPS_RETIRED.RETIRE_SLOTS] ) + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) + ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) ) )"
    },
    {
        "name": "metric_TMA_..Memory_Bound(%)",
        "expression": "100 * ( ( ( [CYCLE_ACTIVITY.STALLS_MEM_ANY] + [RESOURCE_STALLS.SB] ) / ( ( [CYCLE_ACTIVITY.STALLS_TOTAL] + [UOPS_EXECUTED.CYCLES_GE_1_UOP_EXEC] - ( [UOPS_EXECUTED.CYCLES_GE_3_UOPS_EXEC] if ( ( [instructions] / ( [cpu-cycles] ) ) > 1.8 ) else [UOPS_EXECUTED.CYCLES_GE_2_UOPS_EXEC] ) - ( [RS_EVENTS.EMPTY_CYCLES] if ( ( ( 4 ) * [IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) > 0.1 ) else 0 ) + [RESOURCE_STALLS.SB] ) ) ) * ( 1 - ( ( [IDQ_UOPS_NOT_DELIVERED.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) + ( ( [UOPS_ISSUED.ANY] - ( [UOPS_RETIRED.RETIRE_SLOTS] ) + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) + ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) ) ) )"
    },
    {
        "name": "metric_TMA_....L1_Bound(%)",
        "expression": "100 * ( max( ( [CYCLE_ACTIVITY.STALLS_MEM_ANY] - [CYCLE_ACTIVITY.STALLS_L1D_MISS] ) / ( [cpu-cycles] ) , 0 ) )"
    },
    {
        "name": "metric_TMA_......DTLB_Load(%)",
        "expression": "100 * ( ( ( 8 ) * [DTLB_LOAD_MISSES.STLB_HIT] + [DTLB_LOAD_MISSES.WALK_DURATION:c1] + 7 * [DTLB_LOAD_MISSES.WALK_COMPLETED] ) / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_....L2_Bound(%)",
        "expression": "100 * ( ( [CYCLE_ACTIVITY.STALLS_L1D_MISS] - [CYCLE_ACTIVITY.STALLS_L2_MISS] ) / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_....L3_Bound(%)",
        "expression": "100 * ( ( [MEM_LOAD_UOPS_RETIRED.L3_HIT] / ( [MEM_LOAD_UOPS_RETIRED.L3_HIT] + ( 7 ) * [MEM_LOAD_UOPS_RETIRED.L3_MISS] ) ) * [CYCLE_ACTIVITY.STALLS_L2_MISS] / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_......Data_Sharing(%)",
        "expression": "100 * ( min( ( ( 43 ) * ( [MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HIT] * ( 1 + [MEM_LOAD_UOPS_RETIRED.HIT_LFB] / ( ( [MEM_LOAD_UOPS_RETIRED.L2_HIT] + [MEM_LOAD_UOPS_RETIRED.L3_HIT] + [MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HIT] + [MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HITM] + [MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_MISS] ) + [MEM_LOAD_UOPS_L3_MISS_RETIRED.LOCAL_DRAM] + [MEM_LOAD_UOPS_L3_MISS_RETIRED.REMOTE_DRAM] + [MEM_LOAD_UOPS_L3_MISS_RETIRED.REMOTE_HITM] + [MEM_LOAD_UOPS_L3_MISS_RETIRED.REMOTE_FWD] ) ) ) / ( [cpu-cycles] ) ) , ( 1 ) ) )"
    },
    {
        "name": "metric_TMA_....MEM_Bound(%)",
        "expression": "100 * (1 - ( [MEM_LOAD_UOPS_RETIRED.L3_HIT] / ([MEM_LOAD_UOPS_RETIRED.L3_HIT] + 7 * [MEM_LOAD_UOPS_RETIRED.L3_MISS])) ) * ([CYCLE_ACTIVITY.STALLS_L2_MISS] / [cpu-cycles])",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_......MEM_Bandwidth(%)",
        "expression": "100 * ( ( min( [cpu-cycles] , [OFFCORE_REQUESTS_OUTSTANDING.DATA_RD:c4] ) ) / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_......MEM_Latency(%)",
        "expression": "100 * ( ( min( [cpu-cycles] , [OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD] ) ) / ( [cpu-cycles] ) - ( ( min( [cpu-cycles] , [OFFCORE_REQUESTS_OUTSTANDING.DATA_RD:c4] ) ) / ( [cpu-cycles] ) ) )"
    },
    {
        "name": "metric_TMA_....Store_Bound(%)",
        "expression": "100 * ( [RESOURCE_STALLS.SB] / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_..Core_Bound(%)",
        "expression": "100 * ( ( 1 - ( ( [IDQ_UOPS_NOT_DELIVERED.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) + ( ( [UOPS_ISSUED.ANY] - ( [UOPS_RETIRED.RETIRE_SLOTS] ) + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) + ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) ) ) - ( ( ( [CYCLE_ACTIVITY.STALLS_MEM_ANY] + [RESOURCE_STALLS.SB] ) / ( ( [CYCLE_ACTIVITY.STALLS_TOTAL] + [UOPS_EXECUTED.CYCLES_GE_1_UOP_EXEC] - ( [UOPS_EXECUTED.CYCLES_GE_3_UOPS_EXEC] if ( ( [instructions] / ( [cpu-cycles] ) ) > 1.8 ) else [UOPS_EXECUTED.CYCLES_GE_2_UOPS_EXEC] ) - ( [RS_EVENTS.EMPTY_CYCLES] if ( ( ( 4 ) * [IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) > 0.1 ) else 0 ) + [RESOURCE_STALLS.SB] ) ) ) * ( 1 - ( ( [IDQ_UOPS_NOT_DELIVERED.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) + ( ( [UOPS_ISSUED.ANY] - ( [UOPS_RETIRED.RETIRE_SLOTS] ) + ( 4 ) * ( ( [INT_MISC.RECOVERY_CYCLES_ANY] / 2 ) if [HYPERTHREADING_ON] else [INT_MISC.RECOVERY_CYCLES] ) ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) + ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) ) ) ) )"
    },
    {
        "name": "metric_TMA_....Ports_Utilization(%)",
        "expression": "100 * ( ( ( ( [CYCLE_ACTIVITY.STALLS_TOTAL] + [UOPS_EXECUTED.CYCLES_GE_1_UOP_EXEC] - ( [UOPS_EXECUTED.CYCLES_GE_3_UOPS_EXEC] if ( ( [instructions] / ( [cpu-cycles] ) ) > 1.8 ) else [UOPS_EXECUTED.CYCLES_GE_2_UOPS_EXEC] ) - ( [RS_EVENTS.EMPTY_CYCLES] if ( ( ( 4 ) * [IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) > 0.1 ) else 0 ) + [RESOURCE_STALLS.SB] ) ) - [RESOURCE_STALLS.SB] - [CYCLE_ACTIVITY.STALLS_MEM_ANY] ) / ( [cpu-cycles] ) )"
    },
    {
        "name": "metric_TMA_......Ports_Utilized_0(%)",
        "expression": "100 * (([UOPS_EXECUTED.CORE_i1_c1] / [CONST_THREAD_COUNT]) if ([CONST_THREAD_COUNT] > 1) else ([RS_EVENTS.EMPTY_CYCLES] if ([CYCLE_ACTIVITY.STALLS_TOTAL] - ([IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE] / ([CPU_CLK_UNHALTED.THREAD_ANY] / [CONST_THREAD_COUNT])) ) > 0.1 else 0)) / ([CPU_CLK_UNHALTED.THREAD_ANY] / [CONST_THREAD_COUNT]) ",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_......Ports_Utilized_1(%)",
        "expression": "100 * (([UOPS_EXECUTED.CORE_c1] - [UOPS_EXECUTED.CORE_c2]) / [CONST_THREAD_COUNT]) / ([CPU_CLK_UNHALTED.THREAD_ANY] / [CONST_THREAD_COUNT])",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_......Ports_Utilized_2(%)",
        "expression": "100 * (([UOPS_EXECUTED.CORE_c2] - [UOPS_EXECUTED.CORE_c3]) / [CONST_THREAD_COUNT]) / ([CPU_CLK_UNHALTED.THREAD_ANY] / [CONST_THREAD_COUNT])",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_......Ports_Utilized_3m(%)",
        "expression": "100 * ([UOPS_EXECUTED.CORE_c3] / [CONST_THREAD_COUNT]) / ([CPU_CLK_UNHALTED.THREAD_ANY] / [CONST_THREAD_COUNT])",
        "origin": "perfspect"
    },
    {
        "name": "metric_TMA_Retiring(%)",
        "expression": "100 * ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) )"
    },
    {
        "name": "metric_TMA_..Light_Operations(%)",
        "expression": "100 * ( ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) - ( ( ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / [UOPS_ISSUED.ANY] ) * [IDQ.MS_UOPS] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) ) )"
    },
    {
        "name": "metric_TMA_....FP_Arith(%)",
        "expression": "100 * ( ( [INST_RETIRED.X87] * ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / [instructions] ) / ( [UOPS_RETIRED.RETIRE_SLOTS] ) ) + ( ( [FP_ARITH_INST_RETIRED.SCALAR_SINGLE:u0x03] ) / ( [UOPS_RETIRED.RETIRE_SLOTS] ) ) + ( min( ( ( [FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE:u0x3c] ) / ( [UOPS_RETIRED.RETIRE_SLOTS] ) ) , ( 1 ) ) ) )"
    },
    {
        "name": "metric_TMA_......FP_Scalar(%)",
        "expression": "100 * ( ( [FP_ARITH_INST_RETIRED.SCALAR_SINGLE:u0x03] ) / ( [UOPS_RETIRED.RETIRE_SLOTS] ) )"
    },
    {
        "name": "metric_TMA_......FP_Vector(%)",
        "expression": "100 * ( min( ( ( [FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE:u0x3c] ) / ( [UOPS_RETIRED.RETIRE_SLOTS] ) ) , ( 1 ) ) )"
    },
    {
        "name": "metric_TMA_..Heavy_Operations(%)",
        "expression": "100 * ( ( ( ( [UOPS_RETIRED.RETIRE_SLOTS] ) / [UOPS_ISSUED.ANY] ) * [IDQ.MS_UOPS] / ( ( 4 ) * ( ( [CPU_CLK_UNHALTED.THREAD_ANY] / 2 ) if [HYPERTHREADING_ON] else ( [cpu-cycles] ) ) ) ) )"
    },
    {
        "name": "metric_TMA_..Microcode_Sequencer(%)",
        "expression": "100 * (([UOPS_RETIRED.RETIRE_SLOTS] / [UOPS_ISSUED.ANY]) * [IDQ.MS_UOPS] )/ (4 * ([CPU_CLK_UNHALTED.THREAD_ANY] / [CONST_THREAD_COUNT]))",
        "origin": "perfspect"
    }
]